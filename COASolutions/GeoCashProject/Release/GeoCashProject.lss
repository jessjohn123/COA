
GeoCashProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011c  00800100  00004c0c  00004ca0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004c0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000328  0080021c  0080021c  00004dbc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004dbc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004e18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000009f8  00000000  00000000  00004e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001fe99  00000000  00000000  00005850  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003f84  00000000  00000000  000256e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000553a  00000000  00000000  0002966d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00002618  00000000  00000000  0002eba8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004706  00000000  00000000  000311c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000e1c5  00000000  00000000  000358c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000e70  00000000  00000000  00043a8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 44 01 	jmp	0x288	; 0x288 <__dtors_end>
       4:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
       8:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
       c:	0c 94 0d 17 	jmp	0x2e1a	; 0x2e1a <__vector_3>
      10:	0c 94 0d 17 	jmp	0x2e1a	; 0x2e1a <__vector_3>
      14:	0c 94 0d 17 	jmp	0x2e1a	; 0x2e1a <__vector_3>
      18:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      1c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      20:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      24:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      28:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      2c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      30:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      34:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      38:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      3c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      40:	0c 94 cf 0a 	jmp	0x159e	; 0x159e <__vector_16>
      44:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      48:	0c 94 d0 09 	jmp	0x13a0	; 0x13a0 <__vector_18>
      4c:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__vector_19>
      50:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      54:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      58:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      5c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      60:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      64:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      68:	03 6e       	ori	r16, 0xE3	; 227
      6a:	db 36       	cpi	r29, 0x6B	; 107
      6c:	3d 9a       	sbi	0x07, 5	; 7
      6e:	99 99       	sbic	0x13, 1	; 19
      70:	99 3d       	cpi	r25, 0xD9	; 217
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	3e 00       	.word	0x003e	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 4a       	sbci	r16, 0xA8	; 168
      7e:	d7 3b       	cpi	r29, 0xB7	; 183
      80:	3b ce       	rjmp	.-906    	; 0xfffffcf8 <__eeprom_end+0xff7efcf8>
      82:	01 6e       	ori	r16, 0xE1	; 225
      84:	84 bc       	out	0x24, r8	; 36
      86:	bf fd       	.word	0xfdbf	; ????
      88:	c1 2f       	mov	r28, r17
      8a:	3d 6c       	ori	r19, 0xCD	; 205
      8c:	74 31       	cpi	r23, 0x14	; 20
      8e:	9a bd       	out	0x2a, r25	; 42
      90:	56 83       	std	Z+6, r21	; 0x06
      92:	3d da       	rcall	.-2950   	; 0xfffff50e <__eeprom_end+0xff7ef50e>
      94:	3d 00       	.word	0x003d	; ????
      96:	c7 7f       	andi	r28, 0xF7	; 247
      98:	11 be       	out	0x31, r1	; 49
      9a:	d9 e4       	ldi	r29, 0x49	; 73
      9c:	bb 4c       	sbci	r27, 0xCB	; 203
      9e:	3e 91       	ld	r19, -X
      a0:	6b aa       	std	Y+51, r6	; 0x33
      a2:	aa be       	out	0x3a, r10	; 58
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	3f 07       	cpc	r19, r31
      aa:	2c 7a       	andi	r18, 0xAC	; 172
      ac:	a5 ba       	out	0x15, r10	; 21
      ae:	6c c5       	rjmp	.+2776   	; 0xb88 <_Z15DMtoDDLongitude6StringRf+0x92>
      b0:	90 da       	rcall	.-2784   	; 0xfffff5d2 <__eeprom_end+0xff7ef5d2>
      b2:	3b 93       	.word	0x933b	; ????
      b4:	65 fc       	sbrc	r6, 5
      b6:	8b bc       	out	0x2b, r8	; 43
      b8:	53 f8       	bld	r5, 3
      ba:	10 fd       	sbrc	r17, 0
      bc:	3c 56       	subi	r19, 0x6C	; 108
      be:	92 83       	std	Z+2, r25	; 0x02
      c0:	4d bd       	out	0x2d, r20	; 45
      c2:	87 9d       	mul	r24, r7
      c4:	3a b6       	in	r3, 0x3a	; 58
      c6:	3d cb       	rjmp	.-2438   	; 0xfffff742 <__eeprom_end+0xff7ef742>
      c8:	c9 bf       	out	0x39, r28	; 57
      ca:	5b be       	out	0x3b, r5	; 59
      cc:	73 da       	rcall	.-2842   	; 0xfffff5b4 <__eeprom_end+0xff7ef5b4>
      ce:	0f c9       	rjmp	.-3554   	; 0xfffff2ee <__eeprom_end+0xff7ef2ee>
      d0:	3f 05       	cpc	r19, r15
      d2:	a8 4c       	sbci	r26, 0xC8	; 200
      d4:	cd b2       	in	r12, 0x1d	; 29
      d6:	d4 4e       	sbci	r29, 0xE4	; 228
      d8:	b9 38       	cpi	r27, 0x89	; 137
      da:	36 a9       	ldd	r19, Z+54	; 0x36
      dc:	02 0c       	add	r0, r2
      de:	50 b9       	out	0x00, r21	; 0
      e0:	91 86       	std	Z+9, r9	; 0x09
      e2:	88 08       	sbc	r8, r8
      e4:	3c a6       	std	Y+44, r3	; 0x2c
      e6:	aa aa       	std	Y+50, r10	; 0x32
      e8:	2a be       	out	0x3a, r2	; 58
      ea:	00 00       	nop
      ec:	00 80       	ld	r0, Z
      ee:	3f 00       	.word	0x003f	; ????

000000f0 <__trampolines_end>:
      f0:	00 00       	nop
      f2:	00 08       	sbc	r0, r0
      f4:	00 02       	muls	r16, r16
      f6:	01 00       	.word	0x0001	; ????
      f8:	00 03       	mulsu	r16, r16
      fa:	04 07       	cpc	r16, r20
	...

00000104 <digital_pin_to_bit_mask_PGM>:
     104:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     114:	04 08 10 20                                         ... 

00000118 <digital_pin_to_port_PGM>:
     118:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     128:	03 03 03 03                                         ....

0000012c <port_to_input_PGM>:
     12c:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000136 <port_to_output_PGM>:
     136:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

00000140 <port_to_mode_PGM>:
     140:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

0000014a <pstr_nan>:
     14a:	4e 41 4e                                            NAN

0000014d <pstr_inity>:
     14d:	49 4e 49 54 59                                      INITY

00000152 <pstr_inf>:
     152:	49 4e 46                                            INF

00000155 <pwr_m10>:
     155:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     165:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000016d <pwr_p10>:
     16d:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     17d:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     18d:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     19d:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     1ad:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     1bd:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     1cd:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     1dd:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     1ed:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     1fd:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     20d:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     21d:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     22d:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     23d:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     24d:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     25d:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     26d:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     27d:	3d 27 00                                            ='.

00000280 <__ctors_start>:
     280:	1f 07       	cpc	r17, r31
     282:	32 0a       	sbc	r3, r18
     284:	f0 13       	cpse	r31, r16

00000286 <__ctors_end>:
     286:	42 07       	cpc	r20, r18

00000288 <__dtors_end>:
     288:	11 24       	eor	r1, r1
     28a:	1f be       	out	0x3f, r1	; 63
     28c:	cf ef       	ldi	r28, 0xFF	; 255
     28e:	d8 e0       	ldi	r29, 0x08	; 8
     290:	de bf       	out	0x3e, r29	; 62
     292:	cd bf       	out	0x3d, r28	; 61

00000294 <__do_copy_data>:
     294:	12 e0       	ldi	r17, 0x02	; 2
     296:	a0 e0       	ldi	r26, 0x00	; 0
     298:	b1 e0       	ldi	r27, 0x01	; 1
     29a:	ec e0       	ldi	r30, 0x0C	; 12
     29c:	fc e4       	ldi	r31, 0x4C	; 76
     29e:	02 c0       	rjmp	.+4      	; 0x2a4 <__do_copy_data+0x10>
     2a0:	05 90       	lpm	r0, Z+
     2a2:	0d 92       	st	X+, r0
     2a4:	ac 31       	cpi	r26, 0x1C	; 28
     2a6:	b1 07       	cpc	r27, r17
     2a8:	d9 f7       	brne	.-10     	; 0x2a0 <__do_copy_data+0xc>

000002aa <__do_clear_bss>:
     2aa:	25 e0       	ldi	r18, 0x05	; 5
     2ac:	ac e1       	ldi	r26, 0x1C	; 28
     2ae:	b2 e0       	ldi	r27, 0x02	; 2
     2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <.do_clear_bss_start>

000002b2 <.do_clear_bss_loop>:
     2b2:	1d 92       	st	X+, r1

000002b4 <.do_clear_bss_start>:
     2b4:	a4 34       	cpi	r26, 0x44	; 68
     2b6:	b2 07       	cpc	r27, r18
     2b8:	e1 f7       	brne	.-8      	; 0x2b2 <.do_clear_bss_loop>

000002ba <__do_global_ctors>:
     2ba:	11 e0       	ldi	r17, 0x01	; 1
     2bc:	c3 e4       	ldi	r28, 0x43	; 67
     2be:	d1 e0       	ldi	r29, 0x01	; 1
     2c0:	04 c0       	rjmp	.+8      	; 0x2ca <__do_global_ctors+0x10>
     2c2:	21 97       	sbiw	r28, 0x01	; 1
     2c4:	fe 01       	movw	r30, r28
     2c6:	0e 94 02 1a 	call	0x3404	; 0x3404 <__tablejump2__>
     2ca:	c0 34       	cpi	r28, 0x40	; 64
     2cc:	d1 07       	cpc	r29, r17
     2ce:	c9 f7       	brne	.-14     	; 0x2c2 <__do_global_ctors+0x8>
     2d0:	0e 94 af 07 	call	0xf5e	; 0xf5e <main>
     2d4:	0c 94 f9 25 	jmp	0x4bf2	; 0x4bf2 <__do_global_dtors>

000002d8 <__bad_interrupt>:
     2d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002dc <_Z9haversineRK8PositionS1_>:
     2dc:	4f 92       	push	r4
     2de:	5f 92       	push	r5
     2e0:	6f 92       	push	r6
     2e2:	7f 92       	push	r7
     2e4:	8f 92       	push	r8
     2e6:	9f 92       	push	r9
     2e8:	af 92       	push	r10
     2ea:	bf 92       	push	r11
     2ec:	cf 92       	push	r12
     2ee:	df 92       	push	r13
     2f0:	ef 92       	push	r14
     2f2:	ff 92       	push	r15
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	00 d0       	rcall	.+0      	; 0x2fa <_Z9haversineRK8PositionS1_+0x1e>
     2fa:	00 d0       	rcall	.+0      	; 0x2fc <_Z9haversineRK8PositionS1_+0x20>
     2fc:	cd b7       	in	r28, 0x3d	; 61
     2fe:	de b7       	in	r29, 0x3e	; 62
     300:	7c 01       	movw	r14, r24
     302:	6b 01       	movw	r12, r22
     304:	dc 01       	movw	r26, r24
     306:	4d 90       	ld	r4, X+
     308:	5d 90       	ld	r5, X+
     30a:	6d 90       	ld	r6, X+
     30c:	7c 90       	ld	r7, X
     30e:	db 01       	movw	r26, r22
     310:	8d 91       	ld	r24, X+
     312:	9d 91       	ld	r25, X+
     314:	0d 90       	ld	r0, X+
     316:	bc 91       	ld	r27, X
     318:	a0 2d       	mov	r26, r0
     31a:	89 83       	std	Y+1, r24	; 0x01
     31c:	9a 83       	std	Y+2, r25	; 0x02
     31e:	ab 83       	std	Y+3, r26	; 0x03
     320:	bc 83       	std	Y+4, r27	; 0x04
     322:	9c 01       	movw	r18, r24
     324:	ad 01       	movw	r20, r26
     326:	c3 01       	movw	r24, r6
     328:	b2 01       	movw	r22, r4
     32a:	0e 94 17 1a 	call	0x342e	; 0x342e <__subsf3>
     32e:	25 e3       	ldi	r18, 0x35	; 53
     330:	3a ef       	ldi	r19, 0xFA	; 250
     332:	4e e8       	ldi	r20, 0x8E	; 142
     334:	5c e3       	ldi	r21, 0x3C	; 60
     336:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	40 e0       	ldi	r20, 0x00	; 0
     340:	5f e3       	ldi	r21, 0x3F	; 63
     342:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     346:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <sin>
     34a:	4b 01       	movw	r8, r22
     34c:	5c 01       	movw	r10, r24
     34e:	f6 01       	movw	r30, r12
     350:	24 81       	ldd	r18, Z+4	; 0x04
     352:	35 81       	ldd	r19, Z+5	; 0x05
     354:	46 81       	ldd	r20, Z+6	; 0x06
     356:	57 81       	ldd	r21, Z+7	; 0x07
     358:	d7 01       	movw	r26, r14
     35a:	14 96       	adiw	r26, 0x04	; 4
     35c:	6d 91       	ld	r22, X+
     35e:	7d 91       	ld	r23, X+
     360:	8d 91       	ld	r24, X+
     362:	9c 91       	ld	r25, X
     364:	17 97       	sbiw	r26, 0x07	; 7
     366:	0e 94 17 1a 	call	0x342e	; 0x342e <__subsf3>
     36a:	25 e3       	ldi	r18, 0x35	; 53
     36c:	3a ef       	ldi	r19, 0xFA	; 250
     36e:	4e e8       	ldi	r20, 0x8E	; 142
     370:	5c e3       	ldi	r21, 0x3C	; 60
     372:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	40 e0       	ldi	r20, 0x00	; 0
     37c:	5f e3       	ldi	r21, 0x3F	; 63
     37e:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     382:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <sin>
     386:	6b 01       	movw	r12, r22
     388:	7c 01       	movw	r14, r24
     38a:	25 e3       	ldi	r18, 0x35	; 53
     38c:	3a ef       	ldi	r19, 0xFA	; 250
     38e:	4e e8       	ldi	r20, 0x8E	; 142
     390:	5c e3       	ldi	r21, 0x3C	; 60
     392:	c3 01       	movw	r24, r6
     394:	b2 01       	movw	r22, r4
     396:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     39a:	0e 94 16 1b 	call	0x362c	; 0x362c <cos>
     39e:	2b 01       	movw	r4, r22
     3a0:	3c 01       	movw	r6, r24
     3a2:	25 e3       	ldi	r18, 0x35	; 53
     3a4:	3a ef       	ldi	r19, 0xFA	; 250
     3a6:	4e e8       	ldi	r20, 0x8E	; 142
     3a8:	5c e3       	ldi	r21, 0x3C	; 60
     3aa:	69 81       	ldd	r22, Y+1	; 0x01
     3ac:	7a 81       	ldd	r23, Y+2	; 0x02
     3ae:	8b 81       	ldd	r24, Y+3	; 0x03
     3b0:	9c 81       	ldd	r25, Y+4	; 0x04
     3b2:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     3b6:	0e 94 16 1b 	call	0x362c	; 0x362c <cos>
     3ba:	69 83       	std	Y+1, r22	; 0x01
     3bc:	7a 83       	std	Y+2, r23	; 0x02
     3be:	8b 83       	std	Y+3, r24	; 0x03
     3c0:	9c 83       	std	Y+4, r25	; 0x04
     3c2:	a5 01       	movw	r20, r10
     3c4:	94 01       	movw	r18, r8
     3c6:	c5 01       	movw	r24, r10
     3c8:	b4 01       	movw	r22, r8
     3ca:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     3ce:	4b 01       	movw	r8, r22
     3d0:	5c 01       	movw	r10, r24
     3d2:	29 81       	ldd	r18, Y+1	; 0x01
     3d4:	3a 81       	ldd	r19, Y+2	; 0x02
     3d6:	4b 81       	ldd	r20, Y+3	; 0x03
     3d8:	5c 81       	ldd	r21, Y+4	; 0x04
     3da:	c3 01       	movw	r24, r6
     3dc:	b2 01       	movw	r22, r4
     3de:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     3e2:	2b 01       	movw	r4, r22
     3e4:	3c 01       	movw	r6, r24
     3e6:	a7 01       	movw	r20, r14
     3e8:	96 01       	movw	r18, r12
     3ea:	c7 01       	movw	r24, r14
     3ec:	b6 01       	movw	r22, r12
     3ee:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     3f2:	9b 01       	movw	r18, r22
     3f4:	ac 01       	movw	r20, r24
     3f6:	c3 01       	movw	r24, r6
     3f8:	b2 01       	movw	r22, r4
     3fa:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     3fe:	9b 01       	movw	r18, r22
     400:	ac 01       	movw	r20, r24
     402:	c5 01       	movw	r24, r10
     404:	b4 01       	movw	r22, r8
     406:	0e 94 18 1a 	call	0x3430	; 0x3430 <__addsf3>
     40a:	0e 94 a5 1d 	call	0x3b4a	; 0x3b4a <sqrt>
     40e:	0e 94 84 1a 	call	0x3508	; 0x3508 <asin>
     412:	9b 01       	movw	r18, r22
     414:	ac 01       	movw	r20, r24
     416:	0e 94 18 1a 	call	0x3430	; 0x3430 <__addsf3>
     41a:	0f 90       	pop	r0
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	0f 90       	pop	r0
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	ff 90       	pop	r15
     428:	ef 90       	pop	r14
     42a:	df 90       	pop	r13
     42c:	cf 90       	pop	r12
     42e:	bf 90       	pop	r11
     430:	af 90       	pop	r10
     432:	9f 90       	pop	r9
     434:	8f 90       	pop	r8
     436:	7f 90       	pop	r7
     438:	6f 90       	pop	r6
     43a:	5f 90       	pop	r5
     43c:	4f 90       	pop	r4
     43e:	08 95       	ret

00000440 <_Z18GreatCircleBearingRK8PositionS1_>:
     440:	2f 92       	push	r2
     442:	3f 92       	push	r3
     444:	4f 92       	push	r4
     446:	5f 92       	push	r5
     448:	6f 92       	push	r6
     44a:	7f 92       	push	r7
     44c:	8f 92       	push	r8
     44e:	9f 92       	push	r9
     450:	af 92       	push	r10
     452:	bf 92       	push	r11
     454:	cf 92       	push	r12
     456:	df 92       	push	r13
     458:	ef 92       	push	r14
     45a:	ff 92       	push	r15
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	cd b7       	in	r28, 0x3d	; 61
     466:	de b7       	in	r29, 0x3e	; 62
     468:	2c 97       	sbiw	r28, 0x0c	; 12
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	f8 94       	cli
     46e:	de bf       	out	0x3e, r29	; 62
     470:	0f be       	out	0x3f, r0	; 63
     472:	cd bf       	out	0x3d, r28	; 61
     474:	8c 01       	movw	r16, r24
     476:	1b 01       	movw	r2, r22
     478:	25 e3       	ldi	r18, 0x35	; 53
     47a:	3a ef       	ldi	r19, 0xFA	; 250
     47c:	4e e8       	ldi	r20, 0x8E	; 142
     47e:	5c e3       	ldi	r21, 0x3C	; 60
     480:	fc 01       	movw	r30, r24
     482:	60 81       	ld	r22, Z
     484:	71 81       	ldd	r23, Z+1	; 0x01
     486:	82 81       	ldd	r24, Z+2	; 0x02
     488:	93 81       	ldd	r25, Z+3	; 0x03
     48a:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     48e:	2b 01       	movw	r4, r22
     490:	3c 01       	movw	r6, r24
     492:	25 e3       	ldi	r18, 0x35	; 53
     494:	3a ef       	ldi	r19, 0xFA	; 250
     496:	4e e8       	ldi	r20, 0x8E	; 142
     498:	5c e3       	ldi	r21, 0x3C	; 60
     49a:	f1 01       	movw	r30, r2
     49c:	60 81       	ld	r22, Z
     49e:	71 81       	ldd	r23, Z+1	; 0x01
     4a0:	82 81       	ldd	r24, Z+2	; 0x02
     4a2:	93 81       	ldd	r25, Z+3	; 0x03
     4a4:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     4a8:	6b 01       	movw	r12, r22
     4aa:	7c 01       	movw	r14, r24
     4ac:	c3 01       	movw	r24, r6
     4ae:	b2 01       	movw	r22, r4
     4b0:	0e 94 16 1b 	call	0x362c	; 0x362c <cos>
     4b4:	4b 01       	movw	r8, r22
     4b6:	5c 01       	movw	r10, r24
     4b8:	c7 01       	movw	r24, r14
     4ba:	b6 01       	movw	r22, r12
     4bc:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <sin>
     4c0:	69 83       	std	Y+1, r22	; 0x01
     4c2:	7a 83       	std	Y+2, r23	; 0x02
     4c4:	8b 83       	std	Y+3, r24	; 0x03
     4c6:	9c 83       	std	Y+4, r25	; 0x04
     4c8:	c3 01       	movw	r24, r6
     4ca:	b2 01       	movw	r22, r4
     4cc:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <sin>
     4d0:	6d 83       	std	Y+5, r22	; 0x05
     4d2:	7e 83       	std	Y+6, r23	; 0x06
     4d4:	8f 83       	std	Y+7, r24	; 0x07
     4d6:	98 87       	std	Y+8, r25	; 0x08
     4d8:	c7 01       	movw	r24, r14
     4da:	b6 01       	movw	r22, r12
     4dc:	0e 94 16 1b 	call	0x362c	; 0x362c <cos>
     4e0:	2b 01       	movw	r4, r22
     4e2:	3c 01       	movw	r6, r24
     4e4:	25 e3       	ldi	r18, 0x35	; 53
     4e6:	3a ef       	ldi	r19, 0xFA	; 250
     4e8:	4e e8       	ldi	r20, 0x8E	; 142
     4ea:	5c e3       	ldi	r21, 0x3C	; 60
     4ec:	f1 01       	movw	r30, r2
     4ee:	64 81       	ldd	r22, Z+4	; 0x04
     4f0:	75 81       	ldd	r23, Z+5	; 0x05
     4f2:	86 81       	ldd	r24, Z+6	; 0x06
     4f4:	97 81       	ldd	r25, Z+7	; 0x07
     4f6:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     4fa:	6b 01       	movw	r12, r22
     4fc:	7c 01       	movw	r14, r24
     4fe:	25 e3       	ldi	r18, 0x35	; 53
     500:	3a ef       	ldi	r19, 0xFA	; 250
     502:	4e e8       	ldi	r20, 0x8E	; 142
     504:	5c e3       	ldi	r21, 0x3C	; 60
     506:	f8 01       	movw	r30, r16
     508:	64 81       	ldd	r22, Z+4	; 0x04
     50a:	75 81       	ldd	r23, Z+5	; 0x05
     50c:	86 81       	ldd	r24, Z+6	; 0x06
     50e:	97 81       	ldd	r25, Z+7	; 0x07
     510:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     514:	9b 01       	movw	r18, r22
     516:	ac 01       	movw	r20, r24
     518:	c7 01       	movw	r24, r14
     51a:	b6 01       	movw	r22, r12
     51c:	0e 94 17 1a 	call	0x342e	; 0x342e <__subsf3>
     520:	6b 01       	movw	r12, r22
     522:	7c 01       	movw	r14, r24
     524:	0e 94 16 1b 	call	0x362c	; 0x362c <cos>
     528:	69 87       	std	Y+9, r22	; 0x09
     52a:	7a 87       	std	Y+10, r23	; 0x0a
     52c:	8b 87       	std	Y+11, r24	; 0x0b
     52e:	9c 87       	std	Y+12, r25	; 0x0c
     530:	c7 01       	movw	r24, r14
     532:	b6 01       	movw	r22, r12
     534:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <sin>
     538:	6b 01       	movw	r12, r22
     53a:	7c 01       	movw	r14, r24
     53c:	29 81       	ldd	r18, Y+1	; 0x01
     53e:	3a 81       	ldd	r19, Y+2	; 0x02
     540:	4b 81       	ldd	r20, Y+3	; 0x03
     542:	5c 81       	ldd	r21, Y+4	; 0x04
     544:	c5 01       	movw	r24, r10
     546:	b4 01       	movw	r22, r8
     548:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     54c:	4b 01       	movw	r8, r22
     54e:	5c 01       	movw	r10, r24
     550:	a3 01       	movw	r20, r6
     552:	92 01       	movw	r18, r4
     554:	6d 81       	ldd	r22, Y+5	; 0x05
     556:	7e 81       	ldd	r23, Y+6	; 0x06
     558:	8f 81       	ldd	r24, Y+7	; 0x07
     55a:	98 85       	ldd	r25, Y+8	; 0x08
     55c:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     560:	29 85       	ldd	r18, Y+9	; 0x09
     562:	3a 85       	ldd	r19, Y+10	; 0x0a
     564:	4b 85       	ldd	r20, Y+11	; 0x0b
     566:	5c 85       	ldd	r21, Y+12	; 0x0c
     568:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     56c:	9b 01       	movw	r18, r22
     56e:	ac 01       	movw	r20, r24
     570:	c5 01       	movw	r24, r10
     572:	b4 01       	movw	r22, r8
     574:	0e 94 17 1a 	call	0x342e	; 0x342e <__subsf3>
     578:	4b 01       	movw	r8, r22
     57a:	5c 01       	movw	r10, r24
     57c:	a3 01       	movw	r20, r6
     57e:	92 01       	movw	r18, r4
     580:	c7 01       	movw	r24, r14
     582:	b6 01       	movw	r22, r12
     584:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     588:	a5 01       	movw	r20, r10
     58a:	94 01       	movw	r18, r8
     58c:	0e 94 b2 1a 	call	0x3564	; 0x3564 <atan2>
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	44 e3       	ldi	r20, 0x34	; 52
     596:	53 e4       	ldi	r21, 0x43	; 67
     598:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     59c:	2b ed       	ldi	r18, 0xDB	; 219
     59e:	3f e0       	ldi	r19, 0x0F	; 15
     5a0:	49 e4       	ldi	r20, 0x49	; 73
     5a2:	50 e4       	ldi	r21, 0x40	; 64
     5a4:	0e 94 1b 1b 	call	0x3636	; 0x3636 <__divsf3>
     5a8:	6b 01       	movw	r12, r22
     5aa:	7c 01       	movw	r14, r24
     5ac:	20 e0       	ldi	r18, 0x00	; 0
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	a9 01       	movw	r20, r18
     5b2:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     5b6:	87 ff       	sbrs	r24, 7
     5b8:	0a c0       	rjmp	.+20     	; 0x5ce <_Z18GreatCircleBearingRK8PositionS1_+0x18e>
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	44 eb       	ldi	r20, 0xB4	; 180
     5c0:	53 e4       	ldi	r21, 0x43	; 67
     5c2:	c7 01       	movw	r24, r14
     5c4:	b6 01       	movw	r22, r12
     5c6:	0e 94 18 1a 	call	0x3430	; 0x3430 <__addsf3>
     5ca:	6b 01       	movw	r12, r22
     5cc:	7c 01       	movw	r14, r24
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	30 e8       	ldi	r19, 0x80	; 128
     5d2:	43 eb       	ldi	r20, 0xB3	; 179
     5d4:	53 e4       	ldi	r21, 0x43	; 67
     5d6:	c7 01       	movw	r24, r14
     5d8:	b6 01       	movw	r22, r12
     5da:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     5de:	18 16       	cp	r1, r24
     5e0:	54 f4       	brge	.+20     	; 0x5f6 <_Z18GreatCircleBearingRK8PositionS1_+0x1b6>
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	44 eb       	ldi	r20, 0xB4	; 180
     5e8:	53 e4       	ldi	r21, 0x43	; 67
     5ea:	c7 01       	movw	r24, r14
     5ec:	b6 01       	movw	r22, r12
     5ee:	0e 94 17 1a 	call	0x342e	; 0x342e <__subsf3>
     5f2:	6b 01       	movw	r12, r22
     5f4:	7c 01       	movw	r14, r24
     5f6:	21 ee       	ldi	r18, 0xE1	; 225
     5f8:	3e e2       	ldi	r19, 0x2E	; 46
     5fa:	45 e6       	ldi	r20, 0x65	; 101
     5fc:	52 e4       	ldi	r21, 0x42	; 66
     5fe:	c7 01       	movw	r24, r14
     600:	b6 01       	movw	r22, r12
     602:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     606:	2c 96       	adiw	r28, 0x0c	; 12
     608:	0f b6       	in	r0, 0x3f	; 63
     60a:	f8 94       	cli
     60c:	de bf       	out	0x3e, r29	; 62
     60e:	0f be       	out	0x3f, r0	; 63
     610:	cd bf       	out	0x3d, r28	; 61
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	1f 91       	pop	r17
     618:	0f 91       	pop	r16
     61a:	ff 90       	pop	r15
     61c:	ef 90       	pop	r14
     61e:	df 90       	pop	r13
     620:	cf 90       	pop	r12
     622:	bf 90       	pop	r11
     624:	af 90       	pop	r10
     626:	9f 90       	pop	r9
     628:	8f 90       	pop	r8
     62a:	7f 90       	pop	r7
     62c:	6f 90       	pop	r6
     62e:	5f 90       	pop	r5
     630:	4f 90       	pop	r4
     632:	3f 90       	pop	r3
     634:	2f 90       	pop	r2
     636:	08 95       	ret

00000638 <_Z18distance_in_metersRK8PositionS1_>:
     638:	0e 94 6e 01 	call	0x2dc	; 0x2dc <_Z9haversineRK8PositionS1_>
     63c:	2b e7       	ldi	r18, 0x7B	; 123
     63e:	3b e7       	ldi	r19, 0x7B	; 123
     640:	42 ec       	ldi	r20, 0xC2	; 194
     642:	5a e4       	ldi	r21, 0x4A	; 74
     644:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
     648:	08 95       	ret

0000064a <_Z11setNeoPixelhff>:
     64a:	4f 92       	push	r4
     64c:	5f 92       	push	r5
     64e:	6f 92       	push	r6
     650:	7f 92       	push	r7
     652:	8f 92       	push	r8
     654:	9f 92       	push	r9
     656:	af 92       	push	r10
     658:	bf 92       	push	r11
     65a:	cf 92       	push	r12
     65c:	df 92       	push	r13
     65e:	ef 92       	push	r14
     660:	ff 92       	push	r15
     662:	0f 93       	push	r16
     664:	1f 93       	push	r17
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	b8 2e       	mov	r11, r24
     66c:	6a 01       	movw	r12, r20
     66e:	7b 01       	movw	r14, r22
     670:	28 01       	movw	r4, r16
     672:	39 01       	movw	r6, r18
     674:	c0 e0       	ldi	r28, 0x00	; 0
     676:	d0 e0       	ldi	r29, 0x00	; 0
     678:	40 e0       	ldi	r20, 0x00	; 0
     67a:	60 e0       	ldi	r22, 0x00	; 0
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     682:	9b 01       	movw	r18, r22
     684:	ac 01       	movw	r20, r24
     686:	be 01       	movw	r22, r28
     688:	8f e6       	ldi	r24, 0x6F	; 111
     68a:	92 e0       	ldi	r25, 0x02	; 2
     68c:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     690:	8f e6       	ldi	r24, 0x6F	; 111
     692:	92 e0       	ldi	r25, 0x02	; 2
     694:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <_ZN17Adafruit_NeoPixel4showEv>
     698:	21 96       	adiw	r28, 0x01	; 1
     69a:	c8 32       	cpi	r28, 0x28	; 40
     69c:	d1 05       	cpc	r29, r1
     69e:	61 f7       	brne	.-40     	; 0x678 <_Z11setNeoPixelhff+0x2e>
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	48 ec       	ldi	r20, 0xC8	; 200
     6a6:	52 e4       	ldi	r21, 0x42	; 66
     6a8:	c3 01       	movw	r24, r6
     6aa:	b2 01       	movw	r22, r4
     6ac:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     6b0:	87 ff       	sbrs	r24, 7
     6b2:	0c c0       	rjmp	.+24     	; 0x6cc <_Z11setNeoPixelhff+0x82>
     6b4:	2e ea       	ldi	r18, 0xAE	; 174
     6b6:	37 e4       	ldi	r19, 0x47	; 71
     6b8:	45 e8       	ldi	r20, 0x85	; 133
     6ba:	51 e4       	ldi	r21, 0x41	; 65
     6bc:	c3 01       	movw	r24, r6
     6be:	b2 01       	movw	r22, r4
     6c0:	0e 94 1b 1b 	call	0x3636	; 0x3636 <__divsf3>
     6c4:	0e 94 8d 1b 	call	0x371a	; 0x371a <__fixsfsi>
     6c8:	eb 01       	movw	r28, r22
     6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <_Z11setNeoPixelhff+0x86>
     6cc:	c6 e0       	ldi	r28, 0x06	; 6
     6ce:	d0 e0       	ldi	r29, 0x00	; 0
     6d0:	b1 10       	cpse	r11, r1
     6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <_Z11setNeoPixelhff+0x8e>
     6d4:	40 e0       	ldi	r20, 0x00	; 0
     6d6:	11 c0       	rjmp	.+34     	; 0x6fa <_Z11setNeoPixelhff+0xb0>
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	b8 12       	cpse	r11, r24
     6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <_Z11setNeoPixelhff+0x9a>
     6de:	40 e0       	ldi	r20, 0x00	; 0
     6e0:	6f ef       	ldi	r22, 0xFF	; 255
     6e2:	05 c0       	rjmp	.+10     	; 0x6ee <_Z11setNeoPixelhff+0xa4>
     6e4:	82 e0       	ldi	r24, 0x02	; 2
     6e6:	b8 12       	cpse	r11, r24
     6e8:	04 c0       	rjmp	.+8      	; 0x6f2 <_Z11setNeoPixelhff+0xa8>
     6ea:	4f ef       	ldi	r20, 0xFF	; 255
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	80 e0       	ldi	r24, 0x00	; 0
     6f0:	06 c0       	rjmp	.+12     	; 0x6fe <_Z11setNeoPixelhff+0xb4>
     6f2:	83 e0       	ldi	r24, 0x03	; 3
     6f4:	b8 12       	cpse	r11, r24
     6f6:	08 c0       	rjmp	.+16     	; 0x708 <_Z11setNeoPixelhff+0xbe>
     6f8:	4f ef       	ldi	r20, 0xFF	; 255
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	8f ef       	ldi	r24, 0xFF	; 255
     6fe:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     702:	4b 01       	movw	r8, r22
     704:	5c 01       	movw	r10, r24
     706:	03 c0       	rjmp	.+6      	; 0x70e <_Z11setNeoPixelhff+0xc4>
     708:	81 2c       	mov	r8, r1
     70a:	91 2c       	mov	r9, r1
     70c:	54 01       	movw	r10, r8
     70e:	02 e1       	ldi	r16, 0x12	; 18
     710:	10 e0       	ldi	r17, 0x00	; 0
     712:	61 96       	adiw	r28, 0x11	; 17
     714:	c0 17       	cp	r28, r16
     716:	d1 07       	cpc	r29, r17
     718:	74 f0       	brlt	.+28     	; 0x736 <_Z11setNeoPixelhff+0xec>
     71a:	a5 01       	movw	r20, r10
     71c:	94 01       	movw	r18, r8
     71e:	b8 01       	movw	r22, r16
     720:	8f e6       	ldi	r24, 0x6F	; 111
     722:	92 e0       	ldi	r25, 0x02	; 2
     724:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     728:	8f e6       	ldi	r24, 0x6F	; 111
     72a:	92 e0       	ldi	r25, 0x02	; 2
     72c:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <_ZN17Adafruit_NeoPixel4showEv>
     730:	0f 5f       	subi	r16, 0xFF	; 255
     732:	1f 4f       	sbci	r17, 0xFF	; 255
     734:	ef cf       	rjmp	.-34     	; 0x714 <_Z11setNeoPixelhff+0xca>
     736:	20 e0       	ldi	r18, 0x00	; 0
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	45 ea       	ldi	r20, 0xA5	; 165
     73c:	53 e4       	ldi	r21, 0x43	; 67
     73e:	c7 01       	movw	r24, r14
     740:	b6 01       	movw	r22, r12
     742:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     746:	18 16       	cp	r1, r24
     748:	9c f0       	brlt	.+38     	; 0x770 <_Z11setNeoPixelhff+0x126>
     74a:	20 e0       	ldi	r18, 0x00	; 0
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	a9 01       	movw	r20, r18
     750:	c7 01       	movw	r24, r14
     752:	b6 01       	movw	r22, r12
     754:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     758:	18 16       	cp	r1, r24
     75a:	74 f5       	brge	.+92     	; 0x7b8 <_Z11setNeoPixelhff+0x16e>
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	40 ef       	ldi	r20, 0xF0	; 240
     762:	51 e4       	ldi	r21, 0x41	; 65
     764:	c7 01       	movw	r24, r14
     766:	b6 01       	movw	r22, r12
     768:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     76c:	87 ff       	sbrs	r24, 7
     76e:	24 c0       	rjmp	.+72     	; 0x7b8 <_Z11setNeoPixelhff+0x16e>
     770:	4f ef       	ldi	r20, 0xFF	; 255
     772:	6f ef       	ldi	r22, 0xFF	; 255
     774:	8f ef       	ldi	r24, 0xFF	; 255
     776:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     77a:	9b 01       	movw	r18, r22
     77c:	ac 01       	movw	r20, r24
     77e:	69 e0       	ldi	r22, 0x09	; 9
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	8f e6       	ldi	r24, 0x6F	; 111
     784:	92 e0       	ldi	r25, 0x02	; 2
     786:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     78a:	4f ef       	ldi	r20, 0xFF	; 255
     78c:	6f ef       	ldi	r22, 0xFF	; 255
     78e:	8f ef       	ldi	r24, 0xFF	; 255
     790:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     794:	9b 01       	movw	r18, r22
     796:	ac 01       	movw	r20, r24
     798:	60 e1       	ldi	r22, 0x10	; 16
     79a:	70 e0       	ldi	r23, 0x00	; 0
     79c:	8f e6       	ldi	r24, 0x6F	; 111
     79e:	92 e0       	ldi	r25, 0x02	; 2
     7a0:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     7a4:	4f ef       	ldi	r20, 0xFF	; 255
     7a6:	6f ef       	ldi	r22, 0xFF	; 255
     7a8:	8f ef       	ldi	r24, 0xFF	; 255
     7aa:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     7ae:	9b 01       	movw	r18, r22
     7b0:	ac 01       	movw	r20, r24
     7b2:	69 e1       	ldi	r22, 0x19	; 25
     7b4:	70 e0       	ldi	r23, 0x00	; 0
     7b6:	87 c1       	rjmp	.+782    	; 0xac6 <__stack+0x1c7>
     7b8:	20 e0       	ldi	r18, 0x00	; 0
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	40 ef       	ldi	r20, 0xF0	; 240
     7be:	51 e4       	ldi	r21, 0x41	; 65
     7c0:	c7 01       	movw	r24, r14
     7c2:	b6 01       	movw	r22, r12
     7c4:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     7c8:	18 16       	cp	r1, r24
     7ca:	74 f5       	brge	.+92     	; 0x828 <_Z11setNeoPixelhff+0x1de>
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	40 e7       	ldi	r20, 0x70	; 112
     7d2:	52 e4       	ldi	r21, 0x42	; 66
     7d4:	c7 01       	movw	r24, r14
     7d6:	b6 01       	movw	r22, r12
     7d8:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     7dc:	87 ff       	sbrs	r24, 7
     7de:	24 c0       	rjmp	.+72     	; 0x828 <_Z11setNeoPixelhff+0x1de>
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	6f ef       	ldi	r22, 0xFF	; 255
     7e4:	8f ef       	ldi	r24, 0xFF	; 255
     7e6:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     7ea:	9b 01       	movw	r18, r22
     7ec:	ac 01       	movw	r20, r24
     7ee:	68 e0       	ldi	r22, 0x08	; 8
     7f0:	70 e0       	ldi	r23, 0x00	; 0
     7f2:	8f e6       	ldi	r24, 0x6F	; 111
     7f4:	92 e0       	ldi	r25, 0x02	; 2
     7f6:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     7fa:	4f ef       	ldi	r20, 0xFF	; 255
     7fc:	6f ef       	ldi	r22, 0xFF	; 255
     7fe:	8f ef       	ldi	r24, 0xFF	; 255
     800:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     804:	9b 01       	movw	r18, r22
     806:	ac 01       	movw	r20, r24
     808:	60 e0       	ldi	r22, 0x00	; 0
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	8f e6       	ldi	r24, 0x6F	; 111
     80e:	92 e0       	ldi	r25, 0x02	; 2
     810:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     814:	4f ef       	ldi	r20, 0xFF	; 255
     816:	6f ef       	ldi	r22, 0xFF	; 255
     818:	8f ef       	ldi	r24, 0xFF	; 255
     81a:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     81e:	9b 01       	movw	r18, r22
     820:	ac 01       	movw	r20, r24
     822:	61 e0       	ldi	r22, 0x01	; 1
     824:	70 e0       	ldi	r23, 0x00	; 0
     826:	4f c1       	rjmp	.+670    	; 0xac6 <__stack+0x1c7>
     828:	20 e0       	ldi	r18, 0x00	; 0
     82a:	30 e0       	ldi	r19, 0x00	; 0
     82c:	40 e7       	ldi	r20, 0x70	; 112
     82e:	52 e4       	ldi	r21, 0x42	; 66
     830:	c7 01       	movw	r24, r14
     832:	b6 01       	movw	r22, r12
     834:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     838:	18 16       	cp	r1, r24
     83a:	74 f5       	brge	.+92     	; 0x898 <_Z11setNeoPixelhff+0x24e>
     83c:	20 e0       	ldi	r18, 0x00	; 0
     83e:	30 e0       	ldi	r19, 0x00	; 0
     840:	40 ef       	ldi	r20, 0xF0	; 240
     842:	52 e4       	ldi	r21, 0x42	; 66
     844:	c7 01       	movw	r24, r14
     846:	b6 01       	movw	r22, r12
     848:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     84c:	87 ff       	sbrs	r24, 7
     84e:	24 c0       	rjmp	.+72     	; 0x898 <_Z11setNeoPixelhff+0x24e>
     850:	4f ef       	ldi	r20, 0xFF	; 255
     852:	6f ef       	ldi	r22, 0xFF	; 255
     854:	8f ef       	ldi	r24, 0xFF	; 255
     856:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     85a:	9b 01       	movw	r18, r22
     85c:	ac 01       	movw	r20, r24
     85e:	64 e0       	ldi	r22, 0x04	; 4
     860:	70 e0       	ldi	r23, 0x00	; 0
     862:	8f e6       	ldi	r24, 0x6F	; 111
     864:	92 e0       	ldi	r25, 0x02	; 2
     866:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     86a:	4f ef       	ldi	r20, 0xFF	; 255
     86c:	6f ef       	ldi	r22, 0xFF	; 255
     86e:	8f ef       	ldi	r24, 0xFF	; 255
     870:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     874:	9b 01       	movw	r18, r22
     876:	ac 01       	movw	r20, r24
     878:	6b e0       	ldi	r22, 0x0B	; 11
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	8f e6       	ldi	r24, 0x6F	; 111
     87e:	92 e0       	ldi	r25, 0x02	; 2
     880:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     884:	4f ef       	ldi	r20, 0xFF	; 255
     886:	6f ef       	ldi	r22, 0xFF	; 255
     888:	8f ef       	ldi	r24, 0xFF	; 255
     88a:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     88e:	9b 01       	movw	r18, r22
     890:	ac 01       	movw	r20, r24
     892:	6d e0       	ldi	r22, 0x0D	; 13
     894:	70 e0       	ldi	r23, 0x00	; 0
     896:	17 c1       	rjmp	.+558    	; 0xac6 <__stack+0x1c7>
     898:	20 e0       	ldi	r18, 0x00	; 0
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	40 ef       	ldi	r20, 0xF0	; 240
     89e:	52 e4       	ldi	r21, 0x42	; 66
     8a0:	c7 01       	movw	r24, r14
     8a2:	b6 01       	movw	r22, r12
     8a4:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     8a8:	18 16       	cp	r1, r24
     8aa:	74 f5       	brge	.+92     	; 0x908 <__stack+0x9>
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	46 e1       	ldi	r20, 0x16	; 22
     8b2:	53 e4       	ldi	r21, 0x43	; 67
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     8bc:	87 ff       	sbrs	r24, 7
     8be:	24 c0       	rjmp	.+72     	; 0x908 <__stack+0x9>
     8c0:	4f ef       	ldi	r20, 0xFF	; 255
     8c2:	6f ef       	ldi	r22, 0xFF	; 255
     8c4:	8f ef       	ldi	r24, 0xFF	; 255
     8c6:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     8ca:	9b 01       	movw	r18, r22
     8cc:	ac 01       	movw	r20, r24
     8ce:	66 e0       	ldi	r22, 0x06	; 6
     8d0:	70 e0       	ldi	r23, 0x00	; 0
     8d2:	8f e6       	ldi	r24, 0x6F	; 111
     8d4:	92 e0       	ldi	r25, 0x02	; 2
     8d6:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     8da:	4f ef       	ldi	r20, 0xFF	; 255
     8dc:	6f ef       	ldi	r22, 0xFF	; 255
     8de:	8f ef       	ldi	r24, 0xFF	; 255
     8e0:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     8e4:	9b 01       	movw	r18, r22
     8e6:	ac 01       	movw	r20, r24
     8e8:	67 e0       	ldi	r22, 0x07	; 7
     8ea:	70 e0       	ldi	r23, 0x00	; 0
     8ec:	8f e6       	ldi	r24, 0x6F	; 111
     8ee:	92 e0       	ldi	r25, 0x02	; 2
     8f0:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     8f4:	4f ef       	ldi	r20, 0xFF	; 255
     8f6:	6f ef       	ldi	r22, 0xFF	; 255
     8f8:	8f ef       	ldi	r24, 0xFF	; 255
     8fa:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     8fe:	9b 01       	movw	r18, r22
     900:	ac 01       	movw	r20, r24
     902:	6f e0       	ldi	r22, 0x0F	; 15
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	df c0       	rjmp	.+446    	; 0xac6 <__stack+0x1c7>
     908:	20 e0       	ldi	r18, 0x00	; 0
     90a:	30 e0       	ldi	r19, 0x00	; 0
     90c:	46 e1       	ldi	r20, 0x16	; 22
     90e:	53 e4       	ldi	r21, 0x43	; 67
     910:	c7 01       	movw	r24, r14
     912:	b6 01       	movw	r22, r12
     914:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     918:	18 16       	cp	r1, r24
     91a:	74 f5       	brge	.+92     	; 0x978 <__stack+0x79>
     91c:	20 e0       	ldi	r18, 0x00	; 0
     91e:	30 e0       	ldi	r19, 0x00	; 0
     920:	42 e5       	ldi	r20, 0x52	; 82
     922:	53 e4       	ldi	r21, 0x43	; 67
     924:	c7 01       	movw	r24, r14
     926:	b6 01       	movw	r22, r12
     928:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     92c:	87 ff       	sbrs	r24, 7
     92e:	24 c0       	rjmp	.+72     	; 0x978 <__stack+0x79>
     930:	4f ef       	ldi	r20, 0xFF	; 255
     932:	6f ef       	ldi	r22, 0xFF	; 255
     934:	8f ef       	ldi	r24, 0xFF	; 255
     936:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     93a:	9b 01       	movw	r18, r22
     93c:	ac 01       	movw	r20, r24
     93e:	6e e0       	ldi	r22, 0x0E	; 14
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	8f e6       	ldi	r24, 0x6F	; 111
     944:	92 e0       	ldi	r25, 0x02	; 2
     946:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     94a:	4f ef       	ldi	r20, 0xFF	; 255
     94c:	6f ef       	ldi	r22, 0xFF	; 255
     94e:	8f ef       	ldi	r24, 0xFF	; 255
     950:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     954:	9b 01       	movw	r18, r22
     956:	ac 01       	movw	r20, r24
     958:	67 e1       	ldi	r22, 0x17	; 23
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	8f e6       	ldi	r24, 0x6F	; 111
     95e:	92 e0       	ldi	r25, 0x02	; 2
     960:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     964:	4f ef       	ldi	r20, 0xFF	; 255
     966:	6f ef       	ldi	r22, 0xFF	; 255
     968:	8f ef       	ldi	r24, 0xFF	; 255
     96a:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     96e:	9b 01       	movw	r18, r22
     970:	ac 01       	movw	r20, r24
     972:	6e e1       	ldi	r22, 0x1E	; 30
     974:	70 e0       	ldi	r23, 0x00	; 0
     976:	a7 c0       	rjmp	.+334    	; 0xac6 <__stack+0x1c7>
     978:	20 e0       	ldi	r18, 0x00	; 0
     97a:	30 e0       	ldi	r19, 0x00	; 0
     97c:	42 e5       	ldi	r20, 0x52	; 82
     97e:	53 e4       	ldi	r21, 0x43	; 67
     980:	c7 01       	movw	r24, r14
     982:	b6 01       	movw	r22, r12
     984:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     988:	18 16       	cp	r1, r24
     98a:	74 f5       	brge	.+92     	; 0x9e8 <__stack+0xe9>
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	40 e7       	ldi	r20, 0x70	; 112
     992:	53 e4       	ldi	r21, 0x43	; 67
     994:	c7 01       	movw	r24, r14
     996:	b6 01       	movw	r22, r12
     998:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     99c:	87 ff       	sbrs	r24, 7
     99e:	24 c0       	rjmp	.+72     	; 0x9e8 <__stack+0xe9>
     9a0:	4f ef       	ldi	r20, 0xFF	; 255
     9a2:	6f ef       	ldi	r22, 0xFF	; 255
     9a4:	8f ef       	ldi	r24, 0xFF	; 255
     9a6:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     9aa:	9b 01       	movw	r18, r22
     9ac:	ac 01       	movw	r20, r24
     9ae:	6f e1       	ldi	r22, 0x1F	; 31
     9b0:	70 e0       	ldi	r23, 0x00	; 0
     9b2:	8f e6       	ldi	r24, 0x6F	; 111
     9b4:	92 e0       	ldi	r25, 0x02	; 2
     9b6:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     9ba:	4f ef       	ldi	r20, 0xFF	; 255
     9bc:	6f ef       	ldi	r22, 0xFF	; 255
     9be:	8f ef       	ldi	r24, 0xFF	; 255
     9c0:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     9c4:	9b 01       	movw	r18, r22
     9c6:	ac 01       	movw	r20, r24
     9c8:	66 e2       	ldi	r22, 0x26	; 38
     9ca:	70 e0       	ldi	r23, 0x00	; 0
     9cc:	8f e6       	ldi	r24, 0x6F	; 111
     9ce:	92 e0       	ldi	r25, 0x02	; 2
     9d0:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     9d4:	4f ef       	ldi	r20, 0xFF	; 255
     9d6:	6f ef       	ldi	r22, 0xFF	; 255
     9d8:	8f ef       	ldi	r24, 0xFF	; 255
     9da:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     9de:	9b 01       	movw	r18, r22
     9e0:	ac 01       	movw	r20, r24
     9e2:	67 e2       	ldi	r22, 0x27	; 39
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	6f c0       	rjmp	.+222    	; 0xac6 <__stack+0x1c7>
     9e8:	20 e0       	ldi	r18, 0x00	; 0
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	40 e7       	ldi	r20, 0x70	; 112
     9ee:	53 e4       	ldi	r21, 0x43	; 67
     9f0:	c7 01       	movw	r24, r14
     9f2:	b6 01       	movw	r22, r12
     9f4:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     9f8:	18 16       	cp	r1, r24
     9fa:	74 f5       	brge	.+92     	; 0xa58 <__stack+0x159>
     9fc:	20 e0       	ldi	r18, 0x00	; 0
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	46 e9       	ldi	r20, 0x96	; 150
     a02:	53 e4       	ldi	r21, 0x43	; 67
     a04:	c7 01       	movw	r24, r14
     a06:	b6 01       	movw	r22, r12
     a08:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     a0c:	87 ff       	sbrs	r24, 7
     a0e:	24 c0       	rjmp	.+72     	; 0xa58 <__stack+0x159>
     a10:	4f ef       	ldi	r20, 0xFF	; 255
     a12:	6f ef       	ldi	r22, 0xFF	; 255
     a14:	8f ef       	ldi	r24, 0xFF	; 255
     a16:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     a1a:	9b 01       	movw	r18, r22
     a1c:	ac 01       	movw	r20, r24
     a1e:	64 e2       	ldi	r22, 0x24	; 36
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	8f e6       	ldi	r24, 0x6F	; 111
     a24:	92 e0       	ldi	r25, 0x02	; 2
     a26:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     a2a:	4f ef       	ldi	r20, 0xFF	; 255
     a2c:	6f ef       	ldi	r22, 0xFF	; 255
     a2e:	8f ef       	ldi	r24, 0xFF	; 255
     a30:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     a34:	9b 01       	movw	r18, r22
     a36:	ac 01       	movw	r20, r24
     a38:	6d e1       	ldi	r22, 0x1D	; 29
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	8f e6       	ldi	r24, 0x6F	; 111
     a3e:	92 e0       	ldi	r25, 0x02	; 2
     a40:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     a44:	4f ef       	ldi	r20, 0xFF	; 255
     a46:	6f ef       	ldi	r22, 0xFF	; 255
     a48:	8f ef       	ldi	r24, 0xFF	; 255
     a4a:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     a4e:	9b 01       	movw	r18, r22
     a50:	ac 01       	movw	r20, r24
     a52:	6b e1       	ldi	r22, 0x1B	; 27
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	37 c0       	rjmp	.+110    	; 0xac6 <__stack+0x1c7>
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	46 e9       	ldi	r20, 0x96	; 150
     a5e:	53 e4       	ldi	r21, 0x43	; 67
     a60:	c7 01       	movw	r24, r14
     a62:	b6 01       	movw	r22, r12
     a64:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
     a68:	18 16       	cp	r1, r24
     a6a:	8c f5       	brge	.+98     	; 0xace <__stack+0x1cf>
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	45 ea       	ldi	r20, 0xA5	; 165
     a72:	53 e4       	ldi	r21, 0x43	; 67
     a74:	c7 01       	movw	r24, r14
     a76:	b6 01       	movw	r22, r12
     a78:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
     a7c:	87 ff       	sbrs	r24, 7
     a7e:	27 c0       	rjmp	.+78     	; 0xace <__stack+0x1cf>
     a80:	4f ef       	ldi	r20, 0xFF	; 255
     a82:	6f ef       	ldi	r22, 0xFF	; 255
     a84:	8f ef       	ldi	r24, 0xFF	; 255
     a86:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     a8a:	9b 01       	movw	r18, r22
     a8c:	ac 01       	movw	r20, r24
     a8e:	68 e1       	ldi	r22, 0x18	; 24
     a90:	70 e0       	ldi	r23, 0x00	; 0
     a92:	8f e6       	ldi	r24, 0x6F	; 111
     a94:	92 e0       	ldi	r25, 0x02	; 2
     a96:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     a9a:	4f ef       	ldi	r20, 0xFF	; 255
     a9c:	6f ef       	ldi	r22, 0xFF	; 255
     a9e:	8f ef       	ldi	r24, 0xFF	; 255
     aa0:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     aa4:	9b 01       	movw	r18, r22
     aa6:	ac 01       	movw	r20, r24
     aa8:	60 e2       	ldi	r22, 0x20	; 32
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	8f e6       	ldi	r24, 0x6F	; 111
     aae:	92 e0       	ldi	r25, 0x02	; 2
     ab0:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     ab4:	4f ef       	ldi	r20, 0xFF	; 255
     ab6:	6f ef       	ldi	r22, 0xFF	; 255
     ab8:	8f ef       	ldi	r24, 0xFF	; 255
     aba:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>
     abe:	9b 01       	movw	r18, r22
     ac0:	ac 01       	movw	r20, r24
     ac2:	61 e2       	ldi	r22, 0x21	; 33
     ac4:	70 e0       	ldi	r23, 0x00	; 0
     ac6:	8f e6       	ldi	r24, 0x6F	; 111
     ac8:	92 e0       	ldi	r25, 0x02	; 2
     aca:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>
     ace:	8f e6       	ldi	r24, 0x6F	; 111
     ad0:	92 e0       	ldi	r25, 0x02	; 2
     ad2:	df 91       	pop	r29
     ad4:	cf 91       	pop	r28
     ad6:	1f 91       	pop	r17
     ad8:	0f 91       	pop	r16
     ada:	ff 90       	pop	r15
     adc:	ef 90       	pop	r14
     ade:	df 90       	pop	r13
     ae0:	cf 90       	pop	r12
     ae2:	bf 90       	pop	r11
     ae4:	af 90       	pop	r10
     ae6:	9f 90       	pop	r9
     ae8:	8f 90       	pop	r8
     aea:	7f 90       	pop	r7
     aec:	6f 90       	pop	r6
     aee:	5f 90       	pop	r5
     af0:	4f 90       	pop	r4
     af2:	0c 94 58 0d 	jmp	0x1ab0	; 0x1ab0 <_ZN17Adafruit_NeoPixel4showEv>

00000af6 <_Z15DMtoDDLongitude6StringRf>:
     af6:	8f 92       	push	r8
     af8:	9f 92       	push	r9
     afa:	af 92       	push	r10
     afc:	bf 92       	push	r11
     afe:	cf 92       	push	r12
     b00:	df 92       	push	r13
     b02:	ef 92       	push	r14
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
     b0e:	cd b7       	in	r28, 0x3d	; 61
     b10:	de b7       	in	r29, 0x3e	; 62
     b12:	2c 97       	sbiw	r28, 0x0c	; 12
     b14:	0f b6       	in	r0, 0x3f	; 63
     b16:	f8 94       	cli
     b18:	de bf       	out	0x3e, r29	; 62
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	cd bf       	out	0x3d, r28	; 61
     b1e:	7c 01       	movw	r14, r24
     b20:	6b 01       	movw	r12, r22
     b22:	62 e8       	ldi	r22, 0x82	; 130
     b24:	71 e0       	ldi	r23, 0x01	; 1
     b26:	ce 01       	movw	r24, r28
     b28:	07 96       	adiw	r24, 0x07	; 7
     b2a:	0e 94 1f 0c 	call	0x183e	; 0x183e <_ZN6StringC1EPKc>
     b2e:	62 e8       	ldi	r22, 0x82	; 130
     b30:	71 e0       	ldi	r23, 0x01	; 1
     b32:	ce 01       	movw	r24, r28
     b34:	01 96       	adiw	r24, 0x01	; 1
     b36:	0e 94 1f 0c 	call	0x183e	; 0x183e <_ZN6StringC1EPKc>
     b3a:	00 e0       	ldi	r16, 0x00	; 0
     b3c:	10 e0       	ldi	r17, 0x00	; 0
     b3e:	f7 01       	movw	r30, r14
     b40:	84 81       	ldd	r24, Z+4	; 0x04
     b42:	95 81       	ldd	r25, Z+5	; 0x05
     b44:	08 17       	cp	r16, r24
     b46:	19 07       	cpc	r17, r25
     b48:	b8 f4       	brcc	.+46     	; 0xb78 <_Z15DMtoDDLongitude6StringRf+0x82>
     b4a:	b8 01       	movw	r22, r16
     b4c:	c7 01       	movw	r24, r14
     b4e:	03 30       	cpi	r16, 0x03	; 3
     b50:	11 05       	cpc	r17, r1
     b52:	38 f4       	brcc	.+14     	; 0xb62 <_Z15DMtoDDLongitude6StringRf+0x6c>
     b54:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <_ZN6StringixEj>
     b58:	fc 01       	movw	r30, r24
     b5a:	60 81       	ld	r22, Z
     b5c:	ce 01       	movw	r24, r28
     b5e:	07 96       	adiw	r24, 0x07	; 7
     b60:	06 c0       	rjmp	.+12     	; 0xb6e <_Z15DMtoDDLongitude6StringRf+0x78>
     b62:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <_ZN6StringixEj>
     b66:	fc 01       	movw	r30, r24
     b68:	60 81       	ld	r22, Z
     b6a:	ce 01       	movw	r24, r28
     b6c:	01 96       	adiw	r24, 0x01	; 1
     b6e:	0e 94 c1 0c 	call	0x1982	; 0x1982 <_ZN6String6concatEc>
     b72:	0f 5f       	subi	r16, 0xFF	; 255
     b74:	1f 4f       	sbci	r17, 0xFF	; 255
     b76:	e3 cf       	rjmp	.-58     	; 0xb3e <_Z15DMtoDDLongitude6StringRf+0x48>
     b78:	ce 01       	movw	r24, r28
     b7a:	07 96       	adiw	r24, 0x07	; 7
     b7c:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <_ZNK6String7toFloatEv>
     b80:	4b 01       	movw	r8, r22
     b82:	5c 01       	movw	r10, r24
     b84:	ce 01       	movw	r24, r28
     b86:	01 96       	adiw	r24, 0x01	; 1
     b88:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <_ZNK6String7toFloatEv>
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	40 e7       	ldi	r20, 0x70	; 112
     b92:	52 e4       	ldi	r21, 0x42	; 66
     b94:	0e 94 1b 1b 	call	0x3636	; 0x3636 <__divsf3>
     b98:	9b 01       	movw	r18, r22
     b9a:	ac 01       	movw	r20, r24
     b9c:	c5 01       	movw	r24, r10
     b9e:	b4 01       	movw	r22, r8
     ba0:	0e 94 18 1a 	call	0x3430	; 0x3430 <__addsf3>
     ba4:	f6 01       	movw	r30, r12
     ba6:	60 83       	st	Z, r22
     ba8:	71 83       	std	Z+1, r23	; 0x01
     baa:	82 83       	std	Z+2, r24	; 0x02
     bac:	93 83       	std	Z+3, r25	; 0x03
     bae:	ce 01       	movw	r24, r28
     bb0:	01 96       	adiw	r24, 0x01	; 1
     bb2:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6StringD1Ev>
     bb6:	ce 01       	movw	r24, r28
     bb8:	07 96       	adiw	r24, 0x07	; 7
     bba:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6StringD1Ev>
     bbe:	2c 96       	adiw	r28, 0x0c	; 12
     bc0:	0f b6       	in	r0, 0x3f	; 63
     bc2:	f8 94       	cli
     bc4:	de bf       	out	0x3e, r29	; 62
     bc6:	0f be       	out	0x3f, r0	; 63
     bc8:	cd bf       	out	0x3d, r28	; 61
     bca:	df 91       	pop	r29
     bcc:	cf 91       	pop	r28
     bce:	1f 91       	pop	r17
     bd0:	0f 91       	pop	r16
     bd2:	ff 90       	pop	r15
     bd4:	ef 90       	pop	r14
     bd6:	df 90       	pop	r13
     bd8:	cf 90       	pop	r12
     bda:	bf 90       	pop	r11
     bdc:	af 90       	pop	r10
     bde:	9f 90       	pop	r9
     be0:	8f 90       	pop	r8
     be2:	08 95       	ret

00000be4 <_Z14DMtoDDLatitude6StringRf>:
     be4:	8f 92       	push	r8
     be6:	9f 92       	push	r9
     be8:	af 92       	push	r10
     bea:	bf 92       	push	r11
     bec:	cf 92       	push	r12
     bee:	df 92       	push	r13
     bf0:	ef 92       	push	r14
     bf2:	ff 92       	push	r15
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
     c00:	2c 97       	sbiw	r28, 0x0c	; 12
     c02:	0f b6       	in	r0, 0x3f	; 63
     c04:	f8 94       	cli
     c06:	de bf       	out	0x3e, r29	; 62
     c08:	0f be       	out	0x3f, r0	; 63
     c0a:	cd bf       	out	0x3d, r28	; 61
     c0c:	7c 01       	movw	r14, r24
     c0e:	6b 01       	movw	r12, r22
     c10:	62 e8       	ldi	r22, 0x82	; 130
     c12:	71 e0       	ldi	r23, 0x01	; 1
     c14:	ce 01       	movw	r24, r28
     c16:	07 96       	adiw	r24, 0x07	; 7
     c18:	0e 94 1f 0c 	call	0x183e	; 0x183e <_ZN6StringC1EPKc>
     c1c:	62 e8       	ldi	r22, 0x82	; 130
     c1e:	71 e0       	ldi	r23, 0x01	; 1
     c20:	ce 01       	movw	r24, r28
     c22:	01 96       	adiw	r24, 0x01	; 1
     c24:	0e 94 1f 0c 	call	0x183e	; 0x183e <_ZN6StringC1EPKc>
     c28:	00 e0       	ldi	r16, 0x00	; 0
     c2a:	10 e0       	ldi	r17, 0x00	; 0
     c2c:	f7 01       	movw	r30, r14
     c2e:	84 81       	ldd	r24, Z+4	; 0x04
     c30:	95 81       	ldd	r25, Z+5	; 0x05
     c32:	08 17       	cp	r16, r24
     c34:	19 07       	cpc	r17, r25
     c36:	b8 f4       	brcc	.+46     	; 0xc66 <_Z14DMtoDDLatitude6StringRf+0x82>
     c38:	b8 01       	movw	r22, r16
     c3a:	c7 01       	movw	r24, r14
     c3c:	02 30       	cpi	r16, 0x02	; 2
     c3e:	11 05       	cpc	r17, r1
     c40:	38 f4       	brcc	.+14     	; 0xc50 <_Z14DMtoDDLatitude6StringRf+0x6c>
     c42:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <_ZN6StringixEj>
     c46:	fc 01       	movw	r30, r24
     c48:	60 81       	ld	r22, Z
     c4a:	ce 01       	movw	r24, r28
     c4c:	07 96       	adiw	r24, 0x07	; 7
     c4e:	06 c0       	rjmp	.+12     	; 0xc5c <_Z14DMtoDDLatitude6StringRf+0x78>
     c50:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <_ZN6StringixEj>
     c54:	fc 01       	movw	r30, r24
     c56:	60 81       	ld	r22, Z
     c58:	ce 01       	movw	r24, r28
     c5a:	01 96       	adiw	r24, 0x01	; 1
     c5c:	0e 94 c1 0c 	call	0x1982	; 0x1982 <_ZN6String6concatEc>
     c60:	0f 5f       	subi	r16, 0xFF	; 255
     c62:	1f 4f       	sbci	r17, 0xFF	; 255
     c64:	e3 cf       	rjmp	.-58     	; 0xc2c <_Z14DMtoDDLatitude6StringRf+0x48>
     c66:	ce 01       	movw	r24, r28
     c68:	07 96       	adiw	r24, 0x07	; 7
     c6a:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <_ZNK6String7toFloatEv>
     c6e:	4b 01       	movw	r8, r22
     c70:	5c 01       	movw	r10, r24
     c72:	ce 01       	movw	r24, r28
     c74:	01 96       	adiw	r24, 0x01	; 1
     c76:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <_ZNK6String7toFloatEv>
     c7a:	20 e0       	ldi	r18, 0x00	; 0
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	40 e7       	ldi	r20, 0x70	; 112
     c80:	52 e4       	ldi	r21, 0x42	; 66
     c82:	0e 94 1b 1b 	call	0x3636	; 0x3636 <__divsf3>
     c86:	9b 01       	movw	r18, r22
     c88:	ac 01       	movw	r20, r24
     c8a:	c5 01       	movw	r24, r10
     c8c:	b4 01       	movw	r22, r8
     c8e:	0e 94 18 1a 	call	0x3430	; 0x3430 <__addsf3>
     c92:	f6 01       	movw	r30, r12
     c94:	60 83       	st	Z, r22
     c96:	71 83       	std	Z+1, r23	; 0x01
     c98:	82 83       	std	Z+2, r24	; 0x02
     c9a:	93 83       	std	Z+3, r25	; 0x03
     c9c:	ce 01       	movw	r24, r28
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6StringD1Ev>
     ca4:	ce 01       	movw	r24, r28
     ca6:	07 96       	adiw	r24, 0x07	; 7
     ca8:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6StringD1Ev>
     cac:	2c 96       	adiw	r28, 0x0c	; 12
     cae:	0f b6       	in	r0, 0x3f	; 63
     cb0:	f8 94       	cli
     cb2:	de bf       	out	0x3e, r29	; 62
     cb4:	0f be       	out	0x3f, r0	; 63
     cb6:	cd bf       	out	0x3d, r28	; 61
     cb8:	df 91       	pop	r29
     cba:	cf 91       	pop	r28
     cbc:	1f 91       	pop	r17
     cbe:	0f 91       	pop	r16
     cc0:	ff 90       	pop	r15
     cc2:	ef 90       	pop	r14
     cc4:	df 90       	pop	r13
     cc6:	cf 90       	pop	r12
     cc8:	bf 90       	pop	r11
     cca:	af 90       	pop	r10
     ccc:	9f 90       	pop	r9
     cce:	8f 90       	pop	r8
     cd0:	08 95       	ret

00000cd2 <_Z18ParseGPSStringDatav>:
     cd2:	0f 93       	push	r16
     cd4:	1f 93       	push	r17
     cd6:	cf 93       	push	r28
     cd8:	df 93       	push	r29
     cda:	cd b7       	in	r28, 0x3d	; 61
     cdc:	de b7       	in	r29, 0x3e	; 62
     cde:	c6 58       	subi	r28, 0x86	; 134
     ce0:	d1 09       	sbc	r29, r1
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	80 e8       	ldi	r24, 0x80	; 128
     cee:	e1 ea       	ldi	r30, 0xA1	; 161
     cf0:	f2 e0       	ldi	r31, 0x02	; 2
     cf2:	de 01       	movw	r26, r28
     cf4:	11 96       	adiw	r26, 0x01	; 1
     cf6:	01 90       	ld	r0, Z+
     cf8:	0d 92       	st	X+, r0
     cfa:	8a 95       	dec	r24
     cfc:	e1 f7       	brne	.-8      	; 0xcf6 <_Z18ParseGPSStringDatav+0x24>
     cfe:	62 e1       	ldi	r22, 0x12	; 18
     d00:	71 e0       	ldi	r23, 0x01	; 1
     d02:	ce 01       	movw	r24, r28
     d04:	01 96       	adiw	r24, 0x01	; 1
     d06:	0e 94 81 21 	call	0x4302	; 0x4302 <strtok>
     d0a:	04 e3       	ldi	r16, 0x34	; 52
     d0c:	13 e0       	ldi	r17, 0x03	; 3
     d0e:	00 97       	sbiw	r24, 0x00	; 0
     d10:	69 f0       	breq	.+26     	; 0xd2c <_Z18ParseGPSStringDatav+0x5a>
     d12:	bc 01       	movw	r22, r24
     d14:	c8 01       	movw	r24, r16
     d16:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <_ZN6StringaSEPKc>
     d1a:	62 e1       	ldi	r22, 0x12	; 18
     d1c:	71 e0       	ldi	r23, 0x01	; 1
     d1e:	80 e0       	ldi	r24, 0x00	; 0
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	0e 94 81 21 	call	0x4302	; 0x4302 <strtok>
     d26:	0a 5f       	subi	r16, 0xFA	; 250
     d28:	1f 4f       	sbci	r17, 0xFF	; 255
     d2a:	f1 cf       	rjmp	.-30     	; 0xd0e <_Z18ParseGPSStringDatav+0x3c>
     d2c:	e0 91 40 03 	lds	r30, 0x0340
     d30:	f0 91 41 03 	lds	r31, 0x0341
     d34:	80 81       	ld	r24, Z
     d36:	86 35       	cpi	r24, 0x56	; 86
     d38:	09 f4       	brne	.+2      	; 0xd3c <_Z18ParseGPSStringDatav+0x6a>
     d3a:	74 c0       	rjmp	.+232    	; 0xe24 <_Z18ParseGPSStringDatav+0x152>
     d3c:	62 e5       	ldi	r22, 0x52	; 82
     d3e:	73 e0       	ldi	r23, 0x03	; 3
     d40:	ce 01       	movw	r24, r28
     d42:	8f 57       	subi	r24, 0x7F	; 127
     d44:	9f 4f       	sbci	r25, 0xFF	; 255
     d46:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <_ZN6StringC1ERKS_>
     d4a:	6b e2       	ldi	r22, 0x2B	; 43
     d4c:	73 e0       	ldi	r23, 0x03	; 3
     d4e:	ce 01       	movw	r24, r28
     d50:	8f 57       	subi	r24, 0x7F	; 127
     d52:	9f 4f       	sbci	r25, 0xFF	; 255
     d54:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_Z15DMtoDDLongitude6StringRf>
     d58:	ce 01       	movw	r24, r28
     d5a:	8f 57       	subi	r24, 0x7F	; 127
     d5c:	9f 4f       	sbci	r25, 0xFF	; 255
     d5e:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6StringD1Ev>
     d62:	66 e4       	ldi	r22, 0x46	; 70
     d64:	73 e0       	ldi	r23, 0x03	; 3
     d66:	ce 01       	movw	r24, r28
     d68:	8f 57       	subi	r24, 0x7F	; 127
     d6a:	9f 4f       	sbci	r25, 0xFF	; 255
     d6c:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <_ZN6StringC1ERKS_>
     d70:	60 e3       	ldi	r22, 0x30	; 48
     d72:	73 e0       	ldi	r23, 0x03	; 3
     d74:	ce 01       	movw	r24, r28
     d76:	8f 57       	subi	r24, 0x7F	; 127
     d78:	9f 4f       	sbci	r25, 0xFF	; 255
     d7a:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <_Z14DMtoDDLatitude6StringRf>
     d7e:	ce 01       	movw	r24, r28
     d80:	8f 57       	subi	r24, 0x7F	; 127
     d82:	9f 4f       	sbci	r25, 0xFF	; 255
     d84:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6StringD1Ev>
     d88:	e0 91 4c 03 	lds	r30, 0x034C
     d8c:	f0 91 4d 03 	lds	r31, 0x034D
     d90:	80 81       	ld	r24, Z
     d92:	80 93 2f 03 	sts	0x032F, r24
     d96:	e0 91 58 03 	lds	r30, 0x0358
     d9a:	f0 91 59 03 	lds	r31, 0x0359
     d9e:	20 81       	ld	r18, Z
     da0:	20 93 2a 03 	sts	0x032A, r18
     da4:	83 35       	cpi	r24, 0x53	; 83
     da6:	89 f4       	brne	.+34     	; 0xdca <_Z18ParseGPSStringDatav+0xf8>
     da8:	80 91 30 03 	lds	r24, 0x0330
     dac:	90 91 31 03 	lds	r25, 0x0331
     db0:	a0 91 32 03 	lds	r26, 0x0332
     db4:	b0 91 33 03 	lds	r27, 0x0333
     db8:	b0 58       	subi	r27, 0x80	; 128
     dba:	80 93 30 03 	sts	0x0330, r24
     dbe:	90 93 31 03 	sts	0x0331, r25
     dc2:	a0 93 32 03 	sts	0x0332, r26
     dc6:	b0 93 33 03 	sts	0x0333, r27
     dca:	27 35       	cpi	r18, 0x57	; 87
     dcc:	89 f4       	brne	.+34     	; 0xdf0 <_Z18ParseGPSStringDatav+0x11e>
     dce:	80 91 2b 03 	lds	r24, 0x032B
     dd2:	90 91 2c 03 	lds	r25, 0x032C
     dd6:	a0 91 2d 03 	lds	r26, 0x032D
     dda:	b0 91 2e 03 	lds	r27, 0x032E
     dde:	b0 58       	subi	r27, 0x80	; 128
     de0:	80 93 2b 03 	sts	0x032B, r24
     de4:	90 93 2c 03 	sts	0x032C, r25
     de8:	a0 93 2d 03 	sts	0x032D, r26
     dec:	b0 93 2e 03 	sts	0x032E, r27
     df0:	8e e5       	ldi	r24, 0x5E	; 94
     df2:	93 e0       	ldi	r25, 0x03	; 3
     df4:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <_ZNK6String7toFloatEv>
     df8:	60 93 22 03 	sts	0x0322, r22
     dfc:	70 93 23 03 	sts	0x0323, r23
     e00:	80 93 24 03 	sts	0x0324, r24
     e04:	90 93 25 03 	sts	0x0325, r25
     e08:	84 e6       	ldi	r24, 0x64	; 100
     e0a:	93 e0       	ldi	r25, 0x03	; 3
     e0c:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <_ZNK6String7toFloatEv>
     e10:	60 93 26 03 	sts	0x0326, r22
     e14:	70 93 27 03 	sts	0x0327, r23
     e18:	80 93 28 03 	sts	0x0328, r24
     e1c:	90 93 29 03 	sts	0x0329, r25
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	01 c0       	rjmp	.+2      	; 0xe26 <_Z18ParseGPSStringDatav+0x154>
     e24:	80 e0       	ldi	r24, 0x00	; 0
     e26:	ca 57       	subi	r28, 0x7A	; 122
     e28:	df 4f       	sbci	r29, 0xFF	; 255
     e2a:	0f b6       	in	r0, 0x3f	; 63
     e2c:	f8 94       	cli
     e2e:	de bf       	out	0x3e, r29	; 62
     e30:	0f be       	out	0x3f, r0	; 63
     e32:	cd bf       	out	0x3d, r28	; 61
     e34:	df 91       	pop	r29
     e36:	cf 91       	pop	r28
     e38:	1f 91       	pop	r17
     e3a:	0f 91       	pop	r16
     e3c:	08 95       	ret

00000e3e <_GLOBAL__sub_I_GpsData>:
     e3e:	cf 93       	push	r28
     e40:	df 93       	push	r29
     e42:	c4 e3       	ldi	r28, 0x34	; 52
     e44:	d3 e0       	ldi	r29, 0x03	; 3
     e46:	62 e8       	ldi	r22, 0x82	; 130
     e48:	71 e0       	ldi	r23, 0x01	; 1
     e4a:	ce 01       	movw	r24, r28
     e4c:	0e 94 1f 0c 	call	0x183e	; 0x183e <_ZN6StringC1EPKc>
     e50:	26 96       	adiw	r28, 0x06	; 6
     e52:	83 e0       	ldi	r24, 0x03	; 3
     e54:	ce 38       	cpi	r28, 0x8E	; 142
     e56:	d8 07       	cpc	r29, r24
     e58:	b1 f7       	brne	.-20     	; 0xe46 <_GLOBAL__sub_I_GpsData+0x8>
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	47 e0       	ldi	r20, 0x07	; 7
     e5e:	68 e0       	ldi	r22, 0x08	; 8
     e60:	82 e8       	ldi	r24, 0x82	; 130
     e62:	92 e0       	ldi	r25, 0x02	; 2
     e64:	0e 94 e0 17 	call	0x2fc0	; 0x2fc0 <_ZN14SoftwareSerialC1Ehhb>
     e68:	23 e0       	ldi	r18, 0x03	; 3
     e6a:	46 e0       	ldi	r20, 0x06	; 6
     e6c:	68 e2       	ldi	r22, 0x28	; 40
     e6e:	70 e0       	ldi	r23, 0x00	; 0
     e70:	8f e6       	ldi	r24, 0x6F	; 111
     e72:	92 e0       	ldi	r25, 0x02	; 2
     e74:	0e 94 f2 0c 	call	0x19e4	; 0x19e4 <_ZN17Adafruit_NeoPixelC1Ejhh>
     e78:	8e e1       	ldi	r24, 0x1E	; 30
     e7a:	92 e0       	ldi	r25, 0x02	; 2
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	0c 94 52 15 	jmp	0x2aa4	; 0x2aa4 <_ZN14TerminalShieldC1Ev>

00000e84 <_GLOBAL__sub_D_GpsData>:
     e84:	cf 93       	push	r28
     e86:	df 93       	push	r29
     e88:	8f e6       	ldi	r24, 0x6F	; 111
     e8a:	92 e0       	ldi	r25, 0x02	; 2
     e8c:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <_ZN17Adafruit_NeoPixelD1Ev>
     e90:	82 e8       	ldi	r24, 0x82	; 130
     e92:	92 e0       	ldi	r25, 0x02	; 2
     e94:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <_ZN14SoftwareSerialD1Ev>
     e98:	ce e8       	ldi	r28, 0x8E	; 142
     e9a:	d3 e0       	ldi	r29, 0x03	; 3
     e9c:	26 97       	sbiw	r28, 0x06	; 6
     e9e:	ce 01       	movw	r24, r28
     ea0:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6StringD1Ev>
     ea4:	83 e0       	ldi	r24, 0x03	; 3
     ea6:	c4 33       	cpi	r28, 0x34	; 52
     ea8:	d8 07       	cpc	r29, r24
     eaa:	c1 f7       	brne	.-16     	; 0xe9c <_GLOBAL__sub_D_GpsData+0x18>
     eac:	df 91       	pop	r29
     eae:	cf 91       	pop	r28
     eb0:	08 95       	ret

00000eb2 <_Z13getGPSMessagev>:
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
     eb6:	80 e8       	ldi	r24, 0x80	; 128
     eb8:	e1 ea       	ldi	r30, 0xA1	; 161
     eba:	f2 e0       	ldi	r31, 0x02	; 2
     ebc:	df 01       	movw	r26, r30
     ebe:	1d 92       	st	X+, r1
     ec0:	8a 95       	dec	r24
     ec2:	e9 f7       	brne	.-6      	; 0xebe <_Z13getGPSMessagev+0xc>
     ec4:	c0 e0       	ldi	r28, 0x00	; 0
     ec6:	82 e8       	ldi	r24, 0x82	; 130
     ec8:	92 e0       	ldi	r25, 0x02	; 2
     eca:	0e 94 9e 16 	call	0x2d3c	; 0x2d3c <_ZN14SoftwareSerial4peekEv>
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	d1 f3       	breq	.-12     	; 0xec6 <_Z13getGPSMessagev+0x14>
     ed2:	82 e8       	ldi	r24, 0x82	; 130
     ed4:	92 e0       	ldi	r25, 0x02	; 2
     ed6:	0e 94 28 16 	call	0x2c50	; 0x2c50 <_ZN14SoftwareSerial4readEv>
     eda:	ec 2f       	mov	r30, r28
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	ef 55       	subi	r30, 0x5F	; 95
     ee0:	fd 4f       	sbci	r31, 0xFD	; 253
     ee2:	80 83       	st	Z, r24
     ee4:	cc 23       	and	r28, r28
     ee6:	29 f0       	breq	.+10     	; 0xef2 <_Z13getGPSMessagev+0x40>
     ee8:	84 32       	cpi	r24, 0x24	; 36
     eea:	19 f4       	brne	.+6      	; 0xef2 <_Z13getGPSMessagev+0x40>
     eec:	80 93 a1 02 	sts	0x02A1, r24
     ef0:	c0 e0       	ldi	r28, 0x00	; 0
     ef2:	80 91 a1 02 	lds	r24, 0x02A1
     ef6:	84 32       	cpi	r24, 0x24	; 36
     ef8:	31 f7       	brne	.-52     	; 0xec6 <_Z13getGPSMessagev+0x14>
     efa:	81 e0       	ldi	r24, 0x01	; 1
     efc:	8c 0f       	add	r24, r28
     efe:	ec 2f       	mov	r30, r28
     f00:	f0 e0       	ldi	r31, 0x00	; 0
     f02:	ef 55       	subi	r30, 0x5F	; 95
     f04:	fd 4f       	sbci	r31, 0xFD	; 253
     f06:	90 81       	ld	r25, Z
     f08:	9a 30       	cpi	r25, 0x0A	; 10
     f0a:	11 f0       	breq	.+4      	; 0xf10 <_Z13getGPSMessagev+0x5e>
     f0c:	c8 2f       	mov	r28, r24
     f0e:	db cf       	rjmp	.-74     	; 0xec6 <_Z13getGPSMessagev+0x14>
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	fc 01       	movw	r30, r24
     f14:	e1 56       	subi	r30, 0x61	; 97
     f16:	fd 4f       	sbci	r31, 0xFD	; 253
     f18:	10 82       	st	Z, r1
     f1a:	ec 01       	movw	r28, r24
     f1c:	25 97       	sbiw	r28, 0x05	; 5
     f1e:	fe 01       	movw	r30, r28
     f20:	ef 55       	subi	r30, 0x5F	; 95
     f22:	fd 4f       	sbci	r31, 0xFD	; 253
     f24:	20 81       	ld	r18, Z
     f26:	2a 32       	cpi	r18, 0x2A	; 42
     f28:	69 f6       	brne	.-102    	; 0xec4 <_Z13getGPSMessagev+0x12>
     f2a:	40 e1       	ldi	r20, 0x10	; 16
     f2c:	50 e0       	ldi	r21, 0x00	; 0
     f2e:	60 e0       	ldi	r22, 0x00	; 0
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	83 56       	subi	r24, 0x63	; 99
     f34:	9d 4f       	sbci	r25, 0xFD	; 253
     f36:	0e 94 63 20 	call	0x40c6	; 0x40c6 <strtol>
     f3a:	21 e0       	ldi	r18, 0x01	; 1
     f3c:	82 2f       	mov	r24, r18
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	8c 17       	cp	r24, r28
     f42:	9d 07       	cpc	r25, r29
     f44:	3c f4       	brge	.+14     	; 0xf54 <_Z13getGPSMessagev+0xa2>
     f46:	fc 01       	movw	r30, r24
     f48:	ef 55       	subi	r30, 0x5F	; 95
     f4a:	fd 4f       	sbci	r31, 0xFD	; 253
     f4c:	80 81       	ld	r24, Z
     f4e:	68 27       	eor	r22, r24
     f50:	2f 5f       	subi	r18, 0xFF	; 255
     f52:	f4 cf       	rjmp	.-24     	; 0xf3c <_Z13getGPSMessagev+0x8a>
     f54:	61 11       	cpse	r22, r1
     f56:	b6 cf       	rjmp	.-148    	; 0xec4 <_Z13getGPSMessagev+0x12>
     f58:	df 91       	pop	r29
     f5a:	cf 91       	pop	r28
     f5c:	08 95       	ret

00000f5e <main>:
     f5e:	cf 93       	push	r28
     f60:	df 93       	push	r29
     f62:	cd b7       	in	r28, 0x3d	; 61
     f64:	de b7       	in	r29, 0x3e	; 62
     f66:	60 97       	sbiw	r28, 0x10	; 16
     f68:	0f b6       	in	r0, 0x3f	; 63
     f6a:	f8 94       	cli
     f6c:	de bf       	out	0x3e, r29	; 62
     f6e:	0f be       	out	0x3f, r0	; 63
     f70:	cd bf       	out	0x3d, r28	; 61
     f72:	82 ea       	ldi	r24, 0xA2	; 162
     f74:	9a e9       	ldi	r25, 0x9A	; 154
     f76:	a2 ea       	ldi	r26, 0xA2	; 162
     f78:	b2 ec       	ldi	r27, 0xC2	; 194
     f7a:	8d 83       	std	Y+5, r24	; 0x05
     f7c:	9e 83       	std	Y+6, r25	; 0x06
     f7e:	af 83       	std	Y+7, r26	; 0x07
     f80:	b8 87       	std	Y+8, r27	; 0x08
     f82:	89 e9       	ldi	r24, 0x99	; 153
     f84:	91 ec       	ldi	r25, 0xC1	; 193
     f86:	a4 ee       	ldi	r26, 0xE4	; 228
     f88:	b1 e4       	ldi	r27, 0x41	; 65
     f8a:	89 83       	std	Y+1, r24	; 0x01
     f8c:	9a 83       	std	Y+2, r25	; 0x02
     f8e:	ab 83       	std	Y+3, r26	; 0x03
     f90:	bc 83       	std	Y+4, r27	; 0x04
     f92:	0e 94 86 0b 	call	0x170c	; 0x170c <init>
     f96:	26 e0       	ldi	r18, 0x06	; 6
     f98:	40 e0       	ldi	r20, 0x00	; 0
     f9a:	52 ec       	ldi	r21, 0xC2	; 194
     f9c:	61 e0       	ldi	r22, 0x01	; 1
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	8e e8       	ldi	r24, 0x8E	; 142
     fa2:	93 e0       	ldi	r25, 0x03	; 3
     fa4:	0e 94 67 09 	call	0x12ce	; 0x12ce <_ZN14HardwareSerial5beginEmh>
     fa8:	85 e7       	ldi	r24, 0x75	; 117
     faa:	94 e0       	ldi	r25, 0x04	; 4
     fac:	0e 94 ff 10 	call	0x21fe	; 0x21fe <_ZN14OneSheeldClass5beginEv>
     fb0:	8f e6       	ldi	r24, 0x6F	; 111
     fb2:	92 e0       	ldi	r25, 0x02	; 2
     fb4:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <_ZN17Adafruit_NeoPixel5beginEv>
     fb8:	64 e1       	ldi	r22, 0x14	; 20
     fba:	8f e6       	ldi	r24, 0x6F	; 111
     fbc:	92 e0       	ldi	r25, 0x02	; 2
     fbe:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <_ZN17Adafruit_NeoPixel13setBrightnessEh>
     fc2:	8f e6       	ldi	r24, 0x6F	; 111
     fc4:	92 e0       	ldi	r25, 0x02	; 2
     fc6:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <_ZN17Adafruit_NeoPixel4showEv>
     fca:	40 e8       	ldi	r20, 0x80	; 128
     fcc:	55 e2       	ldi	r21, 0x25	; 37
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	82 e8       	ldi	r24, 0x82	; 130
     fd4:	92 e0       	ldi	r25, 0x02	; 2
     fd6:	0e 94 0b 18 	call	0x3016	; 0x3016 <_ZN14SoftwareSerial5beginEl>
     fda:	64 e1       	ldi	r22, 0x14	; 20
     fdc:	71 e0       	ldi	r23, 0x01	; 1
     fde:	82 e8       	ldi	r24, 0x82	; 130
     fe0:	92 e0       	ldi	r25, 0x02	; 2
     fe2:	0e 94 a3 0a 	call	0x1546	; 0x1546 <_ZN5Print7printlnEPKc>
     fe6:	65 e2       	ldi	r22, 0x25	; 37
     fe8:	71 e0       	ldi	r23, 0x01	; 1
     fea:	82 e8       	ldi	r24, 0x82	; 130
     fec:	92 e0       	ldi	r25, 0x02	; 2
     fee:	0e 94 a3 0a 	call	0x1546	; 0x1546 <_ZN5Print7printlnEPKc>
     ff2:	6e e3       	ldi	r22, 0x3E	; 62
     ff4:	71 e0       	ldi	r23, 0x01	; 1
     ff6:	82 e8       	ldi	r24, 0x82	; 130
     ff8:	92 e0       	ldi	r25, 0x02	; 2
     ffa:	0e 94 a3 0a 	call	0x1546	; 0x1546 <_ZN5Print7printlnEPKc>
     ffe:	8d ec       	ldi	r24, 0xCD	; 205
    1000:	e8 2e       	mov	r14, r24
    1002:	88 e0       	ldi	r24, 0x08	; 8
    1004:	f8 2e       	mov	r15, r24
    1006:	0e 94 59 07 	call	0xeb2	; 0xeb2 <_Z13getGPSMessagev>
    100a:	80 91 a4 02 	lds	r24, 0x02A4
    100e:	82 35       	cpi	r24, 0x52	; 82
    1010:	c1 f5       	brne	.+112    	; 0x1082 <main+0x124>
    1012:	0e 94 69 06 	call	0xcd2	; 0xcd2 <_Z18ParseGPSStringDatav>
    1016:	80 91 30 03 	lds	r24, 0x0330
    101a:	90 91 31 03 	lds	r25, 0x0331
    101e:	a0 91 32 03 	lds	r26, 0x0332
    1022:	b0 91 33 03 	lds	r27, 0x0333
    1026:	89 87       	std	Y+9, r24	; 0x09
    1028:	9a 87       	std	Y+10, r25	; 0x0a
    102a:	ab 87       	std	Y+11, r26	; 0x0b
    102c:	bc 87       	std	Y+12, r27	; 0x0c
    102e:	80 91 2b 03 	lds	r24, 0x032B
    1032:	90 91 2c 03 	lds	r25, 0x032C
    1036:	a0 91 2d 03 	lds	r26, 0x032D
    103a:	b0 91 2e 03 	lds	r27, 0x032E
    103e:	8d 87       	std	Y+13, r24	; 0x0d
    1040:	9e 87       	std	Y+14, r25	; 0x0e
    1042:	af 87       	std	Y+15, r26	; 0x0f
    1044:	b8 8b       	std	Y+16, r27	; 0x10
    1046:	be 01       	movw	r22, r28
    1048:	6f 5f       	subi	r22, 0xFF	; 255
    104a:	7f 4f       	sbci	r23, 0xFF	; 255
    104c:	ce 01       	movw	r24, r28
    104e:	09 96       	adiw	r24, 0x09	; 9
    1050:	0e 94 20 02 	call	0x440	; 0x440 <_Z18GreatCircleBearingRK8PositionS1_>
    1054:	60 93 0e 01 	sts	0x010E, r22
    1058:	70 93 0f 01 	sts	0x010F, r23
    105c:	80 93 10 01 	sts	0x0110, r24
    1060:	90 93 11 01 	sts	0x0111, r25
    1064:	be 01       	movw	r22, r28
    1066:	6f 5f       	subi	r22, 0xFF	; 255
    1068:	7f 4f       	sbci	r23, 0xFF	; 255
    106a:	ce 01       	movw	r24, r28
    106c:	09 96       	adiw	r24, 0x09	; 9
    106e:	0e 94 1c 03 	call	0x638	; 0x638 <_Z18distance_in_metersRK8PositionS1_>
    1072:	60 93 0a 01 	sts	0x010A, r22
    1076:	70 93 0b 01 	sts	0x010B, r23
    107a:	80 93 0c 01 	sts	0x010C, r24
    107e:	90 93 0d 01 	sts	0x010D, r25
    1082:	00 91 0a 01 	lds	r16, 0x010A
    1086:	10 91 0b 01 	lds	r17, 0x010B
    108a:	20 91 0c 01 	lds	r18, 0x010C
    108e:	30 91 0d 01 	lds	r19, 0x010D
    1092:	40 91 0e 01 	lds	r20, 0x010E
    1096:	50 91 0f 01 	lds	r21, 0x010F
    109a:	60 91 10 01 	lds	r22, 0x0110
    109e:	70 91 11 01 	lds	r23, 0x0111
    10a2:	80 91 21 03 	lds	r24, 0x0321
    10a6:	0e 94 25 03 	call	0x64a	; 0x64a <_Z11setNeoPixelhff>
    10aa:	61 ea       	ldi	r22, 0xA1	; 161
    10ac:	72 e0       	ldi	r23, 0x02	; 2
    10ae:	8e e8       	ldi	r24, 0x8E	; 142
    10b0:	93 e0       	ldi	r25, 0x03	; 3
    10b2:	0e 94 a3 0a 	call	0x1546	; 0x1546 <_ZN5Print7printlnEPKc>
    10b6:	e1 14       	cp	r14, r1
    10b8:	f1 04       	cpc	r15, r1
    10ba:	11 f0       	breq	.+4      	; 0x10c0 <main+0x162>
    10bc:	0e 94 cd 08 	call	0x119a	; 0x119a <_Z14serialEventRunv>
    10c0:	61 ea       	ldi	r22, 0xA1	; 161
    10c2:	72 e0       	ldi	r23, 0x02	; 2
    10c4:	84 e2       	ldi	r24, 0x24	; 36
    10c6:	92 e0       	ldi	r25, 0x02	; 2
    10c8:	0e 94 f6 13 	call	0x27ec	; 0x27ec <_ZN12PrintlnClass7printlnEPKc>
    10cc:	40 91 0e 01 	lds	r20, 0x010E
    10d0:	50 91 0f 01 	lds	r21, 0x010F
    10d4:	60 91 10 01 	lds	r22, 0x0110
    10d8:	70 91 11 01 	lds	r23, 0x0111
    10dc:	23 e0       	ldi	r18, 0x03	; 3
    10de:	30 e0       	ldi	r19, 0x00	; 0
    10e0:	84 e2       	ldi	r24, 0x24	; 36
    10e2:	92 e0       	ldi	r25, 0x02	; 2
    10e4:	0e 94 36 14 	call	0x286c	; 0x286c <_ZN12PrintlnClass7printlnEdi>
    10e8:	40 91 0a 01 	lds	r20, 0x010A
    10ec:	50 91 0b 01 	lds	r21, 0x010B
    10f0:	60 91 0c 01 	lds	r22, 0x010C
    10f4:	70 91 0d 01 	lds	r23, 0x010D
    10f8:	23 e0       	ldi	r18, 0x03	; 3
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	84 e2       	ldi	r24, 0x24	; 36
    10fe:	92 e0       	ldi	r25, 0x02	; 2
    1100:	0e 94 36 14 	call	0x286c	; 0x286c <_ZN12PrintlnClass7printlnEdi>
    1104:	40 91 2b 03 	lds	r20, 0x032B
    1108:	50 91 2c 03 	lds	r21, 0x032C
    110c:	60 91 2d 03 	lds	r22, 0x032D
    1110:	70 91 2e 03 	lds	r23, 0x032E
    1114:	23 e0       	ldi	r18, 0x03	; 3
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	84 e2       	ldi	r24, 0x24	; 36
    111a:	92 e0       	ldi	r25, 0x02	; 2
    111c:	0e 94 36 14 	call	0x286c	; 0x286c <_ZN12PrintlnClass7printlnEdi>
    1120:	40 91 30 03 	lds	r20, 0x0330
    1124:	50 91 31 03 	lds	r21, 0x0331
    1128:	60 91 32 03 	lds	r22, 0x0332
    112c:	70 91 33 03 	lds	r23, 0x0333
    1130:	23 e0       	ldi	r18, 0x03	; 3
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	84 e2       	ldi	r24, 0x24	; 36
    1136:	92 e0       	ldi	r25, 0x02	; 2
    1138:	0e 94 36 14 	call	0x286c	; 0x286c <_ZN12PrintlnClass7printlnEdi>
    113c:	64 cf       	rjmp	.-312    	; 0x1006 <main+0xa8>

0000113e <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    113e:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    1140:	91 8d       	ldd	r25, Z+25	; 0x19
    1142:	22 8d       	ldd	r18, Z+26	; 0x1a
    1144:	89 2f       	mov	r24, r25
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	80 5c       	subi	r24, 0xC0	; 192
    114a:	9f 4f       	sbci	r25, 0xFF	; 255
    114c:	82 1b       	sub	r24, r18
    114e:	91 09       	sbc	r25, r1
}
    1150:	8f 73       	andi	r24, 0x3F	; 63
    1152:	99 27       	eor	r25, r25
    1154:	08 95       	ret

00001156 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    1156:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    1158:	91 8d       	ldd	r25, Z+25	; 0x19
    115a:	82 8d       	ldd	r24, Z+26	; 0x1a
    115c:	98 17       	cp	r25, r24
    115e:	31 f0       	breq	.+12     	; 0x116c <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    1160:	82 8d       	ldd	r24, Z+26	; 0x1a
    1162:	e8 0f       	add	r30, r24
    1164:	f1 1d       	adc	r31, r1
    1166:	85 8d       	ldd	r24, Z+29	; 0x1d
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    116c:	8f ef       	ldi	r24, 0xFF	; 255
    116e:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    1170:	08 95       	ret

00001172 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    1172:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    1174:	91 8d       	ldd	r25, Z+25	; 0x19
    1176:	82 8d       	ldd	r24, Z+26	; 0x1a
    1178:	98 17       	cp	r25, r24
    117a:	61 f0       	breq	.+24     	; 0x1194 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    117c:	82 8d       	ldd	r24, Z+26	; 0x1a
    117e:	df 01       	movw	r26, r30
    1180:	a8 0f       	add	r26, r24
    1182:	b1 1d       	adc	r27, r1
    1184:	5d 96       	adiw	r26, 0x1d	; 29
    1186:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    1188:	92 8d       	ldd	r25, Z+26	; 0x1a
    118a:	9f 5f       	subi	r25, 0xFF	; 255
    118c:	9f 73       	andi	r25, 0x3F	; 63
    118e:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1194:	8f ef       	ldi	r24, 0xFF	; 255
    1196:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    1198:	08 95       	ret

0000119a <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    119a:	88 e2       	ldi	r24, 0x28	; 40
    119c:	9a e0       	ldi	r25, 0x0A	; 10
    119e:	89 2b       	or	r24, r25
    11a0:	49 f0       	breq	.+18     	; 0x11b4 <_Z14serialEventRunv+0x1a>
    11a2:	87 ee       	ldi	r24, 0xE7	; 231
    11a4:	93 e1       	ldi	r25, 0x13	; 19
    11a6:	89 2b       	or	r24, r25
    11a8:	29 f0       	breq	.+10     	; 0x11b4 <_Z14serialEventRunv+0x1a>
    11aa:	0e 94 28 0a 	call	0x1450	; 0x1450 <_Z17Serial0_availablev>
    11ae:	81 11       	cpse	r24, r1
    11b0:	0c 94 e7 13 	jmp	0x27ce	; 0x27ce <_Z11serialEventv>
    11b4:	08 95       	ret

000011b6 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
}

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    11b6:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    11b8:	84 8d       	ldd	r24, Z+28	; 0x1c
    11ba:	df 01       	movw	r26, r30
    11bc:	a8 0f       	add	r26, r24
    11be:	b1 1d       	adc	r27, r1
    11c0:	a3 5a       	subi	r26, 0xA3	; 163
    11c2:	bf 4f       	sbci	r27, 0xFF	; 255
    11c4:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    11c6:	84 8d       	ldd	r24, Z+28	; 0x1c
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	01 96       	adiw	r24, 0x01	; 1
    11cc:	8f 77       	andi	r24, 0x7F	; 127
    11ce:	99 27       	eor	r25, r25
    11d0:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    11d2:	a6 89       	ldd	r26, Z+22	; 0x16
    11d4:	b7 89       	ldd	r27, Z+23	; 0x17
    11d6:	2c 93       	st	X, r18

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  sbi(*_ucsra, TXC0);
    11d8:	a0 89       	ldd	r26, Z+16	; 0x10
    11da:	b1 89       	ldd	r27, Z+17	; 0x11
    11dc:	8c 91       	ld	r24, X
    11de:	80 64       	ori	r24, 0x40	; 64
    11e0:	8c 93       	st	X, r24

  if (_tx_buffer_head == _tx_buffer_tail) {
    11e2:	93 8d       	ldd	r25, Z+27	; 0x1b
    11e4:	84 8d       	ldd	r24, Z+28	; 0x1c
    11e6:	98 13       	cpse	r25, r24
    11e8:	08 95       	ret
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    11ea:	02 88       	ldd	r0, Z+18	; 0x12
    11ec:	f3 89       	ldd	r31, Z+19	; 0x13
    11ee:	e0 2d       	mov	r30, r0
    11f0:	80 81       	ld	r24, Z
    11f2:	8f 7d       	andi	r24, 0xDF	; 223
    11f4:	80 83       	st	Z, r24
    11f6:	08 95       	ret

000011f8 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    11f8:	cf 93       	push	r28
    11fa:	df 93       	push	r29
    11fc:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    11fe:	88 8d       	ldd	r24, Y+24	; 0x18
    1200:	88 23       	and	r24, r24
    1202:	b9 f0       	breq	.+46     	; 0x1232 <_ZN14HardwareSerial5flushEv+0x3a>
    1204:	ea 89       	ldd	r30, Y+18	; 0x12
    1206:	fb 89       	ldd	r31, Y+19	; 0x13
    1208:	a8 89       	ldd	r26, Y+16	; 0x10
    120a:	b9 89       	ldd	r27, Y+17	; 0x11
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    120c:	90 81       	ld	r25, Z
    120e:	95 ff       	sbrs	r25, 5
    1210:	0d c0       	rjmp	.+26     	; 0x122c <_ZN14HardwareSerial5flushEv+0x34>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    1212:	0f b6       	in	r0, 0x3f	; 63
    1214:	07 fc       	sbrc	r0, 7
    1216:	fa cf       	rjmp	.-12     	; 0x120c <_ZN14HardwareSerial5flushEv+0x14>
    1218:	90 81       	ld	r25, Z
    121a:	95 ff       	sbrs	r25, 5
    121c:	f7 cf       	rjmp	.-18     	; 0x120c <_ZN14HardwareSerial5flushEv+0x14>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    121e:	8c 91       	ld	r24, X
    1220:	85 ff       	sbrs	r24, 5
    1222:	f4 cf       	rjmp	.-24     	; 0x120c <_ZN14HardwareSerial5flushEv+0x14>
	  _tx_udr_empty_irq();
    1224:	ce 01       	movw	r24, r28
    1226:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    122a:	ec cf       	rjmp	.-40     	; 0x1204 <_ZN14HardwareSerial5flushEv+0xc>
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    122c:	8c 91       	ld	r24, X
    122e:	86 ff       	sbrs	r24, 6
    1230:	f0 cf       	rjmp	.-32     	; 0x1212 <_ZN14HardwareSerial5flushEv+0x1a>
	if (bit_is_set(*_ucsra, UDRE0))
	  _tx_udr_empty_irq();
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    1232:	df 91       	pop	r29
    1234:	cf 91       	pop	r28
    1236:	08 95       	ret

00001238 <_ZN14HardwareSerial5writeEh>:

size_t HardwareSerial::write(uint8_t c)
{
    1238:	ef 92       	push	r14
    123a:	ff 92       	push	r15
    123c:	0f 93       	push	r16
    123e:	1f 93       	push	r17
    1240:	cf 93       	push	r28
    1242:	df 93       	push	r29
    1244:	ec 01       	movw	r28, r24
  _written = true;
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    124a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    124c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    124e:	98 17       	cp	r25, r24
    1250:	81 f1       	breq	.+96     	; 0x12b2 <_ZN14HardwareSerial5writeEh+0x7a>
    1252:	06 2f       	mov	r16, r22
    *_udr = c;
    sbi(*_ucsra, TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    1254:	eb 8c       	ldd	r14, Y+27	; 0x1b
    1256:	f1 2c       	mov	r15, r1
    1258:	8f ef       	ldi	r24, 0xFF	; 255
    125a:	e8 1a       	sub	r14, r24
    125c:	f8 0a       	sbc	r15, r24
    125e:	e8 94       	clt
    1260:	e7 f8       	bld	r14, 7
    1262:	ff 24       	eor	r15, r15
    1264:	1e 2d       	mov	r17, r14
    1266:	03 c0       	rjmp	.+6      	; 0x126e <_ZN14HardwareSerial5writeEh+0x36>
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    if (bit_is_clear(SREG, SREG_I)) {
    1268:	0f b6       	in	r0, 0x3f	; 63
    126a:	07 fe       	sbrs	r0, 7
    126c:	19 c0       	rjmp	.+50     	; 0x12a0 <_ZN14HardwareSerial5writeEh+0x68>
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    126e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1270:	19 17       	cp	r17, r25
    1272:	d1 f3       	breq	.-12     	; 0x1268 <_ZN14HardwareSerial5writeEh+0x30>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    1274:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1276:	fe 01       	movw	r30, r28
    1278:	e8 0f       	add	r30, r24
    127a:	f1 1d       	adc	r31, r1
    127c:	e3 5a       	subi	r30, 0xA3	; 163
    127e:	ff 4f       	sbci	r31, 0xFF	; 255
    1280:	00 83       	st	Z, r16
  _tx_buffer_head = i;
    1282:	eb 8e       	std	Y+27, r14	; 0x1b
	
  sbi(*_ucsrb, UDRIE0);
    1284:	ea 89       	ldd	r30, Y+18	; 0x12
    1286:	fb 89       	ldd	r31, Y+19	; 0x13
    1288:	80 81       	ld	r24, Z
    128a:	80 62       	ori	r24, 0x20	; 32
    128c:	80 83       	st	Z, r24
  
  return 1;
}
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	df 91       	pop	r29
    1294:	cf 91       	pop	r28
    1296:	1f 91       	pop	r17
    1298:	0f 91       	pop	r16
    129a:	ff 90       	pop	r15
    129c:	ef 90       	pop	r14
    129e:	08 95       	ret
    if (bit_is_clear(SREG, SREG_I)) {
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    12a0:	e8 89       	ldd	r30, Y+16	; 0x10
    12a2:	f9 89       	ldd	r31, Y+17	; 0x11
    12a4:	80 81       	ld	r24, Z
    12a6:	85 ff       	sbrs	r24, 5
    12a8:	e2 cf       	rjmp	.-60     	; 0x126e <_ZN14HardwareSerial5writeEh+0x36>
	_tx_udr_empty_irq();
    12aa:	ce 01       	movw	r24, r28
    12ac:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    12b0:	de cf       	rjmp	.-68     	; 0x126e <_ZN14HardwareSerial5writeEh+0x36>
  _written = true;
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    12b2:	e8 89       	ldd	r30, Y+16	; 0x10
    12b4:	f9 89       	ldd	r31, Y+17	; 0x11
    12b6:	80 81       	ld	r24, Z
    12b8:	85 ff       	sbrs	r24, 5
    12ba:	cb cf       	rjmp	.-106    	; 0x1252 <_ZN14HardwareSerial5writeEh+0x1a>
    *_udr = c;
    12bc:	ee 89       	ldd	r30, Y+22	; 0x16
    12be:	ff 89       	ldd	r31, Y+23	; 0x17
    12c0:	60 83       	st	Z, r22
    sbi(*_ucsra, TXC0);
    12c2:	e8 89       	ldd	r30, Y+16	; 0x10
    12c4:	f9 89       	ldd	r31, Y+17	; 0x11
    12c6:	80 81       	ld	r24, Z
    12c8:	80 64       	ori	r24, 0x40	; 64
    12ca:	80 83       	st	Z, r24
    return 1;
    12cc:	e0 cf       	rjmp	.-64     	; 0x128e <_ZN14HardwareSerial5writeEh+0x56>

000012ce <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    12ce:	bf 92       	push	r11
    12d0:	cf 92       	push	r12
    12d2:	df 92       	push	r13
    12d4:	ef 92       	push	r14
    12d6:	ff 92       	push	r15
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	ec 01       	movw	r28, r24
    12e2:	6a 01       	movw	r12, r20
    12e4:	7b 01       	movw	r14, r22
    12e6:	b2 2e       	mov	r11, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    12e8:	e8 89       	ldd	r30, Y+16	; 0x10
    12ea:	f9 89       	ldd	r31, Y+17	; 0x11
    12ec:	82 e0       	ldi	r24, 0x02	; 2
    12ee:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    12f0:	41 15       	cp	r20, r1
    12f2:	51 4e       	sbci	r21, 0xE1	; 225
    12f4:	61 05       	cpc	r22, r1
    12f6:	71 05       	cpc	r23, r1
    12f8:	b1 f0       	breq	.+44     	; 0x1326 <_ZN14HardwareSerial5beginEmh+0x58>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    12fa:	60 e0       	ldi	r22, 0x00	; 0
    12fc:	79 e0       	ldi	r23, 0x09	; 9
    12fe:	8d e3       	ldi	r24, 0x3D	; 61
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	a7 01       	movw	r20, r14
    1304:	96 01       	movw	r18, r12
    1306:	0e 94 b6 19 	call	0x336c	; 0x336c <__udivmodsi4>
    130a:	89 01       	movw	r16, r18
    130c:	9a 01       	movw	r18, r20
    130e:	01 50       	subi	r16, 0x01	; 1
    1310:	11 09       	sbc	r17, r1
    1312:	21 09       	sbc	r18, r1
    1314:	31 09       	sbc	r19, r1
    1316:	36 95       	lsr	r19
    1318:	27 95       	ror	r18
    131a:	17 95       	ror	r17
    131c:	07 95       	ror	r16
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    131e:	01 15       	cp	r16, r1
    1320:	80 e1       	ldi	r24, 0x10	; 16
    1322:	18 07       	cpc	r17, r24
    1324:	a8 f0       	brcs	.+42     	; 0x1350 <_ZN14HardwareSerial5beginEmh+0x82>
  {
    *_ucsra = 0;
    1326:	e8 89       	ldd	r30, Y+16	; 0x10
    1328:	f9 89       	ldd	r31, Y+17	; 0x11
    132a:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    132c:	60 e8       	ldi	r22, 0x80	; 128
    132e:	74 e8       	ldi	r23, 0x84	; 132
    1330:	8e e1       	ldi	r24, 0x1E	; 30
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	a7 01       	movw	r20, r14
    1336:	96 01       	movw	r18, r12
    1338:	0e 94 b6 19 	call	0x336c	; 0x336c <__udivmodsi4>
    133c:	da 01       	movw	r26, r20
    133e:	c9 01       	movw	r24, r18
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	a1 09       	sbc	r26, r1
    1344:	b1 09       	sbc	r27, r1
    1346:	b6 95       	lsr	r27
    1348:	a7 95       	ror	r26
    134a:	97 95       	ror	r25
    134c:	87 95       	ror	r24
    134e:	8c 01       	movw	r16, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    1350:	ec 85       	ldd	r30, Y+12	; 0x0c
    1352:	fd 85       	ldd	r31, Y+13	; 0x0d
    1354:	10 83       	st	Z, r17
  *_ubrrl = baud_setting;
    1356:	ee 85       	ldd	r30, Y+14	; 0x0e
    1358:	ff 85       	ldd	r31, Y+15	; 0x0f
    135a:	00 83       	st	Z, r16

  _written = false;
    135c:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    135e:	ec 89       	ldd	r30, Y+20	; 0x14
    1360:	fd 89       	ldd	r31, Y+21	; 0x15
    1362:	b0 82       	st	Z, r11
  
  sbi(*_ucsrb, RXEN0);
    1364:	ea 89       	ldd	r30, Y+18	; 0x12
    1366:	fb 89       	ldd	r31, Y+19	; 0x13
    1368:	80 81       	ld	r24, Z
    136a:	80 61       	ori	r24, 0x10	; 16
    136c:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    136e:	ea 89       	ldd	r30, Y+18	; 0x12
    1370:	fb 89       	ldd	r31, Y+19	; 0x13
    1372:	80 81       	ld	r24, Z
    1374:	88 60       	ori	r24, 0x08	; 8
    1376:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    1378:	ea 89       	ldd	r30, Y+18	; 0x12
    137a:	fb 89       	ldd	r31, Y+19	; 0x13
    137c:	80 81       	ld	r24, Z
    137e:	80 68       	ori	r24, 0x80	; 128
    1380:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    1382:	ea 89       	ldd	r30, Y+18	; 0x12
    1384:	fb 89       	ldd	r31, Y+19	; 0x13
    1386:	80 81       	ld	r24, Z
    1388:	8f 7d       	andi	r24, 0xDF	; 223
    138a:	80 83       	st	Z, r24
}
    138c:	df 91       	pop	r29
    138e:	cf 91       	pop	r28
    1390:	1f 91       	pop	r17
    1392:	0f 91       	pop	r16
    1394:	ff 90       	pop	r15
    1396:	ef 90       	pop	r14
    1398:	df 90       	pop	r13
    139a:	cf 90       	pop	r12
    139c:	bf 90       	pop	r11
    139e:	08 95       	ret

000013a0 <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    13a0:	1f 92       	push	r1
    13a2:	0f 92       	push	r0
    13a4:	0f b6       	in	r0, 0x3f	; 63
    13a6:	0f 92       	push	r0
    13a8:	11 24       	eor	r1, r1
    13aa:	2f 93       	push	r18
    13ac:	8f 93       	push	r24
    13ae:	9f 93       	push	r25
    13b0:	ef 93       	push	r30
    13b2:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    13b4:	e0 91 9e 03 	lds	r30, 0x039E
    13b8:	f0 91 9f 03 	lds	r31, 0x039F
    13bc:	80 81       	ld	r24, Z
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    13be:	e0 91 a4 03 	lds	r30, 0x03A4
    13c2:	f0 91 a5 03 	lds	r31, 0x03A5

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    13c6:	82 fd       	sbrc	r24, 2
    13c8:	1b c0       	rjmp	.+54     	; 0x1400 <__vector_18+0x60>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    13ca:	20 81       	ld	r18, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    13cc:	80 91 a7 03 	lds	r24, 0x03A7
    13d0:	8f 5f       	subi	r24, 0xFF	; 255
    13d2:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    13d4:	90 91 a8 03 	lds	r25, 0x03A8
    13d8:	89 17       	cp	r24, r25
    13da:	41 f0       	breq	.+16     	; 0x13ec <__vector_18+0x4c>
      _rx_buffer[_rx_buffer_head] = c;
    13dc:	e0 91 a7 03 	lds	r30, 0x03A7
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	e2 57       	subi	r30, 0x72	; 114
    13e4:	fc 4f       	sbci	r31, 0xFC	; 252
    13e6:	25 8f       	std	Z+29, r18	; 0x1d
      _rx_buffer_head = i;
    13e8:	80 93 a7 03 	sts	0x03A7, r24
    Serial._rx_complete_irq();
  }
    13ec:	ff 91       	pop	r31
    13ee:	ef 91       	pop	r30
    13f0:	9f 91       	pop	r25
    13f2:	8f 91       	pop	r24
    13f4:	2f 91       	pop	r18
    13f6:	0f 90       	pop	r0
    13f8:	0f be       	out	0x3f, r0	; 63
    13fa:	0f 90       	pop	r0
    13fc:	1f 90       	pop	r1
    13fe:	18 95       	reti
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    1400:	80 81       	ld	r24, Z
    1402:	f4 cf       	rjmp	.-24     	; 0x13ec <__vector_18+0x4c>

00001404 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    1404:	1f 92       	push	r1
    1406:	0f 92       	push	r0
    1408:	0f b6       	in	r0, 0x3f	; 63
    140a:	0f 92       	push	r0
    140c:	11 24       	eor	r1, r1
    140e:	2f 93       	push	r18
    1410:	3f 93       	push	r19
    1412:	4f 93       	push	r20
    1414:	5f 93       	push	r21
    1416:	6f 93       	push	r22
    1418:	7f 93       	push	r23
    141a:	8f 93       	push	r24
    141c:	9f 93       	push	r25
    141e:	af 93       	push	r26
    1420:	bf 93       	push	r27
    1422:	ef 93       	push	r30
    1424:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    1426:	8e e8       	ldi	r24, 0x8E	; 142
    1428:	93 e0       	ldi	r25, 0x03	; 3
    142a:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    142e:	ff 91       	pop	r31
    1430:	ef 91       	pop	r30
    1432:	bf 91       	pop	r27
    1434:	af 91       	pop	r26
    1436:	9f 91       	pop	r25
    1438:	8f 91       	pop	r24
    143a:	7f 91       	pop	r23
    143c:	6f 91       	pop	r22
    143e:	5f 91       	pop	r21
    1440:	4f 91       	pop	r20
    1442:	3f 91       	pop	r19
    1444:	2f 91       	pop	r18
    1446:	0f 90       	pop	r0
    1448:	0f be       	out	0x3f, r0	; 63
    144a:	0f 90       	pop	r0
    144c:	1f 90       	pop	r1
    144e:	18 95       	reti

00001450 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    1450:	8e e8       	ldi	r24, 0x8E	; 142
    1452:	93 e0       	ldi	r25, 0x03	; 3
    1454:	0e 94 9f 08 	call	0x113e	; 0x113e <_ZN14HardwareSerial9availableEv>
    1458:	21 e0       	ldi	r18, 0x01	; 1
    145a:	89 2b       	or	r24, r25
    145c:	09 f4       	brne	.+2      	; 0x1460 <_Z17Serial0_availablev+0x10>
    145e:	20 e0       	ldi	r18, 0x00	; 0
}
    1460:	82 2f       	mov	r24, r18
    1462:	08 95       	ret

00001464 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    1464:	ee e8       	ldi	r30, 0x8E	; 142
    1466:	f3 e0       	ldi	r31, 0x03	; 3
    1468:	13 82       	std	Z+3, r1	; 0x03
    146a:	12 82       	std	Z+2, r1	; 0x02
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
    146c:	88 ee       	ldi	r24, 0xE8	; 232
    146e:	93 e0       	ldi	r25, 0x03	; 3
    1470:	a0 e0       	ldi	r26, 0x00	; 0
    1472:	b0 e0       	ldi	r27, 0x00	; 0
    1474:	84 83       	std	Z+4, r24	; 0x04
    1476:	95 83       	std	Z+5, r25	; 0x05
    1478:	a6 83       	std	Z+6, r26	; 0x06
    147a:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    147c:	84 e7       	ldi	r24, 0x74	; 116
    147e:	91 e0       	ldi	r25, 0x01	; 1
    1480:	91 83       	std	Z+1, r25	; 0x01
    1482:	80 83       	st	Z, r24
    1484:	85 ec       	ldi	r24, 0xC5	; 197
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	95 87       	std	Z+13, r25	; 0x0d
    148a:	84 87       	std	Z+12, r24	; 0x0c
    148c:	84 ec       	ldi	r24, 0xC4	; 196
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	97 87       	std	Z+15, r25	; 0x0f
    1492:	86 87       	std	Z+14, r24	; 0x0e
    1494:	80 ec       	ldi	r24, 0xC0	; 192
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	91 8b       	std	Z+17, r25	; 0x11
    149a:	80 8b       	std	Z+16, r24	; 0x10
    149c:	81 ec       	ldi	r24, 0xC1	; 193
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	93 8b       	std	Z+19, r25	; 0x13
    14a2:	82 8b       	std	Z+18, r24	; 0x12
    14a4:	82 ec       	ldi	r24, 0xC2	; 194
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	95 8b       	std	Z+21, r25	; 0x15
    14aa:	84 8b       	std	Z+20, r24	; 0x14
    14ac:	86 ec       	ldi	r24, 0xC6	; 198
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	97 8b       	std	Z+23, r25	; 0x17
    14b2:	86 8b       	std	Z+22, r24	; 0x16
    14b4:	11 8e       	std	Z+25, r1	; 0x19
    14b6:	12 8e       	std	Z+26, r1	; 0x1a
    14b8:	13 8e       	std	Z+27, r1	; 0x1b
    14ba:	14 8e       	std	Z+28, r1	; 0x1c
    14bc:	08 95       	ret

000014be <_ZN5Print5writeEPKhj>:
size_t Print::println(const String &s)
{
  size_t n = print(s);
  n += println();
  return n;
}
    14be:	cf 92       	push	r12
    14c0:	df 92       	push	r13
    14c2:	ef 92       	push	r14
    14c4:	ff 92       	push	r15
    14c6:	0f 93       	push	r16
    14c8:	1f 93       	push	r17
    14ca:	cf 93       	push	r28
    14cc:	df 93       	push	r29
    14ce:	41 15       	cp	r20, r1
    14d0:	51 05       	cpc	r21, r1
    14d2:	09 f1       	breq	.+66     	; 0x1516 <_ZN5Print5writeEPKhj+0x58>
    14d4:	6a 01       	movw	r12, r20
    14d6:	8c 01       	movw	r16, r24
    14d8:	7b 01       	movw	r14, r22
    14da:	c0 e0       	ldi	r28, 0x00	; 0
    14dc:	d0 e0       	ldi	r29, 0x00	; 0
    14de:	04 c0       	rjmp	.+8      	; 0x14e8 <_ZN5Print5writeEPKhj+0x2a>
    14e0:	21 96       	adiw	r28, 0x01	; 1
    14e2:	cc 16       	cp	r12, r28
    14e4:	dd 06       	cpc	r13, r29
    14e6:	69 f0       	breq	.+26     	; 0x1502 <_ZN5Print5writeEPKhj+0x44>
    14e8:	d7 01       	movw	r26, r14
    14ea:	6d 91       	ld	r22, X+
    14ec:	7d 01       	movw	r14, r26
    14ee:	d8 01       	movw	r26, r16
    14f0:	ed 91       	ld	r30, X+
    14f2:	fc 91       	ld	r31, X
    14f4:	01 90       	ld	r0, Z+
    14f6:	f0 81       	ld	r31, Z
    14f8:	e0 2d       	mov	r30, r0
    14fa:	c8 01       	movw	r24, r16
    14fc:	09 95       	icall
    14fe:	89 2b       	or	r24, r25
    1500:	79 f7       	brne	.-34     	; 0x14e0 <_ZN5Print5writeEPKhj+0x22>
    1502:	ce 01       	movw	r24, r28
    1504:	df 91       	pop	r29
    1506:	cf 91       	pop	r28
    1508:	1f 91       	pop	r17
    150a:	0f 91       	pop	r16
    150c:	ff 90       	pop	r15
    150e:	ef 90       	pop	r14
    1510:	df 90       	pop	r13
    1512:	cf 90       	pop	r12
    1514:	08 95       	ret
    1516:	c0 e0       	ldi	r28, 0x00	; 0
    1518:	d0 e0       	ldi	r29, 0x00	; 0
    151a:	f3 cf       	rjmp	.-26     	; 0x1502 <_ZN5Print5writeEPKhj+0x44>

0000151c <_ZN5Print5printEPKc>:
    151c:	61 15       	cp	r22, r1
    151e:	71 05       	cpc	r23, r1
    1520:	79 f0       	breq	.+30     	; 0x1540 <_ZN5Print5printEPKc+0x24>
    1522:	fb 01       	movw	r30, r22
    1524:	01 90       	ld	r0, Z+
    1526:	00 20       	and	r0, r0
    1528:	e9 f7       	brne	.-6      	; 0x1524 <_ZN5Print5printEPKc+0x8>
    152a:	31 97       	sbiw	r30, 0x01	; 1
    152c:	af 01       	movw	r20, r30
    152e:	46 1b       	sub	r20, r22
    1530:	57 0b       	sbc	r21, r23
    1532:	dc 01       	movw	r26, r24
    1534:	ed 91       	ld	r30, X+
    1536:	fc 91       	ld	r31, X
    1538:	02 80       	ldd	r0, Z+2	; 0x02
    153a:	f3 81       	ldd	r31, Z+3	; 0x03
    153c:	e0 2d       	mov	r30, r0
    153e:	09 94       	ijmp
    1540:	80 e0       	ldi	r24, 0x00	; 0
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	08 95       	ret

00001546 <_ZN5Print7printlnEPKc>:

size_t Print::println(const char c[])
{
    1546:	0f 93       	push	r16
    1548:	1f 93       	push	r17
    154a:	cf 93       	push	r28
    154c:	df 93       	push	r29
    154e:	ec 01       	movw	r28, r24
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }
  
    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
    1550:	61 15       	cp	r22, r1
    1552:	71 05       	cpc	r23, r1
    1554:	09 f1       	breq	.+66     	; 0x1598 <_ZN5Print7printlnEPKc+0x52>
      return write((const uint8_t *)str, strlen(str));
    1556:	fb 01       	movw	r30, r22
    1558:	01 90       	ld	r0, Z+
    155a:	00 20       	and	r0, r0
    155c:	e9 f7       	brne	.-6      	; 0x1558 <_ZN5Print7printlnEPKc+0x12>
    155e:	31 97       	sbiw	r30, 0x01	; 1
    1560:	af 01       	movw	r20, r30
    1562:	46 1b       	sub	r20, r22
    1564:	57 0b       	sbc	r21, r23
    1566:	e8 81       	ld	r30, Y
    1568:	f9 81       	ldd	r31, Y+1	; 0x01
    156a:	02 80       	ldd	r0, Z+2	; 0x02
    156c:	f3 81       	ldd	r31, Z+3	; 0x03
    156e:	e0 2d       	mov	r30, r0
    1570:	09 95       	icall
    1572:	8c 01       	movw	r16, r24
    1574:	e8 81       	ld	r30, Y
    1576:	f9 81       	ldd	r31, Y+1	; 0x01
    1578:	02 80       	ldd	r0, Z+2	; 0x02
    157a:	f3 81       	ldd	r31, Z+3	; 0x03
    157c:	e0 2d       	mov	r30, r0
    157e:	42 e0       	ldi	r20, 0x02	; 2
    1580:	50 e0       	ldi	r21, 0x00	; 0
    1582:	60 e8       	ldi	r22, 0x80	; 128
    1584:	71 e0       	ldi	r23, 0x01	; 1
    1586:	ce 01       	movw	r24, r28
    1588:	09 95       	icall
  size_t n = print(c);
  n += println();
  return n;
}
    158a:	80 0f       	add	r24, r16
    158c:	91 1f       	adc	r25, r17
    158e:	df 91       	pop	r29
    1590:	cf 91       	pop	r28
    1592:	1f 91       	pop	r17
    1594:	0f 91       	pop	r16
    1596:	08 95       	ret
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }
  
    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
    1598:	00 e0       	ldi	r16, 0x00	; 0
    159a:	10 e0       	ldi	r17, 0x00	; 0
    159c:	eb cf       	rjmp	.-42     	; 0x1574 <_ZN5Print7printlnEPKc+0x2e>

0000159e <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    159e:	1f 92       	push	r1
    15a0:	0f 92       	push	r0
    15a2:	0f b6       	in	r0, 0x3f	; 63
    15a4:	0f 92       	push	r0
    15a6:	11 24       	eor	r1, r1
    15a8:	2f 93       	push	r18
    15aa:	3f 93       	push	r19
    15ac:	8f 93       	push	r24
    15ae:	9f 93       	push	r25
    15b0:	af 93       	push	r26
    15b2:	bf 93       	push	r27
    15b4:	80 91 6c 04 	lds	r24, 0x046C
    15b8:	90 91 6d 04 	lds	r25, 0x046D
    15bc:	a0 91 6e 04 	lds	r26, 0x046E
    15c0:	b0 91 6f 04 	lds	r27, 0x046F
    15c4:	30 91 6b 04 	lds	r19, 0x046B
    15c8:	23 e0       	ldi	r18, 0x03	; 3
    15ca:	23 0f       	add	r18, r19
    15cc:	2d 37       	cpi	r18, 0x7D	; 125
    15ce:	68 f1       	brcs	.+90     	; 0x162a <__vector_16+0x8c>
    15d0:	26 e8       	ldi	r18, 0x86	; 134
    15d2:	23 0f       	add	r18, r19
    15d4:	02 96       	adiw	r24, 0x02	; 2
    15d6:	a1 1d       	adc	r26, r1
    15d8:	b1 1d       	adc	r27, r1
    15da:	20 93 6b 04 	sts	0x046B, r18
    15de:	80 93 6c 04 	sts	0x046C, r24
    15e2:	90 93 6d 04 	sts	0x046D, r25
    15e6:	a0 93 6e 04 	sts	0x046E, r26
    15ea:	b0 93 6f 04 	sts	0x046F, r27
    15ee:	80 91 70 04 	lds	r24, 0x0470
    15f2:	90 91 71 04 	lds	r25, 0x0471
    15f6:	a0 91 72 04 	lds	r26, 0x0472
    15fa:	b0 91 73 04 	lds	r27, 0x0473
    15fe:	01 96       	adiw	r24, 0x01	; 1
    1600:	a1 1d       	adc	r26, r1
    1602:	b1 1d       	adc	r27, r1
    1604:	80 93 70 04 	sts	0x0470, r24
    1608:	90 93 71 04 	sts	0x0471, r25
    160c:	a0 93 72 04 	sts	0x0472, r26
    1610:	b0 93 73 04 	sts	0x0473, r27
    1614:	bf 91       	pop	r27
    1616:	af 91       	pop	r26
    1618:	9f 91       	pop	r25
    161a:	8f 91       	pop	r24
    161c:	3f 91       	pop	r19
    161e:	2f 91       	pop	r18
    1620:	0f 90       	pop	r0
    1622:	0f be       	out	0x3f, r0	; 63
    1624:	0f 90       	pop	r0
    1626:	1f 90       	pop	r1
    1628:	18 95       	reti
    162a:	01 96       	adiw	r24, 0x01	; 1
    162c:	a1 1d       	adc	r26, r1
    162e:	b1 1d       	adc	r27, r1
    1630:	d4 cf       	rjmp	.-88     	; 0x15da <__vector_16+0x3c>

00001632 <millis>:
    1632:	2f b7       	in	r18, 0x3f	; 63
    1634:	f8 94       	cli
    1636:	60 91 6c 04 	lds	r22, 0x046C
    163a:	70 91 6d 04 	lds	r23, 0x046D
    163e:	80 91 6e 04 	lds	r24, 0x046E
    1642:	90 91 6f 04 	lds	r25, 0x046F
    1646:	2f bf       	out	0x3f, r18	; 63
    1648:	08 95       	ret

0000164a <micros>:
    164a:	3f b7       	in	r19, 0x3f	; 63
    164c:	f8 94       	cli
    164e:	80 91 70 04 	lds	r24, 0x0470
    1652:	90 91 71 04 	lds	r25, 0x0471
    1656:	a0 91 72 04 	lds	r26, 0x0472
    165a:	b0 91 73 04 	lds	r27, 0x0473
    165e:	26 b5       	in	r18, 0x26	; 38
    1660:	a8 9b       	sbis	0x15, 0	; 21
    1662:	05 c0       	rjmp	.+10     	; 0x166e <micros+0x24>
    1664:	2f 3f       	cpi	r18, 0xFF	; 255
    1666:	19 f0       	breq	.+6      	; 0x166e <micros+0x24>
    1668:	01 96       	adiw	r24, 0x01	; 1
    166a:	a1 1d       	adc	r26, r1
    166c:	b1 1d       	adc	r27, r1
    166e:	3f bf       	out	0x3f, r19	; 63
    1670:	ba 2f       	mov	r27, r26
    1672:	a9 2f       	mov	r26, r25
    1674:	98 2f       	mov	r25, r24
    1676:	88 27       	eor	r24, r24
    1678:	82 0f       	add	r24, r18
    167a:	91 1d       	adc	r25, r1
    167c:	a1 1d       	adc	r26, r1
    167e:	b1 1d       	adc	r27, r1
    1680:	bc 01       	movw	r22, r24
    1682:	cd 01       	movw	r24, r26
    1684:	66 0f       	add	r22, r22
    1686:	77 1f       	adc	r23, r23
    1688:	88 1f       	adc	r24, r24
    168a:	99 1f       	adc	r25, r25
    168c:	66 0f       	add	r22, r22
    168e:	77 1f       	adc	r23, r23
    1690:	88 1f       	adc	r24, r24
    1692:	99 1f       	adc	r25, r25
    1694:	08 95       	ret

00001696 <delay>:
    1696:	8f 92       	push	r8
    1698:	9f 92       	push	r9
    169a:	af 92       	push	r10
    169c:	bf 92       	push	r11
    169e:	cf 92       	push	r12
    16a0:	df 92       	push	r13
    16a2:	ef 92       	push	r14
    16a4:	ff 92       	push	r15
    16a6:	4b 01       	movw	r8, r22
    16a8:	5c 01       	movw	r10, r24
    16aa:	0e 94 25 0b 	call	0x164a	; 0x164a <micros>
    16ae:	6b 01       	movw	r12, r22
    16b0:	7c 01       	movw	r14, r24
    16b2:	81 14       	cp	r8, r1
    16b4:	91 04       	cpc	r9, r1
    16b6:	a1 04       	cpc	r10, r1
    16b8:	b1 04       	cpc	r11, r1
    16ba:	f9 f0       	breq	.+62     	; 0x16fa <delay+0x64>
    16bc:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <yield>
    16c0:	0e 94 25 0b 	call	0x164a	; 0x164a <micros>
    16c4:	dc 01       	movw	r26, r24
    16c6:	cb 01       	movw	r24, r22
    16c8:	8c 19       	sub	r24, r12
    16ca:	9d 09       	sbc	r25, r13
    16cc:	ae 09       	sbc	r26, r14
    16ce:	bf 09       	sbc	r27, r15
    16d0:	88 3e       	cpi	r24, 0xE8	; 232
    16d2:	93 40       	sbci	r25, 0x03	; 3
    16d4:	a1 05       	cpc	r26, r1
    16d6:	b1 05       	cpc	r27, r1
    16d8:	88 f3       	brcs	.-30     	; 0x16bc <delay+0x26>
    16da:	21 e0       	ldi	r18, 0x01	; 1
    16dc:	82 1a       	sub	r8, r18
    16de:	91 08       	sbc	r9, r1
    16e0:	a1 08       	sbc	r10, r1
    16e2:	b1 08       	sbc	r11, r1
    16e4:	88 ee       	ldi	r24, 0xE8	; 232
    16e6:	c8 0e       	add	r12, r24
    16e8:	83 e0       	ldi	r24, 0x03	; 3
    16ea:	d8 1e       	adc	r13, r24
    16ec:	e1 1c       	adc	r14, r1
    16ee:	f1 1c       	adc	r15, r1
    16f0:	81 14       	cp	r8, r1
    16f2:	91 04       	cpc	r9, r1
    16f4:	a1 04       	cpc	r10, r1
    16f6:	b1 04       	cpc	r11, r1
    16f8:	19 f7       	brne	.-58     	; 0x16c0 <delay+0x2a>
    16fa:	ff 90       	pop	r15
    16fc:	ef 90       	pop	r14
    16fe:	df 90       	pop	r13
    1700:	cf 90       	pop	r12
    1702:	bf 90       	pop	r11
    1704:	af 90       	pop	r10
    1706:	9f 90       	pop	r9
    1708:	8f 90       	pop	r8
    170a:	08 95       	ret

0000170c <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    170c:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    170e:	84 b5       	in	r24, 0x24	; 36
    1710:	82 60       	ori	r24, 0x02	; 2
    1712:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    1714:	84 b5       	in	r24, 0x24	; 36
    1716:	81 60       	ori	r24, 0x01	; 1
    1718:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    171a:	85 b5       	in	r24, 0x25	; 37
    171c:	82 60       	ori	r24, 0x02	; 2
    171e:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    1720:	85 b5       	in	r24, 0x25	; 37
    1722:	81 60       	ori	r24, 0x01	; 1
    1724:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    1726:	ee e6       	ldi	r30, 0x6E	; 110
    1728:	f0 e0       	ldi	r31, 0x00	; 0
    172a:	80 81       	ld	r24, Z
    172c:	81 60       	ori	r24, 0x01	; 1
    172e:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    1730:	e1 e8       	ldi	r30, 0x81	; 129
    1732:	f0 e0       	ldi	r31, 0x00	; 0
    1734:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    1736:	80 81       	ld	r24, Z
    1738:	82 60       	ori	r24, 0x02	; 2
    173a:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    173c:	80 81       	ld	r24, Z
    173e:	81 60       	ori	r24, 0x01	; 1
    1740:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    1742:	e0 e8       	ldi	r30, 0x80	; 128
    1744:	f0 e0       	ldi	r31, 0x00	; 0
    1746:	80 81       	ld	r24, Z
    1748:	81 60       	ori	r24, 0x01	; 1
    174a:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    174c:	e1 eb       	ldi	r30, 0xB1	; 177
    174e:	f0 e0       	ldi	r31, 0x00	; 0
    1750:	80 81       	ld	r24, Z
    1752:	84 60       	ori	r24, 0x04	; 4
    1754:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    1756:	e0 eb       	ldi	r30, 0xB0	; 176
    1758:	f0 e0       	ldi	r31, 0x00	; 0
    175a:	80 81       	ld	r24, Z
    175c:	81 60       	ori	r24, 0x01	; 1
    175e:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    1760:	ea e7       	ldi	r30, 0x7A	; 122
    1762:	f0 e0       	ldi	r31, 0x00	; 0
    1764:	80 81       	ld	r24, Z
    1766:	84 60       	ori	r24, 0x04	; 4
    1768:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    176a:	80 81       	ld	r24, Z
    176c:	82 60       	ori	r24, 0x02	; 2
    176e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    1770:	80 81       	ld	r24, Z
    1772:	81 60       	ori	r24, 0x01	; 1
    1774:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    1776:	80 81       	ld	r24, Z
    1778:	80 68       	ori	r24, 0x80	; 128
    177a:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    177c:	10 92 c1 00 	sts	0x00C1, r1
    1780:	08 95       	ret

00001782 <_ZN6StringD1Ev>:

long String::toInt(void) const
{
	if (buffer) return atol(buffer);
	return 0;
}
    1782:	fc 01       	movw	r30, r24
    1784:	80 81       	ld	r24, Z
    1786:	91 81       	ldd	r25, Z+1	; 0x01
    1788:	0c 94 a5 1e 	jmp	0x3d4a	; 0x3d4a <free>

0000178c <_ZN6String7reserveEj>:
    178c:	0f 93       	push	r16
    178e:	1f 93       	push	r17
    1790:	cf 93       	push	r28
    1792:	df 93       	push	r29
    1794:	fc 01       	movw	r30, r24
    1796:	80 81       	ld	r24, Z
    1798:	91 81       	ldd	r25, Z+1	; 0x01
    179a:	00 97       	sbiw	r24, 0x00	; 0
    179c:	29 f0       	breq	.+10     	; 0x17a8 <_ZN6String7reserveEj+0x1c>
    179e:	22 81       	ldd	r18, Z+2	; 0x02
    17a0:	33 81       	ldd	r19, Z+3	; 0x03
    17a2:	26 17       	cp	r18, r22
    17a4:	37 07       	cpc	r19, r23
    17a6:	90 f4       	brcc	.+36     	; 0x17cc <_ZN6String7reserveEj+0x40>
    17a8:	8b 01       	movw	r16, r22
    17aa:	ef 01       	movw	r28, r30
    17ac:	6f 5f       	subi	r22, 0xFF	; 255
    17ae:	7f 4f       	sbci	r23, 0xFF	; 255
    17b0:	0e 94 99 1f 	call	0x3f32	; 0x3f32 <realloc>
    17b4:	00 97       	sbiw	r24, 0x00	; 0
    17b6:	81 f0       	breq	.+32     	; 0x17d8 <_ZN6String7reserveEj+0x4c>
    17b8:	99 83       	std	Y+1, r25	; 0x01
    17ba:	88 83       	st	Y, r24
    17bc:	1b 83       	std	Y+3, r17	; 0x03
    17be:	0a 83       	std	Y+2, r16	; 0x02
    17c0:	2c 81       	ldd	r18, Y+4	; 0x04
    17c2:	3d 81       	ldd	r19, Y+5	; 0x05
    17c4:	23 2b       	or	r18, r19
    17c6:	11 f4       	brne	.+4      	; 0x17cc <_ZN6String7reserveEj+0x40>
    17c8:	fc 01       	movw	r30, r24
    17ca:	10 82       	st	Z, r1
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	df 91       	pop	r29
    17d0:	cf 91       	pop	r28
    17d2:	1f 91       	pop	r17
    17d4:	0f 91       	pop	r16
    17d6:	08 95       	ret
    17d8:	80 e0       	ldi	r24, 0x00	; 0
    17da:	f9 cf       	rjmp	.-14     	; 0x17ce <_ZN6String7reserveEj+0x42>

000017dc <_ZN6String4copyEPKcj>:
    17dc:	ef 92       	push	r14
    17de:	ff 92       	push	r15
    17e0:	0f 93       	push	r16
    17e2:	1f 93       	push	r17
    17e4:	cf 93       	push	r28
    17e6:	df 93       	push	r29
    17e8:	ec 01       	movw	r28, r24
    17ea:	7b 01       	movw	r14, r22
    17ec:	8a 01       	movw	r16, r20
    17ee:	ba 01       	movw	r22, r20
    17f0:	0e 94 c6 0b 	call	0x178c	; 0x178c <_ZN6String7reserveEj>
    17f4:	81 11       	cpse	r24, r1
    17f6:	14 c0       	rjmp	.+40     	; 0x1820 <_ZN6String4copyEPKcj+0x44>
    17f8:	88 81       	ld	r24, Y
    17fa:	99 81       	ldd	r25, Y+1	; 0x01
    17fc:	00 97       	sbiw	r24, 0x00	; 0
    17fe:	11 f0       	breq	.+4      	; 0x1804 <_ZN6String4copyEPKcj+0x28>
    1800:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    1804:	19 82       	std	Y+1, r1	; 0x01
    1806:	18 82       	st	Y, r1
    1808:	1d 82       	std	Y+5, r1	; 0x05
    180a:	1c 82       	std	Y+4, r1	; 0x04
    180c:	1b 82       	std	Y+3, r1	; 0x03
    180e:	1a 82       	std	Y+2, r1	; 0x02
    1810:	ce 01       	movw	r24, r28
    1812:	df 91       	pop	r29
    1814:	cf 91       	pop	r28
    1816:	1f 91       	pop	r17
    1818:	0f 91       	pop	r16
    181a:	ff 90       	pop	r15
    181c:	ef 90       	pop	r14
    181e:	08 95       	ret
    1820:	1d 83       	std	Y+5, r17	; 0x05
    1822:	0c 83       	std	Y+4, r16	; 0x04
    1824:	b7 01       	movw	r22, r14
    1826:	88 81       	ld	r24, Y
    1828:	99 81       	ldd	r25, Y+1	; 0x01
    182a:	0e 94 ae 21 	call	0x435c	; 0x435c <strcpy>
    182e:	ce 01       	movw	r24, r28
    1830:	df 91       	pop	r29
    1832:	cf 91       	pop	r28
    1834:	1f 91       	pop	r17
    1836:	0f 91       	pop	r16
    1838:	ff 90       	pop	r15
    183a:	ef 90       	pop	r14
    183c:	08 95       	ret

0000183e <_ZN6StringC1EPKc>:
    183e:	fc 01       	movw	r30, r24
    1840:	11 82       	std	Z+1, r1	; 0x01
    1842:	10 82       	st	Z, r1
    1844:	13 82       	std	Z+3, r1	; 0x03
    1846:	12 82       	std	Z+2, r1	; 0x02
    1848:	15 82       	std	Z+5, r1	; 0x05
    184a:	14 82       	std	Z+4, r1	; 0x04
    184c:	61 15       	cp	r22, r1
    184e:	71 05       	cpc	r23, r1
    1850:	51 f0       	breq	.+20     	; 0x1866 <_ZN6StringC1EPKc+0x28>
    1852:	fb 01       	movw	r30, r22
    1854:	01 90       	ld	r0, Z+
    1856:	00 20       	and	r0, r0
    1858:	e9 f7       	brne	.-6      	; 0x1854 <_ZN6StringC1EPKc+0x16>
    185a:	31 97       	sbiw	r30, 0x01	; 1
    185c:	af 01       	movw	r20, r30
    185e:	46 1b       	sub	r20, r22
    1860:	57 0b       	sbc	r21, r23
    1862:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <_ZN6String4copyEPKcj>
    1866:	08 95       	ret

00001868 <_ZN6StringaSERKS_>:
    1868:	cf 93       	push	r28
    186a:	df 93       	push	r29
    186c:	ec 01       	movw	r28, r24
    186e:	fb 01       	movw	r30, r22
    1870:	86 17       	cp	r24, r22
    1872:	97 07       	cpc	r25, r23
    1874:	49 f0       	breq	.+18     	; 0x1888 <_ZN6StringaSERKS_+0x20>
    1876:	60 81       	ld	r22, Z
    1878:	71 81       	ldd	r23, Z+1	; 0x01
    187a:	61 15       	cp	r22, r1
    187c:	71 05       	cpc	r23, r1
    187e:	41 f0       	breq	.+16     	; 0x1890 <_ZN6StringaSERKS_+0x28>
    1880:	44 81       	ldd	r20, Z+4	; 0x04
    1882:	55 81       	ldd	r21, Z+5	; 0x05
    1884:	0e 94 ee 0b 	call	0x17dc	; 0x17dc <_ZN6String4copyEPKcj>
    1888:	ce 01       	movw	r24, r28
    188a:	df 91       	pop	r29
    188c:	cf 91       	pop	r28
    188e:	08 95       	ret
    1890:	88 81       	ld	r24, Y
    1892:	99 81       	ldd	r25, Y+1	; 0x01
    1894:	00 97       	sbiw	r24, 0x00	; 0
    1896:	11 f0       	breq	.+4      	; 0x189c <_ZN6StringaSERKS_+0x34>
    1898:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    189c:	19 82       	std	Y+1, r1	; 0x01
    189e:	18 82       	st	Y, r1
    18a0:	1d 82       	std	Y+5, r1	; 0x05
    18a2:	1c 82       	std	Y+4, r1	; 0x04
    18a4:	1b 82       	std	Y+3, r1	; 0x03
    18a6:	1a 82       	std	Y+2, r1	; 0x02
    18a8:	ce 01       	movw	r24, r28
    18aa:	df 91       	pop	r29
    18ac:	cf 91       	pop	r28
    18ae:	08 95       	ret

000018b0 <_ZN6StringC1ERKS_>:
    18b0:	fc 01       	movw	r30, r24
    18b2:	11 82       	std	Z+1, r1	; 0x01
    18b4:	10 82       	st	Z, r1
    18b6:	13 82       	std	Z+3, r1	; 0x03
    18b8:	12 82       	std	Z+2, r1	; 0x02
    18ba:	15 82       	std	Z+5, r1	; 0x05
    18bc:	14 82       	std	Z+4, r1	; 0x04
    18be:	0c 94 34 0c 	jmp	0x1868	; 0x1868 <_ZN6StringaSERKS_>

000018c2 <_ZN6StringaSEPKc>:
    18c2:	cf 93       	push	r28
    18c4:	df 93       	push	r29
    18c6:	ec 01       	movw	r28, r24
    18c8:	61 15       	cp	r22, r1
    18ca:	71 05       	cpc	r23, r1
    18cc:	71 f0       	breq	.+28     	; 0x18ea <_ZN6StringaSEPKc+0x28>
    18ce:	fb 01       	movw	r30, r22
    18d0:	01 90       	ld	r0, Z+
    18d2:	00 20       	and	r0, r0
    18d4:	e9 f7       	brne	.-6      	; 0x18d0 <_ZN6StringaSEPKc+0xe>
    18d6:	31 97       	sbiw	r30, 0x01	; 1
    18d8:	af 01       	movw	r20, r30
    18da:	46 1b       	sub	r20, r22
    18dc:	57 0b       	sbc	r21, r23
    18de:	0e 94 ee 0b 	call	0x17dc	; 0x17dc <_ZN6String4copyEPKcj>
    18e2:	ce 01       	movw	r24, r28
    18e4:	df 91       	pop	r29
    18e6:	cf 91       	pop	r28
    18e8:	08 95       	ret
    18ea:	88 81       	ld	r24, Y
    18ec:	99 81       	ldd	r25, Y+1	; 0x01
    18ee:	00 97       	sbiw	r24, 0x00	; 0
    18f0:	11 f0       	breq	.+4      	; 0x18f6 <_ZN6StringaSEPKc+0x34>
    18f2:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    18f6:	19 82       	std	Y+1, r1	; 0x01
    18f8:	18 82       	st	Y, r1
    18fa:	1d 82       	std	Y+5, r1	; 0x05
    18fc:	1c 82       	std	Y+4, r1	; 0x04
    18fe:	1b 82       	std	Y+3, r1	; 0x03
    1900:	1a 82       	std	Y+2, r1	; 0x02
    1902:	ce 01       	movw	r24, r28
    1904:	df 91       	pop	r29
    1906:	cf 91       	pop	r28
    1908:	08 95       	ret

0000190a <_ZN6String6concatEPKcj>:
    190a:	ef 92       	push	r14
    190c:	ff 92       	push	r15
    190e:	0f 93       	push	r16
    1910:	1f 93       	push	r17
    1912:	cf 93       	push	r28
    1914:	df 93       	push	r29
    1916:	fc 01       	movw	r30, r24
    1918:	24 81       	ldd	r18, Z+4	; 0x04
    191a:	35 81       	ldd	r19, Z+5	; 0x05
    191c:	61 15       	cp	r22, r1
    191e:	71 05       	cpc	r23, r1
    1920:	a9 f0       	breq	.+42     	; 0x194c <_ZN6String6concatEPKcj+0x42>
    1922:	41 15       	cp	r20, r1
    1924:	51 05       	cpc	r21, r1
    1926:	41 f4       	brne	.+16     	; 0x1938 <_ZN6String6concatEPKcj+0x2e>
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	df 91       	pop	r29
    192c:	cf 91       	pop	r28
    192e:	1f 91       	pop	r17
    1930:	0f 91       	pop	r16
    1932:	ff 90       	pop	r15
    1934:	ef 90       	pop	r14
    1936:	08 95       	ret
    1938:	8b 01       	movw	r16, r22
    193a:	ec 01       	movw	r28, r24
    193c:	7a 01       	movw	r14, r20
    193e:	e2 0e       	add	r14, r18
    1940:	f3 1e       	adc	r15, r19
    1942:	b7 01       	movw	r22, r14
    1944:	0e 94 c6 0b 	call	0x178c	; 0x178c <_ZN6String7reserveEj>
    1948:	81 11       	cpse	r24, r1
    194a:	08 c0       	rjmp	.+16     	; 0x195c <_ZN6String6concatEPKcj+0x52>
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	df 91       	pop	r29
    1950:	cf 91       	pop	r28
    1952:	1f 91       	pop	r17
    1954:	0f 91       	pop	r16
    1956:	ff 90       	pop	r15
    1958:	ef 90       	pop	r14
    195a:	08 95       	ret
    195c:	28 81       	ld	r18, Y
    195e:	39 81       	ldd	r19, Y+1	; 0x01
    1960:	8c 81       	ldd	r24, Y+4	; 0x04
    1962:	9d 81       	ldd	r25, Y+5	; 0x05
    1964:	b8 01       	movw	r22, r16
    1966:	82 0f       	add	r24, r18
    1968:	93 1f       	adc	r25, r19
    196a:	0e 94 ae 21 	call	0x435c	; 0x435c <strcpy>
    196e:	fd 82       	std	Y+5, r15	; 0x05
    1970:	ec 82       	std	Y+4, r14	; 0x04
    1972:	81 e0       	ldi	r24, 0x01	; 1
    1974:	df 91       	pop	r29
    1976:	cf 91       	pop	r28
    1978:	1f 91       	pop	r17
    197a:	0f 91       	pop	r16
    197c:	ff 90       	pop	r15
    197e:	ef 90       	pop	r14
    1980:	08 95       	ret

00001982 <_ZN6String6concatEc>:
    1982:	cf 93       	push	r28
    1984:	df 93       	push	r29
    1986:	00 d0       	rcall	.+0      	; 0x1988 <_ZN6String6concatEc+0x6>
    1988:	cd b7       	in	r28, 0x3d	; 61
    198a:	de b7       	in	r29, 0x3e	; 62
    198c:	69 83       	std	Y+1, r22	; 0x01
    198e:	1a 82       	std	Y+2, r1	; 0x02
    1990:	41 e0       	ldi	r20, 0x01	; 1
    1992:	50 e0       	ldi	r21, 0x00	; 0
    1994:	be 01       	movw	r22, r28
    1996:	6f 5f       	subi	r22, 0xFF	; 255
    1998:	7f 4f       	sbci	r23, 0xFF	; 255
    199a:	0e 94 85 0c 	call	0x190a	; 0x190a <_ZN6String6concatEPKcj>
    199e:	0f 90       	pop	r0
    19a0:	0f 90       	pop	r0
    19a2:	df 91       	pop	r29
    19a4:	cf 91       	pop	r28
    19a6:	08 95       	ret

000019a8 <_ZN6StringixEj>:
    19a8:	fc 01       	movw	r30, r24
    19aa:	24 81       	ldd	r18, Z+4	; 0x04
    19ac:	35 81       	ldd	r19, Z+5	; 0x05
    19ae:	62 17       	cp	r22, r18
    19b0:	73 07       	cpc	r23, r19
    19b2:	38 f4       	brcc	.+14     	; 0x19c2 <_ZN6StringixEj+0x1a>
    19b4:	80 81       	ld	r24, Z
    19b6:	91 81       	ldd	r25, Z+1	; 0x01
    19b8:	00 97       	sbiw	r24, 0x00	; 0
    19ba:	19 f0       	breq	.+6      	; 0x19c2 <_ZN6StringixEj+0x1a>
    19bc:	86 0f       	add	r24, r22
    19be:	97 1f       	adc	r25, r23
    19c0:	08 95       	ret
    19c2:	10 92 74 04 	sts	0x0474, r1
    19c6:	84 e7       	ldi	r24, 0x74	; 116
    19c8:	94 e0       	ldi	r25, 0x04	; 4
    19ca:	08 95       	ret

000019cc <_ZNK6String7toFloatEv>:

float String::toFloat(void) const
{
	if (buffer) return float(atof(buffer));
    19cc:	fc 01       	movw	r30, r24
    19ce:	80 81       	ld	r24, Z
    19d0:	91 81       	ldd	r25, Z+1	; 0x01
    19d2:	00 97       	sbiw	r24, 0x00	; 0
    19d4:	11 f0       	breq	.+4      	; 0x19da <_ZNK6String7toFloatEv+0xe>
    19d6:	0c 94 74 21 	jmp	0x42e8	; 0x42e8 <atof>
	return 0;
}
    19da:	60 e0       	ldi	r22, 0x00	; 0
    19dc:	70 e0       	ldi	r23, 0x00	; 0
    19de:	cb 01       	movw	r24, r22
    19e0:	08 95       	ret

000019e2 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    19e2:	08 95       	ret

000019e4 <_ZN17Adafruit_NeoPixelC1Ejhh>:
  return pixels;
}

uint16_t Adafruit_NeoPixel::numPixels(void) const {
  return numLEDs;
}
    19e4:	ff 92       	push	r15
    19e6:	0f 93       	push	r16
    19e8:	1f 93       	push	r17
    19ea:	cf 93       	push	r28
    19ec:	df 93       	push	r29
    19ee:	ec 01       	movw	r28, r24
    19f0:	f2 2e       	mov	r15, r18
    19f2:	79 83       	std	Y+1, r23	; 0x01
    19f4:	68 83       	st	Y, r22
    19f6:	8b 01       	movw	r16, r22
    19f8:	00 0f       	add	r16, r16
    19fa:	11 1f       	adc	r17, r17
    19fc:	06 0f       	add	r16, r22
    19fe:	17 1f       	adc	r17, r23
    1a00:	1b 83       	std	Y+3, r17	; 0x03
    1a02:	0a 83       	std	Y+2, r16	; 0x02
    1a04:	4c 83       	std	Y+4, r20	; 0x04
    1a06:	2b 87       	std	Y+11, r18	; 0x0b
    1a08:	50 e0       	ldi	r21, 0x00	; 0
    1a0a:	fa 01       	movw	r30, r20
    1a0c:	e8 5e       	subi	r30, 0xE8	; 232
    1a0e:	fe 4f       	sbci	r31, 0xFE	; 254
    1a10:	e4 91       	lpm	r30, Z
    1a12:	f0 e0       	ldi	r31, 0x00	; 0
    1a14:	ee 0f       	add	r30, r30
    1a16:	ff 1f       	adc	r31, r31
    1a18:	ea 5c       	subi	r30, 0xCA	; 202
    1a1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a1c:	85 91       	lpm	r24, Z+
    1a1e:	94 91       	lpm	r25, Z
    1a20:	99 8b       	std	Y+17, r25	; 0x11
    1a22:	88 8b       	std	Y+16, r24	; 0x10
    1a24:	fa 01       	movw	r30, r20
    1a26:	ec 5f       	subi	r30, 0xFC	; 252
    1a28:	fe 4f       	sbci	r31, 0xFE	; 254
    1a2a:	44 91       	lpm	r20, Z
    1a2c:	4a 8b       	std	Y+18, r20	; 0x12
    1a2e:	c8 01       	movw	r24, r16
    1a30:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <malloc>
    1a34:	9f 83       	std	Y+7, r25	; 0x07
    1a36:	8e 83       	std	Y+6, r24	; 0x06
    1a38:	00 97       	sbiw	r24, 0x00	; 0
    1a3a:	29 f0       	breq	.+10     	; 0x1a46 <_ZN17Adafruit_NeoPixelC1Ejhh+0x62>
    1a3c:	a8 01       	movw	r20, r16
    1a3e:	60 e0       	ldi	r22, 0x00	; 0
    1a40:	70 e0       	ldi	r23, 0x00	; 0
    1a42:	0e 94 9c 21 	call	0x4338	; 0x4338 <memset>
    1a46:	f0 fe       	sbrs	r15, 0
    1a48:	04 c0       	rjmp	.+8      	; 0x1a52 <_ZN17Adafruit_NeoPixelC1Ejhh+0x6e>
    1a4a:	81 e0       	ldi	r24, 0x01	; 1
    1a4c:	88 87       	std	Y+8, r24	; 0x08
    1a4e:	19 86       	std	Y+9, r1	; 0x09
    1a50:	0b c0       	rjmp	.+22     	; 0x1a68 <_ZN17Adafruit_NeoPixelC1Ejhh+0x84>
    1a52:	f2 fe       	sbrs	r15, 2
    1a54:	06 c0       	rjmp	.+12     	; 0x1a62 <_ZN17Adafruit_NeoPixelC1Ejhh+0x7e>
    1a56:	81 e0       	ldi	r24, 0x01	; 1
    1a58:	88 87       	std	Y+8, r24	; 0x08
    1a5a:	82 e0       	ldi	r24, 0x02	; 2
    1a5c:	89 87       	std	Y+9, r24	; 0x09
    1a5e:	1a 86       	std	Y+10, r1	; 0x0a
    1a60:	05 c0       	rjmp	.+10     	; 0x1a6c <_ZN17Adafruit_NeoPixelC1Ejhh+0x88>
    1a62:	18 86       	std	Y+8, r1	; 0x08
    1a64:	81 e0       	ldi	r24, 0x01	; 1
    1a66:	89 87       	std	Y+9, r24	; 0x09
    1a68:	82 e0       	ldi	r24, 0x02	; 2
    1a6a:	8a 87       	std	Y+10, r24	; 0x0a
    1a6c:	df 91       	pop	r29
    1a6e:	cf 91       	pop	r28
    1a70:	1f 91       	pop	r17
    1a72:	0f 91       	pop	r16
    1a74:	ff 90       	pop	r15
    1a76:	08 95       	ret

00001a78 <_ZN17Adafruit_NeoPixelD1Ev>:
    1a78:	cf 93       	push	r28
    1a7a:	df 93       	push	r29
    1a7c:	ec 01       	movw	r28, r24
    1a7e:	8e 81       	ldd	r24, Y+6	; 0x06
    1a80:	9f 81       	ldd	r25, Y+7	; 0x07
    1a82:	00 97       	sbiw	r24, 0x00	; 0
    1a84:	11 f0       	breq	.+4      	; 0x1a8a <_ZN17Adafruit_NeoPixelD1Ev+0x12>
    1a86:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    1a8a:	60 e0       	ldi	r22, 0x00	; 0
    1a8c:	8c 81       	ldd	r24, Y+4	; 0x04
    1a8e:	df 91       	pop	r29
    1a90:	cf 91       	pop	r28
    1a92:	0c 94 cc 18 	jmp	0x3198	; 0x3198 <pinMode>

00001a96 <_ZN17Adafruit_NeoPixel5beginEv>:
    1a96:	cf 93       	push	r28
    1a98:	df 93       	push	r29
    1a9a:	ec 01       	movw	r28, r24
    1a9c:	61 e0       	ldi	r22, 0x01	; 1
    1a9e:	8c 81       	ldd	r24, Y+4	; 0x04
    1aa0:	0e 94 cc 18 	call	0x3198	; 0x3198 <pinMode>
    1aa4:	60 e0       	ldi	r22, 0x00	; 0
    1aa6:	8c 81       	ldd	r24, Y+4	; 0x04
    1aa8:	df 91       	pop	r29
    1aaa:	cf 91       	pop	r28
    1aac:	0c 94 0d 19 	jmp	0x321a	; 0x321a <digitalWrite>

00001ab0 <_ZN17Adafruit_NeoPixel4showEv>:
    1ab0:	cf 92       	push	r12
    1ab2:	df 92       	push	r13
    1ab4:	ef 92       	push	r14
    1ab6:	ff 92       	push	r15
    1ab8:	0f 93       	push	r16
    1aba:	1f 93       	push	r17
    1abc:	cf 93       	push	r28
    1abe:	df 93       	push	r29
    1ac0:	cd b7       	in	r28, 0x3d	; 61
    1ac2:	de b7       	in	r29, 0x3e	; 62
    1ac4:	29 97       	sbiw	r28, 0x09	; 9
    1ac6:	0f b6       	in	r0, 0x3f	; 63
    1ac8:	f8 94       	cli
    1aca:	de bf       	out	0x3e, r29	; 62
    1acc:	0f be       	out	0x3f, r0	; 63
    1ace:	cd bf       	out	0x3d, r28	; 61
    1ad0:	8c 01       	movw	r16, r24
    1ad2:	dc 01       	movw	r26, r24
    1ad4:	16 96       	adiw	r26, 0x06	; 6
    1ad6:	8d 91       	ld	r24, X+
    1ad8:	9c 91       	ld	r25, X
    1ada:	17 97       	sbiw	r26, 0x07	; 7
    1adc:	89 2b       	or	r24, r25
    1ade:	09 f4       	brne	.+2      	; 0x1ae2 <_ZN17Adafruit_NeoPixel4showEv+0x32>
    1ae0:	9d c0       	rjmp	.+314    	; 0x1c1c <nextbyte40+0x32>
    1ae2:	0e 94 25 0b 	call	0x164a	; 0x164a <micros>
    1ae6:	f8 01       	movw	r30, r16
    1ae8:	c4 84       	ldd	r12, Z+12	; 0x0c
    1aea:	d5 84       	ldd	r13, Z+13	; 0x0d
    1aec:	e6 84       	ldd	r14, Z+14	; 0x0e
    1aee:	f7 84       	ldd	r15, Z+15	; 0x0f
    1af0:	dc 01       	movw	r26, r24
    1af2:	cb 01       	movw	r24, r22
    1af4:	8c 19       	sub	r24, r12
    1af6:	9d 09       	sbc	r25, r13
    1af8:	ae 09       	sbc	r26, r14
    1afa:	bf 09       	sbc	r27, r15
    1afc:	c2 97       	sbiw	r24, 0x32	; 50
    1afe:	a1 05       	cpc	r26, r1
    1b00:	b1 05       	cpc	r27, r1
    1b02:	78 f3       	brcs	.-34     	; 0x1ae2 <_ZN17Adafruit_NeoPixel4showEv+0x32>
    1b04:	f8 94       	cli
    1b06:	82 81       	ldd	r24, Z+2	; 0x02
    1b08:	93 81       	ldd	r25, Z+3	; 0x03
    1b0a:	9a 83       	std	Y+2, r25	; 0x02
    1b0c:	89 83       	std	Y+1, r24	; 0x01
    1b0e:	06 80       	ldd	r0, Z+6	; 0x06
    1b10:	f7 81       	ldd	r31, Z+7	; 0x07
    1b12:	e0 2d       	mov	r30, r0
    1b14:	7f 01       	movw	r14, r30
    1b16:	bf ef       	ldi	r27, 0xFF	; 255
    1b18:	eb 1a       	sub	r14, r27
    1b1a:	fb 0a       	sbc	r15, r27
    1b1c:	80 81       	ld	r24, Z
    1b1e:	89 87       	std	Y+9, r24	; 0x09
    1b20:	f8 01       	movw	r30, r16
    1b22:	93 85       	ldd	r25, Z+11	; 0x0b
    1b24:	00 88       	ldd	r0, Z+16	; 0x10
    1b26:	f1 89       	ldd	r31, Z+17	; 0x11
    1b28:	e0 2d       	mov	r30, r0
    1b2a:	d8 01       	movw	r26, r16
    1b2c:	52 96       	adiw	r26, 0x12	; 18
    1b2e:	8c 91       	ld	r24, X
    1b30:	91 ff       	sbrs	r25, 1
    1b32:	30 c0       	rjmp	.+96     	; 0x1b94 <nextbyte20+0x1e>
    1b34:	90 81       	ld	r25, Z
    1b36:	98 2b       	or	r25, r24
    1b38:	98 87       	std	Y+8, r25	; 0x08
    1b3a:	90 81       	ld	r25, Z
    1b3c:	80 95       	com	r24
    1b3e:	89 23       	and	r24, r25
    1b40:	8f 83       	std	Y+7, r24	; 0x07
    1b42:	8f 81       	ldd	r24, Y+7	; 0x07
    1b44:	8e 83       	std	Y+6, r24	; 0x06
    1b46:	88 e0       	ldi	r24, 0x08	; 8
    1b48:	8d 83       	std	Y+5, r24	; 0x05
    1b4a:	58 85       	ldd	r21, Y+8	; 0x08
    1b4c:	6f 81       	ldd	r22, Y+7	; 0x07
    1b4e:	49 85       	ldd	r20, Y+9	; 0x09
    1b50:	3d 81       	ldd	r19, Y+5	; 0x05
    1b52:	2e 81       	ldd	r18, Y+6	; 0x06
    1b54:	89 81       	ldd	r24, Y+1	; 0x01
    1b56:	9a 81       	ldd	r25, Y+2	; 0x02
    1b58:	d7 01       	movw	r26, r14

00001b5a <head20>:
    1b5a:	50 83       	st	Z, r21
    1b5c:	47 fd       	sbrc	r20, 7
    1b5e:	25 2f       	mov	r18, r21
    1b60:	3a 95       	dec	r19
    1b62:	20 83       	st	Z, r18
    1b64:	26 2f       	mov	r18, r22
    1b66:	39 f0       	breq	.+14     	; 0x1b76 <nextbyte20>
    1b68:	44 1f       	adc	r20, r20
    1b6a:	00 c0       	rjmp	.+0      	; 0x1b6c <head20+0x12>
    1b6c:	00 00       	nop
    1b6e:	60 83       	st	Z, r22
    1b70:	00 00       	nop
    1b72:	00 c0       	rjmp	.+0      	; 0x1b74 <head20+0x1a>
    1b74:	f2 cf       	rjmp	.-28     	; 0x1b5a <head20>

00001b76 <nextbyte20>:
    1b76:	38 e0       	ldi	r19, 0x08	; 8
    1b78:	4d 91       	ld	r20, X+
    1b7a:	60 83       	st	Z, r22
    1b7c:	00 00       	nop
    1b7e:	01 97       	sbiw	r24, 0x01	; 1
    1b80:	61 f7       	brne	.-40     	; 0x1b5a <head20>
    1b82:	d8 01       	movw	r26, r16
    1b84:	51 96       	adiw	r26, 0x11	; 17
    1b86:	fc 93       	st	X, r31
    1b88:	ee 93       	st	-X, r30
    1b8a:	50 97       	sbiw	r26, 0x10	; 16
    1b8c:	49 87       	std	Y+9, r20	; 0x09
    1b8e:	3d 83       	std	Y+5, r19	; 0x05
    1b90:	2e 83       	std	Y+6, r18	; 0x06
    1b92:	3a c0       	rjmp	.+116    	; 0x1c08 <nextbyte40+0x1e>
    1b94:	90 81       	ld	r25, Z
    1b96:	98 2b       	or	r25, r24
    1b98:	98 87       	std	Y+8, r25	; 0x08
    1b9a:	90 81       	ld	r25, Z
    1b9c:	80 95       	com	r24
    1b9e:	89 23       	and	r24, r25
    1ba0:	8f 83       	std	Y+7, r24	; 0x07
    1ba2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ba4:	8c 83       	std	Y+4, r24	; 0x04
    1ba6:	88 e0       	ldi	r24, 0x08	; 8
    1ba8:	8b 83       	std	Y+3, r24	; 0x03
    1baa:	58 85       	ldd	r21, Y+8	; 0x08
    1bac:	6f 81       	ldd	r22, Y+7	; 0x07
    1bae:	49 85       	ldd	r20, Y+9	; 0x09
    1bb0:	3b 81       	ldd	r19, Y+3	; 0x03
    1bb2:	2c 81       	ldd	r18, Y+4	; 0x04
    1bb4:	89 81       	ldd	r24, Y+1	; 0x01
    1bb6:	9a 81       	ldd	r25, Y+2	; 0x02
    1bb8:	d7 01       	movw	r26, r14

00001bba <head40>:
    1bba:	50 83       	st	Z, r21
    1bbc:	47 fd       	sbrc	r20, 7
    1bbe:	25 2f       	mov	r18, r21
    1bc0:	00 c0       	rjmp	.+0      	; 0x1bc2 <head40+0x8>
    1bc2:	00 c0       	rjmp	.+0      	; 0x1bc4 <head40+0xa>
    1bc4:	20 83       	st	Z, r18
    1bc6:	00 c0       	rjmp	.+0      	; 0x1bc8 <head40+0xe>
    1bc8:	00 c0       	rjmp	.+0      	; 0x1bca <head40+0x10>
    1bca:	00 c0       	rjmp	.+0      	; 0x1bcc <head40+0x12>
    1bcc:	00 c0       	rjmp	.+0      	; 0x1bce <head40+0x14>
    1bce:	00 c0       	rjmp	.+0      	; 0x1bd0 <head40+0x16>
    1bd0:	60 83       	st	Z, r22
    1bd2:	00 00       	nop
    1bd4:	26 2f       	mov	r18, r22
    1bd6:	3a 95       	dec	r19
    1bd8:	41 f0       	breq	.+16     	; 0x1bea <nextbyte40>
    1bda:	44 1f       	adc	r20, r20
    1bdc:	00 00       	nop
    1bde:	00 c0       	rjmp	.+0      	; 0x1be0 <head40+0x26>
    1be0:	00 c0       	rjmp	.+0      	; 0x1be2 <head40+0x28>
    1be2:	00 c0       	rjmp	.+0      	; 0x1be4 <head40+0x2a>
    1be4:	00 c0       	rjmp	.+0      	; 0x1be6 <head40+0x2c>
    1be6:	00 c0       	rjmp	.+0      	; 0x1be8 <head40+0x2e>
    1be8:	e8 cf       	rjmp	.-48     	; 0x1bba <head40>

00001bea <nextbyte40>:
    1bea:	38 e0       	ldi	r19, 0x08	; 8
    1bec:	4d 91       	ld	r20, X+
    1bee:	00 c0       	rjmp	.+0      	; 0x1bf0 <nextbyte40+0x6>
    1bf0:	60 83       	st	Z, r22
    1bf2:	00 c0       	rjmp	.+0      	; 0x1bf4 <nextbyte40+0xa>
    1bf4:	01 97       	sbiw	r24, 0x01	; 1
    1bf6:	09 f7       	brne	.-62     	; 0x1bba <head40>
    1bf8:	d8 01       	movw	r26, r16
    1bfa:	51 96       	adiw	r26, 0x11	; 17
    1bfc:	fc 93       	st	X, r31
    1bfe:	ee 93       	st	-X, r30
    1c00:	50 97       	sbiw	r26, 0x10	; 16
    1c02:	49 87       	std	Y+9, r20	; 0x09
    1c04:	3b 83       	std	Y+3, r19	; 0x03
    1c06:	2c 83       	std	Y+4, r18	; 0x04
    1c08:	9a 83       	std	Y+2, r25	; 0x02
    1c0a:	89 83       	std	Y+1, r24	; 0x01
    1c0c:	78 94       	sei
    1c0e:	0e 94 25 0b 	call	0x164a	; 0x164a <micros>
    1c12:	f8 01       	movw	r30, r16
    1c14:	64 87       	std	Z+12, r22	; 0x0c
    1c16:	75 87       	std	Z+13, r23	; 0x0d
    1c18:	86 87       	std	Z+14, r24	; 0x0e
    1c1a:	97 87       	std	Z+15, r25	; 0x0f
    1c1c:	29 96       	adiw	r28, 0x09	; 9
    1c1e:	0f b6       	in	r0, 0x3f	; 63
    1c20:	f8 94       	cli
    1c22:	de bf       	out	0x3e, r29	; 62
    1c24:	0f be       	out	0x3f, r0	; 63
    1c26:	cd bf       	out	0x3d, r28	; 61
    1c28:	df 91       	pop	r29
    1c2a:	cf 91       	pop	r28
    1c2c:	1f 91       	pop	r17
    1c2e:	0f 91       	pop	r16
    1c30:	ff 90       	pop	r15
    1c32:	ef 90       	pop	r14
    1c34:	df 90       	pop	r13
    1c36:	cf 90       	pop	r12
    1c38:	08 95       	ret

00001c3a <_ZN17Adafruit_NeoPixel13setPixelColorEjm>:
    1c3a:	8f 92       	push	r8
    1c3c:	9f 92       	push	r9
    1c3e:	af 92       	push	r10
    1c40:	bf 92       	push	r11
    1c42:	cf 92       	push	r12
    1c44:	df 92       	push	r13
    1c46:	ef 92       	push	r14
    1c48:	ff 92       	push	r15
    1c4a:	cf 93       	push	r28
    1c4c:	df 93       	push	r29
    1c4e:	fc 01       	movw	r30, r24
    1c50:	80 81       	ld	r24, Z
    1c52:	91 81       	ldd	r25, Z+1	; 0x01
    1c54:	68 17       	cp	r22, r24
    1c56:	79 07       	cpc	r23, r25
    1c58:	88 f5       	brcc	.+98     	; 0x1cbc <_ZN17Adafruit_NeoPixel13setPixelColorEjm+0x82>
    1c5a:	4a 01       	movw	r8, r20
    1c5c:	aa 24       	eor	r10, r10
    1c5e:	bb 24       	eor	r11, r11
    1c60:	b8 2d       	mov	r27, r8
    1c62:	c3 2e       	mov	r12, r19
    1c64:	d4 2e       	mov	r13, r20
    1c66:	e5 2e       	mov	r14, r21
    1c68:	ff 24       	eor	r15, r15
    1c6a:	ac 2d       	mov	r26, r12
    1c6c:	92 2f       	mov	r25, r18
    1c6e:	85 81       	ldd	r24, Z+5	; 0x05
    1c70:	88 23       	and	r24, r24
    1c72:	61 f0       	breq	.+24     	; 0x1c8c <_ZN17Adafruit_NeoPixel13setPixelColorEjm+0x52>
    1c74:	88 9e       	mul	r8, r24
    1c76:	40 01       	movw	r8, r0
    1c78:	11 24       	eor	r1, r1
    1c7a:	b9 2d       	mov	r27, r9
    1c7c:	c8 9e       	mul	r12, r24
    1c7e:	60 01       	movw	r12, r0
    1c80:	11 24       	eor	r1, r1
    1c82:	ad 2d       	mov	r26, r13
    1c84:	28 9f       	mul	r18, r24
    1c86:	90 01       	movw	r18, r0
    1c88:	11 24       	eor	r1, r1
    1c8a:	93 2f       	mov	r25, r19
    1c8c:	9b 01       	movw	r18, r22
    1c8e:	22 0f       	add	r18, r18
    1c90:	33 1f       	adc	r19, r19
    1c92:	62 0f       	add	r22, r18
    1c94:	73 1f       	adc	r23, r19
    1c96:	26 81       	ldd	r18, Z+6	; 0x06
    1c98:	37 81       	ldd	r19, Z+7	; 0x07
    1c9a:	62 0f       	add	r22, r18
    1c9c:	73 1f       	adc	r23, r19
    1c9e:	80 85       	ldd	r24, Z+8	; 0x08
    1ca0:	eb 01       	movw	r28, r22
    1ca2:	c8 0f       	add	r28, r24
    1ca4:	d1 1d       	adc	r29, r1
    1ca6:	b8 83       	st	Y, r27
    1ca8:	81 85       	ldd	r24, Z+9	; 0x09
    1caa:	eb 01       	movw	r28, r22
    1cac:	c8 0f       	add	r28, r24
    1cae:	d1 1d       	adc	r29, r1
    1cb0:	a8 83       	st	Y, r26
    1cb2:	82 85       	ldd	r24, Z+10	; 0x0a
    1cb4:	fb 01       	movw	r30, r22
    1cb6:	e8 0f       	add	r30, r24
    1cb8:	f1 1d       	adc	r31, r1
    1cba:	90 83       	st	Z, r25
    1cbc:	df 91       	pop	r29
    1cbe:	cf 91       	pop	r28
    1cc0:	ff 90       	pop	r15
    1cc2:	ef 90       	pop	r14
    1cc4:	df 90       	pop	r13
    1cc6:	cf 90       	pop	r12
    1cc8:	bf 90       	pop	r11
    1cca:	af 90       	pop	r10
    1ccc:	9f 90       	pop	r9
    1cce:	8f 90       	pop	r8
    1cd0:	08 95       	ret

00001cd2 <_ZN17Adafruit_NeoPixel5ColorEhhh>:
    1cd2:	0f 93       	push	r16
    1cd4:	1f 93       	push	r17
    1cd6:	96 2f       	mov	r25, r22
    1cd8:	50 e0       	ldi	r21, 0x00	; 0
    1cda:	60 e0       	ldi	r22, 0x00	; 0
    1cdc:	70 e0       	ldi	r23, 0x00	; 0
    1cde:	59 2b       	or	r21, r25
    1ce0:	8a 01       	movw	r16, r20
    1ce2:	9b 01       	movw	r18, r22
    1ce4:	28 2b       	or	r18, r24
    1ce6:	c9 01       	movw	r24, r18
    1ce8:	b8 01       	movw	r22, r16
    1cea:	1f 91       	pop	r17
    1cec:	0f 91       	pop	r16
    1cee:	08 95       	ret

00001cf0 <_ZN17Adafruit_NeoPixel13setBrightnessEh>:
// and scale it (subsequent graphics commands also work at this
// brightness level).  If there's a significant step up in brightness,
// the limited number of steps (quantization) in the old data will be
// quite visible in the re-scaled version.  For a non-destructive
// change, you'll need to re-render the full strip data.  C'est la vie.
void Adafruit_NeoPixel::setBrightness(uint8_t b) {
    1cf0:	ff 92       	push	r15
    1cf2:	0f 93       	push	r16
    1cf4:	1f 93       	push	r17
    1cf6:	cf 93       	push	r28
    1cf8:	df 93       	push	r29
    1cfa:	ec 01       	movw	r28, r24
  // This simplifies the actual scaling math later, allowing a fast
  // 8x8-bit multiply and taking the MSB.  'brightness' is a uint8_t,
  // adding 1 here may (intentionally) roll over...so 0 = max brightness
  // (color values are interpreted literally; no scaling), 1 = min
  // brightness (off), 255 = just below max brightness.
  uint8_t newBrightness = b + 1;
    1cfc:	ff 24       	eor	r15, r15
    1cfe:	f3 94       	inc	r15
    1d00:	f6 0e       	add	r15, r22
  if(newBrightness != brightness) { // Compare against prior value
    1d02:	2d 81       	ldd	r18, Y+5	; 0x05
    1d04:	f2 16       	cp	r15, r18
    1d06:	79 f1       	breq	.+94     	; 0x1d66 <_ZN17Adafruit_NeoPixel13setBrightnessEh+0x76>
    // Brightness has changed -- re-scale existing data in RAM
    uint8_t  c,
            *ptr           = pixels,
    1d08:	0e 81       	ldd	r16, Y+6	; 0x06
    1d0a:	1f 81       	ldd	r17, Y+7	; 0x07
             oldBrightness = brightness - 1; // De-wrap old brightness value
    1d0c:	21 50       	subi	r18, 0x01	; 1
    uint16_t scale;
    if(oldBrightness == 0) scale = 0; // Avoid /0
    1d0e:	b9 f0       	breq	.+46     	; 0x1d3e <_ZN17Adafruit_NeoPixel13setBrightnessEh+0x4e>
    else if(b == 255) scale = 65535 / oldBrightness;
    1d10:	6f 3f       	cpi	r22, 0xFF	; 255
    1d12:	59 f4       	brne	.+22     	; 0x1d2a <_ZN17Adafruit_NeoPixel13setBrightnessEh+0x3a>
    1d14:	30 e0       	ldi	r19, 0x00	; 0
    1d16:	40 e0       	ldi	r20, 0x00	; 0
    1d18:	50 e0       	ldi	r21, 0x00	; 0
    1d1a:	6f ef       	ldi	r22, 0xFF	; 255
    1d1c:	7f ef       	ldi	r23, 0xFF	; 255
    1d1e:	80 e0       	ldi	r24, 0x00	; 0
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <__divmodsi4>
    1d26:	b9 01       	movw	r22, r18
    1d28:	0c c0       	rjmp	.+24     	; 0x1d42 <_ZN17Adafruit_NeoPixel13setBrightnessEh+0x52>
    else scale = (((uint16_t)newBrightness << 8) - 1) / oldBrightness;
    1d2a:	8f 2d       	mov	r24, r15
    1d2c:	90 e0       	ldi	r25, 0x00	; 0
    1d2e:	98 2f       	mov	r25, r24
    1d30:	88 27       	eor	r24, r24
    1d32:	01 97       	sbiw	r24, 0x01	; 1
    1d34:	62 2f       	mov	r22, r18
    1d36:	70 e0       	ldi	r23, 0x00	; 0
    1d38:	0e 94 8e 19 	call	0x331c	; 0x331c <__udivmodhi4>
    1d3c:	02 c0       	rjmp	.+4      	; 0x1d42 <_ZN17Adafruit_NeoPixel13setBrightnessEh+0x52>
    // Brightness has changed -- re-scale existing data in RAM
    uint8_t  c,
            *ptr           = pixels,
             oldBrightness = brightness - 1; // De-wrap old brightness value
    uint16_t scale;
    if(oldBrightness == 0) scale = 0; // Avoid /0
    1d3e:	60 e0       	ldi	r22, 0x00	; 0
    1d40:	70 e0       	ldi	r23, 0x00	; 0
    else if(b == 255) scale = 65535 / oldBrightness;
    else scale = (((uint16_t)newBrightness << 8) - 1) / oldBrightness;
    for(uint16_t i=0; i<numBytes; i++) {
    1d42:	f8 01       	movw	r30, r16
    1d44:	4a 81       	ldd	r20, Y+2	; 0x02
    1d46:	5b 81       	ldd	r21, Y+3	; 0x03
    1d48:	cf 01       	movw	r24, r30
    1d4a:	80 1b       	sub	r24, r16
    1d4c:	91 0b       	sbc	r25, r17
    1d4e:	84 17       	cp	r24, r20
    1d50:	95 07       	cpc	r25, r21
    1d52:	40 f4       	brcc	.+16     	; 0x1d64 <_ZN17Adafruit_NeoPixel13setBrightnessEh+0x74>
      c      = *ptr;
      *ptr++ = (c * scale) >> 8;
    1d54:	40 81       	ld	r20, Z
    1d56:	46 9f       	mul	r20, r22
    1d58:	c0 01       	movw	r24, r0
    1d5a:	47 9f       	mul	r20, r23
    1d5c:	90 0d       	add	r25, r0
    1d5e:	11 24       	eor	r1, r1
    1d60:	91 93       	st	Z+, r25
    1d62:	f0 cf       	rjmp	.-32     	; 0x1d44 <_ZN17Adafruit_NeoPixel13setBrightnessEh+0x54>
    }
    brightness = newBrightness;
    1d64:	fd 82       	std	Y+5, r15	; 0x05
  }
}
    1d66:	df 91       	pop	r29
    1d68:	cf 91       	pop	r28
    1d6a:	1f 91       	pop	r17
    1d6c:	0f 91       	pop	r16
    1d6e:	ff 90       	pop	r15
    1d70:	08 95       	ret

00001d72 <_ZN14OneSheeldClassC1Ev>:
        oneSheeldWrite(tempData[j]);
      }
 }
    oneSheeldWrite((byte)END_OF_FRAME);
    if(shieldID!=ONESHEELD_ID)lastTimeFrameSent=millis()+1;
}
    1d72:	fc 01       	movw	r30, r24
    1d74:	15 86       	std	Z+13, r1	; 0x0d
    1d76:	16 86       	std	Z+14, r1	; 0x0e
    1d78:	17 86       	std	Z+15, r1	; 0x0f
    1d7a:	10 8a       	std	Z+16, r1	; 0x10
    1d7c:	11 8a       	std	Z+17, r1	; 0x11
    1d7e:	12 8a       	std	Z+18, r1	; 0x12
    1d80:	13 8a       	std	Z+19, r1	; 0x13
    1d82:	10 8e       	std	Z+24, r1	; 0x18
    1d84:	14 86       	std	Z+12, r1	; 0x0c
    1d86:	14 82       	std	Z+4, r1	; 0x04
    1d88:	15 82       	std	Z+5, r1	; 0x05
    1d8a:	10 92 ee 04 	sts	0x04EE, r1
    1d8e:	13 86       	std	Z+11, r1	; 0x0b
    1d90:	16 82       	std	Z+6, r1	; 0x06
    1d92:	17 82       	std	Z+7, r1	; 0x07
    1d94:	10 86       	std	Z+8, r1	; 0x08
    1d96:	11 86       	std	Z+9, r1	; 0x09
    1d98:	12 86       	std	Z+10, r1	; 0x0a
    1d9a:	08 95       	ret

00001d9c <_ZN14OneSheeldClass5beginEl>:
    1d9c:	8e e8       	ldi	r24, 0x8E	; 142
    1d9e:	93 e0       	ldi	r25, 0x03	; 3
    1da0:	90 93 98 04 	sts	0x0498, r25
    1da4:	80 93 97 04 	sts	0x0497, r24
    1da8:	26 e0       	ldi	r18, 0x06	; 6
    1daa:	0c 94 67 09 	jmp	0x12ce	; 0x12ce <_ZN14HardwareSerial5beginEmh>

00001dae <_ZN14OneSheeldClass17addToShieldsArrayEP12ShieldParent>:
    1dae:	e0 91 f4 04 	lds	r30, 0x04F4
    1db2:	ea 32       	cpi	r30, 0x2A	; 42
    1db4:	59 f0       	breq	.+22     	; 0x1dcc <_ZN14OneSheeldClass17addToShieldsArrayEP12ShieldParent+0x1e>
    1db6:	21 e0       	ldi	r18, 0x01	; 1
    1db8:	2e 0f       	add	r18, r30
    1dba:	20 93 f4 04 	sts	0x04F4, r18
    1dbe:	f0 e0       	ldi	r31, 0x00	; 0
    1dc0:	ee 0f       	add	r30, r30
    1dc2:	ff 1f       	adc	r31, r31
    1dc4:	e7 56       	subi	r30, 0x67	; 103
    1dc6:	fb 4f       	sbci	r31, 0xFB	; 251
    1dc8:	91 83       	std	Z+1, r25	; 0x01
    1dca:	80 83       	st	Z, r24
    1dcc:	08 95       	ret

00001dce <_ZN14OneSheeldClass14oneSheeldWriteEh>:
    1dce:	cf 93       	push	r28
    1dd0:	df 93       	push	r29
    1dd2:	ec 01       	movw	r28, r24
    1dd4:	80 91 97 04 	lds	r24, 0x0497
    1dd8:	90 91 98 04 	lds	r25, 0x0498
    1ddc:	dc 01       	movw	r26, r24
    1dde:	ed 91       	ld	r30, X+
    1de0:	fc 91       	ld	r31, X
    1de2:	01 90       	ld	r0, Z+
    1de4:	f0 81       	ld	r31, Z
    1de6:	e0 2d       	mov	r30, r0
    1de8:	09 95       	icall
    1dea:	8a 85       	ldd	r24, Y+10	; 0x0a
    1dec:	81 11       	cpse	r24, r1
    1dee:	08 c0       	rjmp	.+16     	; 0x1e00 <_ZN14OneSheeldClass14oneSheeldWriteEh+0x32>
    1df0:	62 e0       	ldi	r22, 0x02	; 2
    1df2:	70 e0       	ldi	r23, 0x00	; 0
    1df4:	80 e0       	ldi	r24, 0x00	; 0
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	df 91       	pop	r29
    1dfa:	cf 91       	pop	r28
    1dfc:	0c 94 4b 0b 	jmp	0x1696	; 0x1696 <delay>
    1e00:	df 91       	pop	r29
    1e02:	cf 91       	pop	r28
    1e04:	08 95       	ret

00001e06 <_ZN14OneSheeldClass11getShieldIdEv>:
    1e06:	fc 01       	movw	r30, r24
    1e08:	85 85       	ldd	r24, Z+13	; 0x0d
    1e0a:	08 95       	ret

00001e0c <_ZN14OneSheeldClass13getFunctionIdEv>:
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	87 85       	ldd	r24, Z+15	; 0x0f
    1e10:	08 95       	ret

00001e12 <_ZN14OneSheeldClass17getArgumentLengthEh>:
    1e12:	dc 01       	movw	r26, r24
    1e14:	56 96       	adiw	r26, 0x16	; 22
    1e16:	ed 91       	ld	r30, X+
    1e18:	fc 91       	ld	r31, X
    1e1a:	57 97       	sbiw	r26, 0x17	; 23
    1e1c:	e6 0f       	add	r30, r22
    1e1e:	f1 1d       	adc	r31, r1
    1e20:	80 81       	ld	r24, Z
    1e22:	08 95       	ret

00001e24 <_ZN14OneSheeldClass15getArgumentDataEh>:
    1e24:	70 e0       	ldi	r23, 0x00	; 0
    1e26:	dc 01       	movw	r26, r24
    1e28:	56 96       	adiw	r26, 0x16	; 22
    1e2a:	ed 91       	ld	r30, X+
    1e2c:	fc 91       	ld	r31, X
    1e2e:	57 97       	sbiw	r26, 0x17	; 23
    1e30:	e6 0f       	add	r30, r22
    1e32:	f7 1f       	adc	r31, r23
    1e34:	20 81       	ld	r18, Z
    1e36:	22 23       	and	r18, r18
    1e38:	59 f0       	breq	.+22     	; 0x1e50 <_ZN14OneSheeldClass15getArgumentDataEh+0x2c>
    1e3a:	66 0f       	add	r22, r22
    1e3c:	77 1f       	adc	r23, r23
    1e3e:	54 96       	adiw	r26, 0x14	; 20
    1e40:	ed 91       	ld	r30, X+
    1e42:	fc 91       	ld	r31, X
    1e44:	55 97       	sbiw	r26, 0x15	; 21
    1e46:	e6 0f       	add	r30, r22
    1e48:	f7 1f       	adc	r31, r23
    1e4a:	80 81       	ld	r24, Z
    1e4c:	91 81       	ldd	r25, Z+1	; 0x01
    1e4e:	08 95       	ret
    1e50:	80 e0       	ldi	r24, 0x00	; 0
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	08 95       	ret

00001e56 <_ZN14OneSheeldClass19freeMemoryAllocatedEv>:
    1e56:	0f 93       	push	r16
    1e58:	1f 93       	push	r17
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	ec 01       	movw	r28, r24
    1e60:	1b 86       	std	Y+11, r1	; 0x0b
    1e62:	8c 81       	ldd	r24, Y+4	; 0x04
    1e64:	88 23       	and	r24, r24
    1e66:	41 f1       	breq	.+80     	; 0x1eb8 <_ZN14OneSheeldClass19freeMemoryAllocatedEv+0x62>
    1e68:	00 e0       	ldi	r16, 0x00	; 0
    1e6a:	10 e0       	ldi	r17, 0x00	; 0
    1e6c:	2c 85       	ldd	r18, Y+12	; 0x0c
    1e6e:	30 e0       	ldi	r19, 0x00	; 0
    1e70:	8c 89       	ldd	r24, Y+20	; 0x14
    1e72:	9d 89       	ldd	r25, Y+21	; 0x15
    1e74:	02 17       	cp	r16, r18
    1e76:	13 07       	cpc	r17, r19
    1e78:	ac f4       	brge	.+42     	; 0x1ea4 <_ZN14OneSheeldClass19freeMemoryAllocatedEv+0x4e>
    1e7a:	98 01       	movw	r18, r16
    1e7c:	22 0f       	add	r18, r18
    1e7e:	33 1f       	adc	r19, r19
    1e80:	fc 01       	movw	r30, r24
    1e82:	e2 0f       	add	r30, r18
    1e84:	f3 1f       	adc	r31, r19
    1e86:	80 81       	ld	r24, Z
    1e88:	91 81       	ldd	r25, Z+1	; 0x01
    1e8a:	00 97       	sbiw	r24, 0x00	; 0
    1e8c:	11 f0       	breq	.+4      	; 0x1e92 <_ZN14OneSheeldClass19freeMemoryAllocatedEv+0x3c>
    1e8e:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    1e92:	61 e9       	ldi	r22, 0x91	; 145
    1e94:	71 e0       	ldi	r23, 0x01	; 1
    1e96:	8e e8       	ldi	r24, 0x8E	; 142
    1e98:	93 e0       	ldi	r25, 0x03	; 3
    1e9a:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    1e9e:	0f 5f       	subi	r16, 0xFF	; 255
    1ea0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea2:	e4 cf       	rjmp	.-56     	; 0x1e6c <_ZN14OneSheeldClass19freeMemoryAllocatedEv+0x16>
    1ea4:	1c 86       	std	Y+12, r1	; 0x0c
    1ea6:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    1eaa:	65 e9       	ldi	r22, 0x95	; 149
    1eac:	71 e0       	ldi	r23, 0x01	; 1
    1eae:	8e e8       	ldi	r24, 0x8E	; 142
    1eb0:	93 e0       	ldi	r25, 0x03	; 3
    1eb2:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    1eb6:	1c 82       	std	Y+4, r1	; 0x04
    1eb8:	8d 81       	ldd	r24, Y+5	; 0x05
    1eba:	88 23       	and	r24, r24
    1ebc:	59 f0       	breq	.+22     	; 0x1ed4 <_ZN14OneSheeldClass19freeMemoryAllocatedEv+0x7e>
    1ebe:	8e 89       	ldd	r24, Y+22	; 0x16
    1ec0:	9f 89       	ldd	r25, Y+23	; 0x17
    1ec2:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    1ec6:	69 e9       	ldi	r22, 0x99	; 153
    1ec8:	71 e0       	ldi	r23, 0x01	; 1
    1eca:	8e e8       	ldi	r24, 0x8E	; 142
    1ecc:	93 e0       	ldi	r25, 0x03	; 3
    1ece:	0e 94 a3 0a 	call	0x1546	; 0x1546 <_ZN5Print7printlnEPKc>
    1ed2:	1d 82       	std	Y+5, r1	; 0x05
    1ed4:	df 91       	pop	r29
    1ed6:	cf 91       	pop	r28
    1ed8:	1f 91       	pop	r17
    1eda:	0f 91       	pop	r16
    1edc:	08 95       	ret

00001ede <_ZN14OneSheeldClass13isInACallbackEv>:
    1ede:	80 91 ef 04 	lds	r24, 0x04EF
    1ee2:	88 23       	and	r24, r24
    1ee4:	21 f0       	breq	.+8      	; 0x1eee <_ZN14OneSheeldClass13isInACallbackEv+0x10>
    1ee6:	90 91 ee 04 	lds	r25, 0x04EE
    1eea:	81 e0       	ldi	r24, 0x01	; 1
    1eec:	89 27       	eor	r24, r25
    1eee:	08 95       	ret

00001ef0 <_ZN14OneSheeldClass19getVerificationByteEv>:
    1ef0:	20 e1       	ldi	r18, 0x10	; 16
    1ef2:	30 e0       	ldi	r19, 0x00	; 0
    1ef4:	40 e0       	ldi	r20, 0x00	; 0
    1ef6:	50 e0       	ldi	r21, 0x00	; 0
    1ef8:	60 e0       	ldi	r22, 0x00	; 0
    1efa:	70 e0       	ldi	r23, 0x00	; 0
    1efc:	cb 01       	movw	r24, r22
    1efe:	0e 94 41 19 	call	0x3282	; 0x3282 <_Z6randomll>
    1f02:	86 2f       	mov	r24, r22
    1f04:	80 95       	com	r24
    1f06:	20 e1       	ldi	r18, 0x10	; 16
    1f08:	82 9f       	mul	r24, r18
    1f0a:	c0 01       	movw	r24, r0
    1f0c:	11 24       	eor	r1, r1
    1f0e:	6f 70       	andi	r22, 0x0F	; 15
    1f10:	86 2b       	or	r24, r22
    1f12:	08 95       	ret

00001f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>:
    1f14:	4f 92       	push	r4
    1f16:	5f 92       	push	r5
    1f18:	6f 92       	push	r6
    1f1a:	7f 92       	push	r7
    1f1c:	8f 92       	push	r8
    1f1e:	9f 92       	push	r9
    1f20:	af 92       	push	r10
    1f22:	bf 92       	push	r11
    1f24:	df 92       	push	r13
    1f26:	ef 92       	push	r14
    1f28:	ff 92       	push	r15
    1f2a:	0f 93       	push	r16
    1f2c:	1f 93       	push	r17
    1f2e:	cf 93       	push	r28
    1f30:	df 93       	push	r29
    1f32:	cd b7       	in	r28, 0x3d	; 61
    1f34:	de b7       	in	r29, 0x3e	; 62
    1f36:	6f 97       	sbiw	r28, 0x1f	; 31
    1f38:	0f b6       	in	r0, 0x3f	; 63
    1f3a:	f8 94       	cli
    1f3c:	de bf       	out	0x3e, r29	; 62
    1f3e:	0f be       	out	0x3f, r0	; 63
    1f40:	cd bf       	out	0x3d, r28	; 61
    1f42:	09 a9       	ldd	r16, Y+49	; 0x31
    1f44:	1a a9       	ldd	r17, Y+50	; 0x32
    1f46:	db a8       	ldd	r13, Y+51	; 0x33
    1f48:	fe a8       	ldd	r15, Y+54	; 0x36
    1f4a:	0e 94 19 0b 	call	0x1632	; 0x1632 <millis>
    1f4e:	80 90 f0 04 	lds	r8, 0x04F0
    1f52:	90 90 f1 04 	lds	r9, 0x04F1
    1f56:	a0 90 f2 04 	lds	r10, 0x04F2
    1f5a:	b0 90 f3 04 	lds	r11, 0x04F3
    1f5e:	dd 20       	and	r13, r13
    1f60:	09 f4       	brne	.+2      	; 0x1f64 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x50>
    1f62:	80 c0       	rjmp	.+256    	; 0x2064 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x150>
    1f64:	20 91 ed 04 	lds	r18, 0x04ED
    1f68:	22 23       	and	r18, r18
    1f6a:	09 f4       	brne	.+2      	; 0x1f6e <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x5a>
    1f6c:	7b c0       	rjmp	.+246    	; 0x2064 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x150>
    1f6e:	81 14       	cp	r8, r1
    1f70:	91 04       	cpc	r9, r1
    1f72:	a1 04       	cpc	r10, r1
    1f74:	b1 04       	cpc	r11, r1
    1f76:	09 f4       	brne	.+2      	; 0x1f7a <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x66>
    1f78:	75 c0       	rjmp	.+234    	; 0x2064 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x150>
    1f7a:	dc 01       	movw	r26, r24
    1f7c:	cb 01       	movw	r24, r22
    1f7e:	88 19       	sub	r24, r8
    1f80:	99 09       	sbc	r25, r9
    1f82:	aa 09       	sbc	r26, r10
    1f84:	bb 09       	sbc	r27, r11
    1f86:	01 96       	adiw	r24, 0x01	; 1
    1f88:	a1 1d       	adc	r26, r1
    1f8a:	b1 1d       	adc	r27, r1
    1f8c:	88 3c       	cpi	r24, 0xC8	; 200
    1f8e:	91 05       	cpc	r25, r1
    1f90:	a1 05       	cpc	r26, r1
    1f92:	b1 05       	cpc	r27, r1
    1f94:	08 f0       	brcs	.+2      	; 0x1f98 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x84>
    1f96:	66 c0       	rjmp	.+204    	; 0x2064 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x150>
    1f98:	80 91 ef 04 	lds	r24, 0x04EF
    1f9c:	98 ec       	ldi	r25, 0xC8	; 200
    1f9e:	89 0e       	add	r8, r25
    1fa0:	91 1c       	adc	r9, r1
    1fa2:	a1 1c       	adc	r10, r1
    1fa4:	b1 1c       	adc	r11, r1
    1fa6:	88 23       	and	r24, r24
    1fa8:	09 f4       	brne	.+2      	; 0x1fac <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x98>
    1faa:	54 c0       	rjmp	.+168    	; 0x2054 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x140>
    1fac:	ce 01       	movw	r24, r28
    1fae:	01 96       	adiw	r24, 0x01	; 1
    1fb0:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <_ZN14OneSheeldClassC1Ev>
    1fb4:	ce 01       	movw	r24, r28
    1fb6:	01 96       	adiw	r24, 0x01	; 1
    1fb8:	0e 94 8e 14 	call	0x291c	; 0x291c <_ZN12ShieldParent20setOneSheeldInstanceER14OneSheeldClass>
    1fbc:	0e 94 19 0b 	call	0x1632	; 0x1632 <millis>
    1fc0:	68 15       	cp	r22, r8
    1fc2:	79 05       	cpc	r23, r9
    1fc4:	8a 05       	cpc	r24, r10
    1fc6:	9b 05       	cpc	r25, r11
    1fc8:	f0 f4       	brcc	.+60     	; 0x2006 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0xf2>
    1fca:	80 91 97 04 	lds	r24, 0x0497
    1fce:	90 91 98 04 	lds	r25, 0x0498
    1fd2:	dc 01       	movw	r26, r24
    1fd4:	ed 91       	ld	r30, X+
    1fd6:	fc 91       	ld	r31, X
    1fd8:	04 80       	ldd	r0, Z+4	; 0x04
    1fda:	f5 81       	ldd	r31, Z+5	; 0x05
    1fdc:	e0 2d       	mov	r30, r0
    1fde:	09 95       	icall
    1fe0:	89 2b       	or	r24, r25
    1fe2:	61 f3       	breq	.-40     	; 0x1fbc <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0xa8>
    1fe4:	80 91 97 04 	lds	r24, 0x0497
    1fe8:	90 91 98 04 	lds	r25, 0x0498
    1fec:	dc 01       	movw	r26, r24
    1fee:	ed 91       	ld	r30, X+
    1ff0:	fc 91       	ld	r31, X
    1ff2:	06 80       	ldd	r0, Z+6	; 0x06
    1ff4:	f7 81       	ldd	r31, Z+7	; 0x07
    1ff6:	e0 2d       	mov	r30, r0
    1ff8:	09 95       	icall
    1ffa:	bc 01       	movw	r22, r24
    1ffc:	ce 01       	movw	r24, r28
    1ffe:	01 96       	adiw	r24, 0x01	; 1
    2000:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN14OneSheeldClass12processInputEi>
    2004:	db cf       	rjmp	.-74     	; 0x1fbc <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0xa8>
    2006:	8c 85       	ldd	r24, Y+12	; 0x0c
    2008:	81 11       	cpse	r24, r1
    200a:	df cf       	rjmp	.-66     	; 0x1fca <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0xb6>
    200c:	0e 94 96 14 	call	0x292c	; 0x292c <_ZN12ShieldParent22unSetOneSheeldInstanceEv>
    2010:	29 c0       	rjmp	.+82     	; 0x2064 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x150>
    2012:	f8 01       	movw	r30, r16
    2014:	83 85       	ldd	r24, Z+11	; 0x0b
    2016:	88 23       	and	r24, r24
    2018:	29 f1       	breq	.+74     	; 0x2064 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x150>
    201a:	80 91 97 04 	lds	r24, 0x0497
    201e:	90 91 98 04 	lds	r25, 0x0498
    2022:	dc 01       	movw	r26, r24
    2024:	ed 91       	ld	r30, X+
    2026:	fc 91       	ld	r31, X
    2028:	04 80       	ldd	r0, Z+4	; 0x04
    202a:	f5 81       	ldd	r31, Z+5	; 0x05
    202c:	e0 2d       	mov	r30, r0
    202e:	09 95       	icall
    2030:	89 2b       	or	r24, r25
    2032:	81 f0       	breq	.+32     	; 0x2054 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x140>
    2034:	80 91 97 04 	lds	r24, 0x0497
    2038:	90 91 98 04 	lds	r25, 0x0498
    203c:	dc 01       	movw	r26, r24
    203e:	ed 91       	ld	r30, X+
    2040:	fc 91       	ld	r31, X
    2042:	06 80       	ldd	r0, Z+6	; 0x06
    2044:	f7 81       	ldd	r31, Z+7	; 0x07
    2046:	e0 2d       	mov	r30, r0
    2048:	09 95       	icall
    204a:	bc 01       	movw	r22, r24
    204c:	85 e7       	ldi	r24, 0x75	; 117
    204e:	94 e0       	ldi	r25, 0x04	; 4
    2050:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN14OneSheeldClass12processInputEi>
    2054:	0e 94 19 0b 	call	0x1632	; 0x1632 <millis>
    2058:	68 15       	cp	r22, r8
    205a:	79 05       	cpc	r23, r9
    205c:	8a 05       	cpc	r24, r10
    205e:	9b 05       	cpc	r25, r11
    2060:	e0 f2       	brcs	.-72     	; 0x201a <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x106>
    2062:	d7 cf       	rjmp	.-82     	; 0x2012 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0xfe>
    2064:	81 e0       	ldi	r24, 0x01	; 1
    2066:	80 93 ed 04 	sts	0x04ED, r24
    206a:	2e 01       	movw	r4, r28
    206c:	f7 e3       	ldi	r31, 0x37	; 55
    206e:	4f 0e       	add	r4, r31
    2070:	51 1c       	adc	r5, r1
    2072:	6f ef       	ldi	r22, 0xFF	; 255
    2074:	c8 01       	movw	r24, r16
    2076:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    207a:	6d e0       	ldi	r22, 0x0D	; 13
    207c:	c8 01       	movw	r24, r16
    207e:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    2082:	6d 2d       	mov	r22, r13
    2084:	c8 01       	movw	r24, r16
    2086:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    208a:	c8 01       	movw	r24, r16
    208c:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <_ZN14OneSheeldClass19getVerificationByteEv>
    2090:	68 2f       	mov	r22, r24
    2092:	c8 01       	movw	r24, r16
    2094:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    2098:	6d a9       	ldd	r22, Y+53	; 0x35
    209a:	c8 01       	movw	r24, r16
    209c:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    20a0:	6f 2d       	mov	r22, r15
    20a2:	c8 01       	movw	r24, r16
    20a4:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    20a8:	6f 2d       	mov	r22, r15
    20aa:	60 95       	com	r22
    20ac:	c8 01       	movw	r24, r16
    20ae:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    20b2:	a1 2c       	mov	r10, r1
    20b4:	b1 2c       	mov	r11, r1
    20b6:	8f 2c       	mov	r8, r15
    20b8:	91 2c       	mov	r9, r1
    20ba:	a8 14       	cp	r10, r8
    20bc:	b9 04       	cpc	r11, r9
    20be:	dc f5       	brge	.+118    	; 0x2136 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x222>
    20c0:	32 01       	movw	r6, r4
    20c2:	82 e0       	ldi	r24, 0x02	; 2
    20c4:	68 0e       	add	r6, r24
    20c6:	71 1c       	adc	r7, r1
    20c8:	d2 01       	movw	r26, r4
    20ca:	ed 90       	ld	r14, X+
    20cc:	fc 90       	ld	r15, X
    20ce:	f7 01       	movw	r30, r14
    20d0:	60 81       	ld	r22, Z
    20d2:	c8 01       	movw	r24, r16
    20d4:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    20d8:	d7 01       	movw	r26, r14
    20da:	6c 91       	ld	r22, X
    20dc:	60 95       	com	r22
    20de:	c8 01       	movw	r24, r16
    20e0:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    20e4:	41 2c       	mov	r4, r1
    20e6:	51 2c       	mov	r5, r1
    20e8:	f7 01       	movw	r30, r14
    20ea:	80 81       	ld	r24, Z
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	48 16       	cp	r4, r24
    20f0:	59 06       	cpc	r5, r25
    20f2:	7c f4       	brge	.+30     	; 0x2112 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x1fe>
    20f4:	d7 01       	movw	r26, r14
    20f6:	11 96       	adiw	r26, 0x01	; 1
    20f8:	ed 91       	ld	r30, X+
    20fa:	fc 91       	ld	r31, X
    20fc:	12 97       	sbiw	r26, 0x02	; 2
    20fe:	e4 0d       	add	r30, r4
    2100:	f5 1d       	adc	r31, r5
    2102:	60 81       	ld	r22, Z
    2104:	c8 01       	movw	r24, r16
    2106:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    210a:	bf ef       	ldi	r27, 0xFF	; 255
    210c:	4b 1a       	sub	r4, r27
    210e:	5b 0a       	sbc	r5, r27
    2110:	eb cf       	rjmp	.-42     	; 0x20e8 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x1d4>
    2112:	e1 14       	cp	r14, r1
    2114:	f1 04       	cpc	r15, r1
    2116:	51 f0       	breq	.+20     	; 0x212c <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x218>
    2118:	83 81       	ldd	r24, Z+3	; 0x03
    211a:	88 23       	and	r24, r24
    211c:	21 f0       	breq	.+8      	; 0x2126 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x212>
    211e:	81 81       	ldd	r24, Z+1	; 0x01
    2120:	92 81       	ldd	r25, Z+2	; 0x02
    2122:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    2126:	c7 01       	movw	r24, r14
    2128:	0e 94 9b 18 	call	0x3136	; 0x3136 <_ZdlPv>
    212c:	ff ef       	ldi	r31, 0xFF	; 255
    212e:	af 1a       	sub	r10, r31
    2130:	bf 0a       	sbc	r11, r31
    2132:	23 01       	movw	r4, r6
    2134:	c2 cf       	rjmp	.-124    	; 0x20ba <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x1a6>
    2136:	60 e0       	ldi	r22, 0x00	; 0
    2138:	c8 01       	movw	r24, r16
    213a:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN14OneSheeldClass14oneSheeldWriteEh>
    213e:	dd 20       	and	r13, r13
    2140:	79 f0       	breq	.+30     	; 0x2160 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz+0x24c>
    2142:	0e 94 19 0b 	call	0x1632	; 0x1632 <millis>
    2146:	dc 01       	movw	r26, r24
    2148:	cb 01       	movw	r24, r22
    214a:	01 96       	adiw	r24, 0x01	; 1
    214c:	a1 1d       	adc	r26, r1
    214e:	b1 1d       	adc	r27, r1
    2150:	80 93 f0 04 	sts	0x04F0, r24
    2154:	90 93 f1 04 	sts	0x04F1, r25
    2158:	a0 93 f2 04 	sts	0x04F2, r26
    215c:	b0 93 f3 04 	sts	0x04F3, r27
    2160:	6f 96       	adiw	r28, 0x1f	; 31
    2162:	0f b6       	in	r0, 0x3f	; 63
    2164:	f8 94       	cli
    2166:	de bf       	out	0x3e, r29	; 62
    2168:	0f be       	out	0x3f, r0	; 63
    216a:	cd bf       	out	0x3d, r28	; 61
    216c:	df 91       	pop	r29
    216e:	cf 91       	pop	r28
    2170:	1f 91       	pop	r17
    2172:	0f 91       	pop	r16
    2174:	ff 90       	pop	r15
    2176:	ef 90       	pop	r14
    2178:	df 90       	pop	r13
    217a:	bf 90       	pop	r11
    217c:	af 90       	pop	r10
    217e:	9f 90       	pop	r9
    2180:	8f 90       	pop	r8
    2182:	7f 90       	pop	r7
    2184:	6f 90       	pop	r6
    2186:	5f 90       	pop	r5
    2188:	4f 90       	pop	r4
    218a:	08 95       	ret

0000218c <_ZN14OneSheeldClass4initEv>:
    218c:	cf 93       	push	r28
    218e:	df 93       	push	r29
    2190:	1f 92       	push	r1
    2192:	22 e0       	ldi	r18, 0x02	; 2
    2194:	2f 93       	push	r18
    2196:	1f 92       	push	r1
    2198:	1f 92       	push	r1
    219a:	9f 93       	push	r25
    219c:	8f 93       	push	r24
    219e:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>
    21a2:	81 e0       	ldi	r24, 0x01	; 1
    21a4:	80 93 f6 04 	sts	0x04F6, r24
    21a8:	0f 90       	pop	r0
    21aa:	0f 90       	pop	r0
    21ac:	0f 90       	pop	r0
    21ae:	0f 90       	pop	r0
    21b0:	0f 90       	pop	r0
    21b2:	0f 90       	pop	r0
    21b4:	80 91 94 04 	lds	r24, 0x0494
    21b8:	90 91 95 04 	lds	r25, 0x0495
    21bc:	89 2b       	or	r24, r25
    21be:	e1 f0       	breq	.+56     	; 0x21f8 <_ZN14OneSheeldClass4initEv+0x6c>
    21c0:	c0 e0       	ldi	r28, 0x00	; 0
    21c2:	d0 e0       	ldi	r29, 0x00	; 0
    21c4:	20 91 96 04 	lds	r18, 0x0496
    21c8:	30 e0       	ldi	r19, 0x00	; 0
    21ca:	80 91 94 04 	lds	r24, 0x0494
    21ce:	90 91 95 04 	lds	r25, 0x0495
    21d2:	c2 17       	cp	r28, r18
    21d4:	d3 07       	cpc	r29, r19
    21d6:	64 f4       	brge	.+24     	; 0x21f0 <_ZN14OneSheeldClass4initEv+0x64>
    21d8:	9e 01       	movw	r18, r28
    21da:	22 0f       	add	r18, r18
    21dc:	33 1f       	adc	r19, r19
    21de:	fc 01       	movw	r30, r24
    21e0:	e2 0f       	add	r30, r18
    21e2:	f3 1f       	adc	r31, r19
    21e4:	80 81       	ld	r24, Z
    21e6:	91 81       	ldd	r25, Z+1	; 0x01
    21e8:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <_ZN11HttpRequest13sendInitFrameEv>
    21ec:	21 96       	adiw	r28, 0x01	; 1
    21ee:	ea cf       	rjmp	.-44     	; 0x21c4 <_ZN14OneSheeldClass4initEv+0x38>
    21f0:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    21f4:	10 92 96 04 	sts	0x0496, r1
    21f8:	df 91       	pop	r29
    21fa:	cf 91       	pop	r28
    21fc:	08 95       	ret

000021fe <_ZN14OneSheeldClass5beginEv>:
    21fe:	cf 93       	push	r28
    2200:	df 93       	push	r29
    2202:	20 91 f6 04 	lds	r18, 0x04F6
    2206:	21 11       	cpse	r18, r1
    2208:	0e c0       	rjmp	.+28     	; 0x2226 <_ZN14OneSheeldClass5beginEv+0x28>
    220a:	ec 01       	movw	r28, r24
    220c:	40 e0       	ldi	r20, 0x00	; 0
    220e:	52 ec       	ldi	r21, 0xC2	; 194
    2210:	61 e0       	ldi	r22, 0x01	; 1
    2212:	70 e0       	ldi	r23, 0x00	; 0
    2214:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <_ZN14OneSheeldClass5beginEl>
    2218:	10 92 f5 04 	sts	0x04F5, r1
    221c:	ce 01       	movw	r24, r28
    221e:	df 91       	pop	r29
    2220:	cf 91       	pop	r28
    2222:	0c 94 c6 10 	jmp	0x218c	; 0x218c <_ZN14OneSheeldClass4initEv>
    2226:	df 91       	pop	r29
    2228:	cf 91       	pop	r28
    222a:	08 95       	ret

0000222c <_ZN14OneSheeldClass12processFrameEv>:
    222c:	af 92       	push	r10
    222e:	bf 92       	push	r11
    2230:	cf 92       	push	r12
    2232:	df 92       	push	r13
    2234:	ef 92       	push	r14
    2236:	ff 92       	push	r15
    2238:	0f 93       	push	r16
    223a:	1f 93       	push	r17
    223c:	cf 93       	push	r28
    223e:	df 93       	push	r29
    2240:	1f 92       	push	r1
    2242:	cd b7       	in	r28, 0x3d	; 61
    2244:	de b7       	in	r29, 0x3e	; 62
    2246:	8c 01       	movw	r16, r24
    2248:	dc 01       	movw	r26, r24
    224a:	1f 96       	adiw	r26, 0x0f	; 15
    224c:	8c 91       	ld	r24, X
    224e:	1f 97       	sbiw	r26, 0x0f	; 15
    2250:	82 30       	cpi	r24, 0x02	; 2
    2252:	79 f4       	brne	.+30     	; 0x2272 <_ZN14OneSheeldClass12processFrameEv+0x46>
    2254:	16 96       	adiw	r26, 0x06	; 6
    2256:	1c 92       	st	X, r1
    2258:	16 97       	sbiw	r26, 0x06	; 6
    225a:	17 96       	adiw	r26, 0x07	; 7
    225c:	8c 91       	ld	r24, X
    225e:	17 97       	sbiw	r26, 0x07	; 7
    2260:	88 23       	and	r24, r24
    2262:	09 f4       	brne	.+2      	; 0x2266 <_ZN14OneSheeldClass12processFrameEv+0x3a>
    2264:	85 c0       	rjmp	.+266    	; 0x2370 <_ZN14OneSheeldClass12processFrameEv+0x144>
    2266:	59 96       	adiw	r26, 0x19	; 25
    2268:	ed 91       	ld	r30, X+
    226a:	fc 91       	ld	r31, X
    226c:	5a 97       	sbiw	r26, 0x1a	; 26
    226e:	80 e0       	ldi	r24, 0x00	; 0
    2270:	0c c0       	rjmp	.+24     	; 0x228a <_ZN14OneSheeldClass12processFrameEv+0x5e>
    2272:	81 30       	cpi	r24, 0x01	; 1
    2274:	61 f4       	brne	.+24     	; 0x228e <_ZN14OneSheeldClass12processFrameEv+0x62>
    2276:	f8 01       	movw	r30, r16
    2278:	86 83       	std	Z+6, r24	; 0x06
    227a:	87 81       	ldd	r24, Z+7	; 0x07
    227c:	88 23       	and	r24, r24
    227e:	09 f4       	brne	.+2      	; 0x2282 <_ZN14OneSheeldClass12processFrameEv+0x56>
    2280:	77 c0       	rjmp	.+238    	; 0x2370 <_ZN14OneSheeldClass12processFrameEv+0x144>
    2282:	01 8c       	ldd	r0, Z+25	; 0x19
    2284:	f2 8d       	ldd	r31, Z+26	; 0x1a
    2286:	e0 2d       	mov	r30, r0
    2288:	81 e0       	ldi	r24, 0x01	; 1
    228a:	09 95       	icall
    228c:	71 c0       	rjmp	.+226    	; 0x2370 <_ZN14OneSheeldClass12processFrameEv+0x144>
    228e:	83 30       	cpi	r24, 0x03	; 3
    2290:	81 f4       	brne	.+32     	; 0x22b2 <_ZN14OneSheeldClass12processFrameEv+0x86>
    2292:	1f 92       	push	r1
    2294:	81 e0       	ldi	r24, 0x01	; 1
    2296:	8f 93       	push	r24
    2298:	1f 92       	push	r1
    229a:	1f 92       	push	r1
    229c:	1f 93       	push	r17
    229e:	0f 93       	push	r16
    22a0:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>
    22a4:	0f 90       	pop	r0
    22a6:	0f 90       	pop	r0
    22a8:	0f 90       	pop	r0
    22aa:	0f 90       	pop	r0
    22ac:	0f 90       	pop	r0
    22ae:	0f 90       	pop	r0
    22b0:	5f c0       	rjmp	.+190    	; 0x2370 <_ZN14OneSheeldClass12processFrameEv+0x144>
    22b2:	85 30       	cpi	r24, 0x05	; 5
    22b4:	09 f0       	breq	.+2      	; 0x22b8 <_ZN14OneSheeldClass12processFrameEv+0x8c>
    22b6:	5c c0       	rjmp	.+184    	; 0x2370 <_ZN14OneSheeldClass12processFrameEv+0x144>
    22b8:	60 e0       	ldi	r22, 0x00	; 0
    22ba:	c8 01       	movw	r24, r16
    22bc:	0e 94 12 0f 	call	0x1e24	; 0x1e24 <_ZN14OneSheeldClass15getArgumentDataEh>
    22c0:	4b e0       	ldi	r20, 0x0B	; 11
    22c2:	50 e0       	ldi	r21, 0x00	; 0
    22c4:	bc 01       	movw	r22, r24
    22c6:	8d e9       	ldi	r24, 0x9D	; 157
    22c8:	91 e0       	ldi	r25, 0x01	; 1
    22ca:	0e 94 86 21 	call	0x430c	; 0x430c <memcmp>
    22ce:	89 2b       	or	r24, r25
    22d0:	09 f0       	breq	.+2      	; 0x22d4 <_ZN14OneSheeldClass12processFrameEv+0xa8>
    22d2:	4e c0       	rjmp	.+156    	; 0x2370 <_ZN14OneSheeldClass12processFrameEv+0x144>
    22d4:	19 82       	std	Y+1, r1	; 0x01
    22d6:	d8 01       	movw	r26, r16
    22d8:	56 96       	adiw	r26, 0x16	; 22
    22da:	ed 91       	ld	r30, X+
    22dc:	fc 91       	ld	r31, X
    22de:	57 97       	sbiw	r26, 0x17	; 23
    22e0:	a1 80       	ldd	r10, Z+1	; 0x01
    22e2:	b1 2c       	mov	r11, r1
    22e4:	e1 2c       	mov	r14, r1
    22e6:	f1 2c       	mov	r15, r1
    22e8:	c1 2c       	mov	r12, r1
    22ea:	d1 2c       	mov	r13, r1
    22ec:	ea 14       	cp	r14, r10
    22ee:	fb 04       	cpc	r15, r11
    22f0:	74 f4       	brge	.+28     	; 0x230e <_ZN14OneSheeldClass12processFrameEv+0xe2>
    22f2:	61 e0       	ldi	r22, 0x01	; 1
    22f4:	c8 01       	movw	r24, r16
    22f6:	0e 94 12 0f 	call	0x1e24	; 0x1e24 <_ZN14OneSheeldClass15getArgumentDataEh>
    22fa:	8e 0d       	add	r24, r14
    22fc:	9f 1d       	adc	r25, r15
    22fe:	fc 01       	movw	r30, r24
    2300:	80 81       	ld	r24, Z
    2302:	c8 0e       	add	r12, r24
    2304:	d1 1c       	adc	r13, r1
    2306:	ff ef       	ldi	r31, 0xFF	; 255
    2308:	ef 1a       	sub	r14, r31
    230a:	ff 0a       	sbc	r15, r31
    230c:	ef cf       	rjmp	.-34     	; 0x22ec <_ZN14OneSheeldClass12processFrameEv+0xc0>
    230e:	c9 82       	std	Y+1, r12	; 0x01
    2310:	84 e0       	ldi	r24, 0x04	; 4
    2312:	90 e0       	ldi	r25, 0x00	; 0
    2314:	0e 94 99 18 	call	0x3132	; 0x3132 <_Znwj>
    2318:	7c 01       	movw	r14, r24
    231a:	dc 01       	movw	r26, r24
    231c:	13 96       	adiw	r26, 0x03	; 3
    231e:	1c 92       	st	X, r1
    2320:	13 97       	sbiw	r26, 0x03	; 3
    2322:	81 e0       	ldi	r24, 0x01	; 1
    2324:	8c 93       	st	X, r24
    2326:	ce 01       	movw	r24, r28
    2328:	01 96       	adiw	r24, 0x01	; 1
    232a:	12 96       	adiw	r26, 0x02	; 2
    232c:	9c 93       	st	X, r25
    232e:	8e 93       	st	-X, r24
    2330:	11 97       	sbiw	r26, 0x01	; 1
    2332:	84 e0       	ldi	r24, 0x04	; 4
    2334:	90 e0       	ldi	r25, 0x00	; 0
    2336:	0e 94 99 18 	call	0x3132	; 0x3132 <_Znwj>
    233a:	fc 01       	movw	r30, r24
    233c:	13 82       	std	Z+3, r1	; 0x03
    233e:	87 e1       	ldi	r24, 0x17	; 23
    2340:	80 83       	st	Z, r24
    2342:	89 ea       	ldi	r24, 0xA9	; 169
    2344:	91 e0       	ldi	r25, 0x01	; 1
    2346:	92 83       	std	Z+2, r25	; 0x02
    2348:	81 83       	std	Z+1, r24	; 0x01
    234a:	ff 92       	push	r15
    234c:	ef 92       	push	r14
    234e:	ff 93       	push	r31
    2350:	ef 93       	push	r30
    2352:	82 e0       	ldi	r24, 0x02	; 2
    2354:	8f 93       	push	r24
    2356:	85 e0       	ldi	r24, 0x05	; 5
    2358:	8f 93       	push	r24
    235a:	1f 92       	push	r1
    235c:	1f 92       	push	r1
    235e:	1f 93       	push	r17
    2360:	0f 93       	push	r16
    2362:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>
    2366:	0f b6       	in	r0, 0x3f	; 63
    2368:	f8 94       	cli
    236a:	de bf       	out	0x3e, r29	; 62
    236c:	0f be       	out	0x3f, r0	; 63
    236e:	cd bf       	out	0x3d, r28	; 61
    2370:	0f 90       	pop	r0
    2372:	df 91       	pop	r29
    2374:	cf 91       	pop	r28
    2376:	1f 91       	pop	r17
    2378:	0f 91       	pop	r16
    237a:	ff 90       	pop	r15
    237c:	ef 90       	pop	r14
    237e:	df 90       	pop	r13
    2380:	cf 90       	pop	r12
    2382:	bf 90       	pop	r11
    2384:	af 90       	pop	r10
    2386:	08 95       	ret

00002388 <_ZN14OneSheeldClass13sendToShieldsEv>:
    2388:	0f 93       	push	r16
    238a:	1f 93       	push	r17
    238c:	cf 93       	push	r28
    238e:	df 93       	push	r29
    2390:	20 91 82 04 	lds	r18, 0x0482
    2394:	22 23       	and	r18, r18
    2396:	29 f0       	breq	.+10     	; 0x23a2 <_ZN14OneSheeldClass13sendToShieldsEv+0x1a>
    2398:	09 e9       	ldi	r16, 0x99	; 153
    239a:	14 e0       	ldi	r17, 0x04	; 4
    239c:	c0 e0       	ldi	r28, 0x00	; 0
    239e:	d0 e0       	ldi	r29, 0x00	; 0
    23a0:	06 c0       	rjmp	.+12     	; 0x23ae <_ZN14OneSheeldClass13sendToShieldsEv+0x26>
    23a2:	df 91       	pop	r29
    23a4:	cf 91       	pop	r28
    23a6:	1f 91       	pop	r17
    23a8:	0f 91       	pop	r16
    23aa:	0c 94 16 11 	jmp	0x222c	; 0x222c <_ZN14OneSheeldClass12processFrameEv>
    23ae:	80 91 f4 04 	lds	r24, 0x04F4
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	c8 17       	cp	r28, r24
    23b6:	d9 07       	cpc	r29, r25
    23b8:	6c f4       	brge	.+26     	; 0x23d4 <_ZN14OneSheeldClass13sendToShieldsEv+0x4c>
    23ba:	d8 01       	movw	r26, r16
    23bc:	8d 91       	ld	r24, X+
    23be:	9d 91       	ld	r25, X+
    23c0:	8d 01       	movw	r16, r26
    23c2:	dc 01       	movw	r26, r24
    23c4:	ed 91       	ld	r30, X+
    23c6:	fc 91       	ld	r31, X
    23c8:	01 90       	ld	r0, Z+
    23ca:	f0 81       	ld	r31, Z
    23cc:	e0 2d       	mov	r30, r0
    23ce:	09 95       	icall
    23d0:	21 96       	adiw	r28, 0x01	; 1
    23d2:	ed cf       	rjmp	.-38     	; 0x23ae <_ZN14OneSheeldClass13sendToShieldsEv+0x26>
    23d4:	df 91       	pop	r29
    23d6:	cf 91       	pop	r28
    23d8:	1f 91       	pop	r17
    23da:	0f 91       	pop	r16
    23dc:	08 95       	ret

000023de <_ZN14OneSheeldClass17enteringACallbackEv>:
    23de:	cf 93       	push	r28
    23e0:	df 93       	push	r29
    23e2:	ec 01       	movw	r28, r24
    23e4:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <_ZN14OneSheeldClass13isInACallbackEv>
    23e8:	81 11       	cpse	r24, r1
    23ea:	14 c0       	rjmp	.+40     	; 0x2414 <_ZN14OneSheeldClass17enteringACallbackEv+0x36>
    23ec:	81 e0       	ldi	r24, 0x01	; 1
    23ee:	80 93 ef 04 	sts	0x04EF, r24
    23f2:	8a 87       	std	Y+10, r24	; 0x0a
    23f4:	1f 92       	push	r1
    23f6:	83 e0       	ldi	r24, 0x03	; 3
    23f8:	8f 93       	push	r24
    23fa:	1f 92       	push	r1
    23fc:	1f 92       	push	r1
    23fe:	df 93       	push	r29
    2400:	cf 93       	push	r28
    2402:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>
    2406:	1a 86       	std	Y+10, r1	; 0x0a
    2408:	0f 90       	pop	r0
    240a:	0f 90       	pop	r0
    240c:	0f 90       	pop	r0
    240e:	0f 90       	pop	r0
    2410:	0f 90       	pop	r0
    2412:	0f 90       	pop	r0
    2414:	df 91       	pop	r29
    2416:	cf 91       	pop	r28
    2418:	08 95       	ret

0000241a <_ZN14OneSheeldClass16exitingACallbackEv>:
    241a:	cf 93       	push	r28
    241c:	df 93       	push	r29
    241e:	ec 01       	movw	r28, r24
    2420:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <_ZN14OneSheeldClass13isInACallbackEv>
    2424:	88 23       	and	r24, r24
    2426:	a1 f0       	breq	.+40     	; 0x2450 <_ZN14OneSheeldClass16exitingACallbackEv+0x36>
    2428:	10 92 ef 04 	sts	0x04EF, r1
    242c:	81 e0       	ldi	r24, 0x01	; 1
    242e:	8a 87       	std	Y+10, r24	; 0x0a
    2430:	1f 92       	push	r1
    2432:	84 e0       	ldi	r24, 0x04	; 4
    2434:	8f 93       	push	r24
    2436:	1f 92       	push	r1
    2438:	1f 92       	push	r1
    243a:	df 93       	push	r29
    243c:	cf 93       	push	r28
    243e:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>
    2442:	1a 86       	std	Y+10, r1	; 0x0a
    2444:	0f 90       	pop	r0
    2446:	0f 90       	pop	r0
    2448:	0f 90       	pop	r0
    244a:	0f 90       	pop	r0
    244c:	0f 90       	pop	r0
    244e:	0f 90       	pop	r0
    2450:	df 91       	pop	r29
    2452:	cf 91       	pop	r28
    2454:	08 95       	ret

00002456 <_ZN14OneSheeldClass12processInputEi>:
    2456:	cf 92       	push	r12
    2458:	df 92       	push	r13
    245a:	ef 92       	push	r14
    245c:	ff 92       	push	r15
    245e:	0f 93       	push	r16
    2460:	1f 93       	push	r17
    2462:	cf 93       	push	r28
    2464:	df 93       	push	r29
    2466:	ec 01       	movw	r28, r24
    2468:	8b 01       	movw	r16, r22
    246a:	6f 3f       	cpi	r22, 0xFF	; 255
    246c:	8f ef       	ldi	r24, 0xFF	; 255
    246e:	78 07       	cpc	r23, r24
    2470:	09 f4       	brne	.+2      	; 0x2474 <_ZN14OneSheeldClass12processInputEi+0x1e>
    2472:	6e c1       	rjmp	.+732    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    2474:	9b 85       	ldd	r25, Y+11	; 0x0b
    2476:	91 11       	cpse	r25, r1
    2478:	1b c0       	rjmp	.+54     	; 0x24b0 <_ZN14OneSheeldClass12processInputEi+0x5a>
    247a:	6f 3f       	cpi	r22, 0xFF	; 255
    247c:	71 05       	cpc	r23, r1
    247e:	c1 f4       	brne	.+48     	; 0x24b0 <_ZN14OneSheeldClass12processInputEi+0x5a>
    2480:	ce 01       	movw	r24, r28
    2482:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZN14OneSheeldClass19freeMemoryAllocatedEv>
    2486:	81 e0       	ldi	r24, 0x01	; 1
    2488:	8b 87       	std	Y+11, r24	; 0x0b
    248a:	1d 8a       	std	Y+21, r1	; 0x15
    248c:	1c 8a       	std	Y+20, r1	; 0x14
    248e:	1f 8a       	std	Y+23, r1	; 0x17
    2490:	1e 8a       	std	Y+22, r1	; 0x16
    2492:	88 8b       	std	Y+16, r24	; 0x10
    2494:	61 ec       	ldi	r22, 0xC1	; 193
    2496:	71 e0       	ldi	r23, 0x01	; 1
    2498:	8e e8       	ldi	r24, 0x8E	; 142
    249a:	93 e0       	ldi	r25, 0x03	; 3
    249c:	df 91       	pop	r29
    249e:	cf 91       	pop	r28
    24a0:	1f 91       	pop	r17
    24a2:	0f 91       	pop	r16
    24a4:	ff 90       	pop	r15
    24a6:	ef 90       	pop	r14
    24a8:	df 90       	pop	r13
    24aa:	cf 90       	pop	r12
    24ac:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <_ZN5Print5printEPKc>
    24b0:	88 89       	ldd	r24, Y+16	; 0x10
    24b2:	84 30       	cpi	r24, 0x04	; 4
    24b4:	69 f4       	brne	.+26     	; 0x24d0 <_ZN14OneSheeldClass12processInputEi+0x7a>
    24b6:	99 23       	and	r25, r25
    24b8:	09 f4       	brne	.+2      	; 0x24bc <_ZN14OneSheeldClass12processInputEi+0x66>
    24ba:	4a c1       	rjmp	.+660    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    24bc:	65 ec       	ldi	r22, 0xC5	; 197
    24be:	71 e0       	ldi	r23, 0x01	; 1
    24c0:	8e e8       	ldi	r24, 0x8E	; 142
    24c2:	93 e0       	ldi	r25, 0x03	; 3
    24c4:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    24c8:	1a 8a       	std	Y+18, r1	; 0x12
    24ca:	19 8a       	std	Y+17, r1	; 0x11
    24cc:	0b 8b       	std	Y+19, r16	; 0x13
    24ce:	3d c1       	rjmp	.+634    	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    24d0:	85 30       	cpi	r24, 0x05	; 5
    24d2:	99 f5       	brne	.+102    	; 0x253a <_ZN14OneSheeldClass12processInputEi+0xe4>
    24d4:	99 23       	and	r25, r25
    24d6:	09 f4       	brne	.+2      	; 0x24da <_ZN14OneSheeldClass12processInputEi+0x84>
    24d8:	3b c1       	rjmp	.+630    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    24da:	69 ec       	ldi	r22, 0xC9	; 201
    24dc:	71 e0       	ldi	r23, 0x01	; 1
    24de:	8e e8       	ldi	r24, 0x8E	; 142
    24e0:	93 e0       	ldi	r25, 0x03	; 3
    24e2:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    24e6:	4b 89       	ldd	r20, Y+19	; 0x13
    24e8:	84 2f       	mov	r24, r20
    24ea:	90 e0       	ldi	r25, 0x00	; 0
    24ec:	2f ef       	ldi	r18, 0xFF	; 255
    24ee:	30 e0       	ldi	r19, 0x00	; 0
    24f0:	28 1b       	sub	r18, r24
    24f2:	39 0b       	sbc	r19, r25
    24f4:	20 17       	cp	r18, r16
    24f6:	31 07       	cpc	r19, r17
    24f8:	f1 f5       	brne	.+124    	; 0x2576 <_ZN14OneSheeldClass12processInputEi+0x120>
    24fa:	41 11       	cpse	r20, r1
    24fc:	02 c0       	rjmp	.+4      	; 0x2502 <_ZN14OneSheeldClass12processInputEi+0xac>
    24fe:	89 e0       	ldi	r24, 0x09	; 9
    2500:	26 c1       	rjmp	.+588    	; 0x274e <_ZN14OneSheeldClass12processInputEi+0x2f8>
    2502:	88 0f       	add	r24, r24
    2504:	99 1f       	adc	r25, r25
    2506:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <malloc>
    250a:	9d 8b       	std	Y+21, r25	; 0x15
    250c:	8c 8b       	std	Y+20, r24	; 0x14
    250e:	6d ec       	ldi	r22, 0xCD	; 205
    2510:	71 e0       	ldi	r23, 0x01	; 1
    2512:	8e e8       	ldi	r24, 0x8E	; 142
    2514:	93 e0       	ldi	r25, 0x03	; 3
    2516:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    251a:	11 e0       	ldi	r17, 0x01	; 1
    251c:	1c 83       	std	Y+4, r17	; 0x04
    251e:	8b 89       	ldd	r24, Y+19	; 0x13
    2520:	90 e0       	ldi	r25, 0x00	; 0
    2522:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <malloc>
    2526:	9f 8b       	std	Y+23, r25	; 0x17
    2528:	8e 8b       	std	Y+22, r24	; 0x16
    252a:	61 ed       	ldi	r22, 0xD1	; 209
    252c:	71 e0       	ldi	r23, 0x01	; 1
    252e:	8e e8       	ldi	r24, 0x8E	; 142
    2530:	93 e0       	ldi	r25, 0x03	; 3
    2532:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    2536:	1d 83       	std	Y+5, r17	; 0x05
    2538:	08 c1       	rjmp	.+528    	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    253a:	86 30       	cpi	r24, 0x06	; 6
    253c:	f1 f0       	breq	.+60     	; 0x257a <_ZN14OneSheeldClass12processInputEi+0x124>
    253e:	87 30       	cpi	r24, 0x07	; 7
    2540:	09 f0       	breq	.+2      	; 0x2544 <_ZN14OneSheeldClass12processInputEi+0xee>
    2542:	55 c0       	rjmp	.+170    	; 0x25ee <_ZN14OneSheeldClass12processInputEi+0x198>
    2544:	99 23       	and	r25, r25
    2546:	09 f4       	brne	.+2      	; 0x254a <_ZN14OneSheeldClass12processInputEi+0xf4>
    2548:	03 c1       	rjmp	.+518    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    254a:	69 ed       	ldi	r22, 0xD9	; 217
    254c:	71 e0       	ldi	r23, 0x01	; 1
    254e:	8e e8       	ldi	r24, 0x8E	; 142
    2550:	93 e0       	ldi	r25, 0x03	; 3
    2552:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    2556:	29 89       	ldd	r18, Y+17	; 0x11
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	ee 89       	ldd	r30, Y+22	; 0x16
    255c:	ff 89       	ldd	r31, Y+23	; 0x17
    255e:	e2 0f       	add	r30, r18
    2560:	f3 1f       	adc	r31, r19
    2562:	60 81       	ld	r22, Z
    2564:	86 2f       	mov	r24, r22
    2566:	90 e0       	ldi	r25, 0x00	; 0
    2568:	4f ef       	ldi	r20, 0xFF	; 255
    256a:	50 e0       	ldi	r21, 0x00	; 0
    256c:	48 1b       	sub	r20, r24
    256e:	59 0b       	sbc	r21, r25
    2570:	40 17       	cp	r20, r16
    2572:	51 07       	cpc	r21, r17
    2574:	91 f0       	breq	.+36     	; 0x259a <_ZN14OneSheeldClass12processInputEi+0x144>
    2576:	1b 86       	std	Y+11, r1	; 0x0b
    2578:	94 c0       	rjmp	.+296    	; 0x26a2 <_ZN14OneSheeldClass12processInputEi+0x24c>
    257a:	99 23       	and	r25, r25
    257c:	09 f4       	brne	.+2      	; 0x2580 <_ZN14OneSheeldClass12processInputEi+0x12a>
    257e:	e8 c0       	rjmp	.+464    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    2580:	65 ed       	ldi	r22, 0xD5	; 213
    2582:	71 e0       	ldi	r23, 0x01	; 1
    2584:	8e e8       	ldi	r24, 0x8E	; 142
    2586:	93 e0       	ldi	r25, 0x03	; 3
    2588:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    258c:	89 89       	ldd	r24, Y+17	; 0x11
    258e:	ee 89       	ldd	r30, Y+22	; 0x16
    2590:	ff 89       	ldd	r31, Y+23	; 0x17
    2592:	e8 0f       	add	r30, r24
    2594:	f1 1d       	adc	r31, r1
    2596:	00 83       	st	Z, r16
    2598:	d8 c0       	rjmp	.+432    	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    259a:	22 0f       	add	r18, r18
    259c:	33 1f       	adc	r19, r19
    259e:	0c 89       	ldd	r16, Y+20	; 0x14
    25a0:	1d 89       	ldd	r17, Y+21	; 0x15
    25a2:	66 23       	and	r22, r22
    25a4:	81 f0       	breq	.+32     	; 0x25c6 <_ZN14OneSheeldClass12processInputEi+0x170>
    25a6:	02 0f       	add	r16, r18
    25a8:	13 1f       	adc	r17, r19
    25aa:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <malloc>
    25ae:	f8 01       	movw	r30, r16
    25b0:	91 83       	std	Z+1, r25	; 0x01
    25b2:	80 83       	st	Z, r24
    25b4:	6d ed       	ldi	r22, 0xDD	; 221
    25b6:	71 e0       	ldi	r23, 0x01	; 1
    25b8:	8e e8       	ldi	r24, 0x8E	; 142
    25ba:	93 e0       	ldi	r25, 0x03	; 3
    25bc:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    25c0:	88 89       	ldd	r24, Y+16	; 0x10
    25c2:	8f 5f       	subi	r24, 0xFF	; 255
    25c4:	0f c0       	rjmp	.+30     	; 0x25e4 <_ZN14OneSheeldClass12processInputEi+0x18e>
    25c6:	f8 01       	movw	r30, r16
    25c8:	e2 0f       	add	r30, r18
    25ca:	f3 1f       	adc	r31, r19
    25cc:	11 82       	std	Z+1, r1	; 0x01
    25ce:	10 82       	st	Z, r1
    25d0:	1a 8a       	std	Y+18, r1	; 0x12
    25d2:	89 89       	ldd	r24, Y+17	; 0x11
    25d4:	8f 5f       	subi	r24, 0xFF	; 255
    25d6:	89 8b       	std	Y+17, r24	; 0x11
    25d8:	9b 89       	ldd	r25, Y+19	; 0x13
    25da:	89 13       	cpse	r24, r25
    25dc:	02 c0       	rjmp	.+4      	; 0x25e2 <_ZN14OneSheeldClass12processInputEi+0x18c>
    25de:	89 e0       	ldi	r24, 0x09	; 9
    25e0:	01 c0       	rjmp	.+2      	; 0x25e4 <_ZN14OneSheeldClass12processInputEi+0x18e>
    25e2:	86 e0       	ldi	r24, 0x06	; 6
    25e4:	88 8b       	std	Y+16, r24	; 0x10
    25e6:	8c 85       	ldd	r24, Y+12	; 0x0c
    25e8:	8f 5f       	subi	r24, 0xFF	; 255
    25ea:	8c 87       	std	Y+12, r24	; 0x0c
    25ec:	b1 c0       	rjmp	.+354    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    25ee:	88 30       	cpi	r24, 0x08	; 8
    25f0:	81 f5       	brne	.+96     	; 0x2652 <_ZN14OneSheeldClass12processInputEi+0x1fc>
    25f2:	99 23       	and	r25, r25
    25f4:	09 f4       	brne	.+2      	; 0x25f8 <_ZN14OneSheeldClass12processInputEi+0x1a2>
    25f6:	ac c0       	rjmp	.+344    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    25f8:	61 ee       	ldi	r22, 0xE1	; 225
    25fa:	71 e0       	ldi	r23, 0x01	; 1
    25fc:	8e e8       	ldi	r24, 0x8E	; 142
    25fe:	93 e0       	ldi	r25, 0x03	; 3
    2600:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    2604:	89 89       	ldd	r24, Y+17	; 0x11
    2606:	2c 89       	ldd	r18, Y+20	; 0x14
    2608:	9d 89       	ldd	r25, Y+21	; 0x15
    260a:	e2 2f       	mov	r30, r18
    260c:	f9 2f       	mov	r31, r25
    260e:	e8 0f       	add	r30, r24
    2610:	f1 1d       	adc	r31, r1
    2612:	e8 0f       	add	r30, r24
    2614:	f1 1d       	adc	r31, r1
    2616:	80 81       	ld	r24, Z
    2618:	91 81       	ldd	r25, Z+1	; 0x01
    261a:	00 97       	sbiw	r24, 0x00	; 0
    261c:	41 f0       	breq	.+16     	; 0x262e <_ZN14OneSheeldClass12processInputEi+0x1d8>
    261e:	2a 89       	ldd	r18, Y+18	; 0x12
    2620:	31 e0       	ldi	r19, 0x01	; 1
    2622:	32 0f       	add	r19, r18
    2624:	3a 8b       	std	Y+18, r19	; 0x12
    2626:	fc 01       	movw	r30, r24
    2628:	e2 0f       	add	r30, r18
    262a:	f1 1d       	adc	r31, r1
    262c:	00 83       	st	Z, r16
    262e:	89 89       	ldd	r24, Y+17	; 0x11
    2630:	ee 89       	ldd	r30, Y+22	; 0x16
    2632:	ff 89       	ldd	r31, Y+23	; 0x17
    2634:	e8 0f       	add	r30, r24
    2636:	f1 1d       	adc	r31, r1
    2638:	2a 89       	ldd	r18, Y+18	; 0x12
    263a:	90 81       	ld	r25, Z
    263c:	29 13       	cpse	r18, r25
    263e:	88 c0       	rjmp	.+272    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    2640:	1a 8a       	std	Y+18, r1	; 0x12
    2642:	8f 5f       	subi	r24, 0xFF	; 255
    2644:	89 8b       	std	Y+17, r24	; 0x11
    2646:	9b 89       	ldd	r25, Y+19	; 0x13
    2648:	89 17       	cp	r24, r25
    264a:	09 f4       	brne	.+2      	; 0x264e <_ZN14OneSheeldClass12processInputEi+0x1f8>
    264c:	7e c0       	rjmp	.+252    	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    264e:	86 e0       	ldi	r24, 0x06	; 6
    2650:	7e c0       	rjmp	.+252    	; 0x274e <_ZN14OneSheeldClass12processInputEi+0x2f8>
    2652:	89 30       	cpi	r24, 0x09	; 9
    2654:	89 f5       	brne	.+98     	; 0x26b8 <_ZN14OneSheeldClass12processInputEi+0x262>
    2656:	99 23       	and	r25, r25
    2658:	09 f4       	brne	.+2      	; 0x265c <_ZN14OneSheeldClass12processInputEi+0x206>
    265a:	7a c0       	rjmp	.+244    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    265c:	65 ee       	ldi	r22, 0xE5	; 229
    265e:	71 e0       	ldi	r23, 0x01	; 1
    2660:	8e e8       	ldi	r24, 0x8E	; 142
    2662:	93 e0       	ldi	r25, 0x03	; 3
    2664:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    2668:	08 8f       	std	Y+24, r16	; 0x18
    266a:	01 11       	cpse	r16, r1
    266c:	1a c0       	rjmp	.+52     	; 0x26a2 <_ZN14OneSheeldClass12processInputEi+0x24c>
    266e:	1b 86       	std	Y+11, r1	; 0x0b
    2670:	ce 01       	movw	r24, r28
    2672:	0e 94 c4 11 	call	0x2388	; 0x2388 <_ZN14OneSheeldClass13sendToShieldsEv>
    2676:	88 85       	ldd	r24, Y+8	; 0x08
    2678:	88 23       	and	r24, r24
    267a:	99 f0       	breq	.+38     	; 0x26a2 <_ZN14OneSheeldClass12processInputEi+0x24c>
    267c:	8d 85       	ldd	r24, Y+13	; 0x0d
    267e:	88 23       	and	r24, r24
    2680:	81 f0       	breq	.+32     	; 0x26a2 <_ZN14OneSheeldClass12processInputEi+0x24c>
    2682:	ce 01       	movw	r24, r28
    2684:	0e 94 ef 11 	call	0x23de	; 0x23de <_ZN14OneSheeldClass17enteringACallbackEv>
    2688:	0c 89       	ldd	r16, Y+20	; 0x14
    268a:	1d 89       	ldd	r17, Y+21	; 0x15
    268c:	2e 89       	ldd	r18, Y+22	; 0x16
    268e:	3f 89       	ldd	r19, Y+23	; 0x17
    2690:	eb 8d       	ldd	r30, Y+27	; 0x1b
    2692:	fc 8d       	ldd	r31, Y+28	; 0x1c
    2694:	4b 89       	ldd	r20, Y+19	; 0x13
    2696:	6f 85       	ldd	r22, Y+15	; 0x0f
    2698:	8d 85       	ldd	r24, Y+13	; 0x0d
    269a:	09 95       	icall
    269c:	ce 01       	movw	r24, r28
    269e:	0e 94 0d 12 	call	0x241a	; 0x241a <_ZN14OneSheeldClass16exitingACallbackEv>
    26a2:	ce 01       	movw	r24, r28
    26a4:	df 91       	pop	r29
    26a6:	cf 91       	pop	r28
    26a8:	1f 91       	pop	r17
    26aa:	0f 91       	pop	r16
    26ac:	ff 90       	pop	r15
    26ae:	ef 90       	pop	r14
    26b0:	df 90       	pop	r13
    26b2:	cf 90       	pop	r12
    26b4:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <_ZN14OneSheeldClass19freeMemoryAllocatedEv>
    26b8:	99 23       	and	r25, r25
    26ba:	09 f4       	brne	.+2      	; 0x26be <_ZN14OneSheeldClass12processInputEi+0x268>
    26bc:	49 c0       	rjmp	.+146    	; 0x2750 <_ZN14OneSheeldClass12processInputEi+0x2fa>
    26be:	81 30       	cpi	r24, 0x01	; 1
    26c0:	31 f5       	brne	.+76     	; 0x270e <_ZN14OneSheeldClass12processInputEi+0x2b8>
    26c2:	0d 87       	std	Y+13, r16	; 0x0d
    26c4:	00 23       	and	r16, r16
    26c6:	09 f4       	brne	.+2      	; 0x26ca <_ZN14OneSheeldClass12processInputEi+0x274>
    26c8:	40 c0       	rjmp	.+128    	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    26ca:	88 85       	ldd	r24, Y+8	; 0x08
    26cc:	81 11       	cpse	r24, r1
    26ce:	3d c0       	rjmp	.+122    	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    26d0:	39 e9       	ldi	r19, 0x99	; 153
    26d2:	c3 2e       	mov	r12, r19
    26d4:	34 e0       	ldi	r19, 0x04	; 4
    26d6:	d3 2e       	mov	r13, r19
    26d8:	00 e0       	ldi	r16, 0x00	; 0
    26da:	10 e0       	ldi	r17, 0x00	; 0
    26dc:	f1 2c       	mov	r15, r1
    26de:	80 91 f4 04 	lds	r24, 0x04F4
    26e2:	90 e0       	ldi	r25, 0x00	; 0
    26e4:	08 17       	cp	r16, r24
    26e6:	19 07       	cpc	r17, r25
    26e8:	74 f4       	brge	.+28     	; 0x2706 <_ZN14OneSheeldClass12processInputEi+0x2b0>
    26ea:	ed 84       	ldd	r14, Y+13	; 0x0d
    26ec:	f6 01       	movw	r30, r12
    26ee:	81 91       	ld	r24, Z+
    26f0:	91 91       	ld	r25, Z+
    26f2:	6f 01       	movw	r12, r30
    26f4:	0e 94 8b 14 	call	0x2916	; 0x2916 <_ZN12ShieldParent11getShieldIdEv>
    26f8:	e8 12       	cpse	r14, r24
    26fa:	02 c0       	rjmp	.+4      	; 0x2700 <_ZN14OneSheeldClass12processInputEi+0x2aa>
    26fc:	ff 24       	eor	r15, r15
    26fe:	f3 94       	inc	r15
    2700:	0f 5f       	subi	r16, 0xFF	; 255
    2702:	1f 4f       	sbci	r17, 0xFF	; 255
    2704:	ec cf       	rjmp	.-40     	; 0x26de <_ZN14OneSheeldClass12processInputEi+0x288>
    2706:	ff 20       	and	r15, r15
    2708:	09 f4       	brne	.+2      	; 0x270c <_ZN14OneSheeldClass12processInputEi+0x2b6>
    270a:	35 cf       	rjmp	.-406    	; 0x2576 <_ZN14OneSheeldClass12processInputEi+0x120>
    270c:	1e c0       	rjmp	.+60     	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    270e:	82 30       	cpi	r24, 0x02	; 2
    2710:	99 f4       	brne	.+38     	; 0x2738 <_ZN14OneSheeldClass12processInputEi+0x2e2>
    2712:	0e 87       	std	Y+14, r16	; 0x0e
    2714:	8f ef       	ldi	r24, 0xFF	; 255
    2716:	90 e0       	ldi	r25, 0x00	; 0
    2718:	80 1b       	sub	r24, r16
    271a:	91 09       	sbc	r25, r1
    271c:	24 e0       	ldi	r18, 0x04	; 4
    271e:	95 95       	asr	r25
    2720:	87 95       	ror	r24
    2722:	2a 95       	dec	r18
    2724:	e1 f7       	brne	.-8      	; 0x271e <_ZN14OneSheeldClass12processInputEi+0x2c8>
    2726:	0f 70       	andi	r16, 0x0F	; 15
    2728:	10 e0       	ldi	r17, 0x00	; 0
    272a:	80 17       	cp	r24, r16
    272c:	91 07       	cpc	r25, r17
    272e:	09 f0       	breq	.+2      	; 0x2732 <_ZN14OneSheeldClass12processInputEi+0x2dc>
    2730:	1b 86       	std	Y+11, r1	; 0x0b
    2732:	69 ee       	ldi	r22, 0xE9	; 233
    2734:	71 e0       	ldi	r23, 0x01	; 1
    2736:	05 c0       	rjmp	.+10     	; 0x2742 <_ZN14OneSheeldClass12processInputEi+0x2ec>
    2738:	83 30       	cpi	r24, 0x03	; 3
    273a:	39 f4       	brne	.+14     	; 0x274a <_ZN14OneSheeldClass12processInputEi+0x2f4>
    273c:	0f 87       	std	Y+15, r16	; 0x0f
    273e:	6d ee       	ldi	r22, 0xED	; 237
    2740:	71 e0       	ldi	r23, 0x01	; 1
    2742:	8e e8       	ldi	r24, 0x8E	; 142
    2744:	93 e0       	ldi	r25, 0x03	; 3
    2746:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN5Print5printEPKc>
    274a:	88 89       	ldd	r24, Y+16	; 0x10
    274c:	8f 5f       	subi	r24, 0xFF	; 255
    274e:	88 8b       	std	Y+16, r24	; 0x10
    2750:	df 91       	pop	r29
    2752:	cf 91       	pop	r28
    2754:	1f 91       	pop	r17
    2756:	0f 91       	pop	r16
    2758:	ff 90       	pop	r15
    275a:	ef 90       	pop	r14
    275c:	df 90       	pop	r13
    275e:	cf 90       	pop	r12
    2760:	08 95       	ret

00002762 <_ZN14OneSheeldClass12processInputEv>:
    2762:	0f 93       	push	r16
    2764:	1f 93       	push	r17
    2766:	cf 93       	push	r28
    2768:	df 93       	push	r29
    276a:	ec 01       	movw	r28, r24
    276c:	80 91 97 04 	lds	r24, 0x0497
    2770:	90 91 98 04 	lds	r25, 0x0498
    2774:	dc 01       	movw	r26, r24
    2776:	ed 91       	ld	r30, X+
    2778:	fc 91       	ld	r31, X
    277a:	04 80       	ldd	r0, Z+4	; 0x04
    277c:	f5 81       	ldd	r31, Z+5	; 0x05
    277e:	e0 2d       	mov	r30, r0
    2780:	09 95       	icall
    2782:	89 2b       	or	r24, r25
    2784:	f9 f0       	breq	.+62     	; 0x27c4 <_ZN14OneSheeldClass12processInputEv+0x62>
    2786:	80 91 97 04 	lds	r24, 0x0497
    278a:	90 91 98 04 	lds	r25, 0x0498
    278e:	dc 01       	movw	r26, r24
    2790:	ed 91       	ld	r30, X+
    2792:	fc 91       	ld	r31, X
    2794:	06 80       	ldd	r0, Z+6	; 0x06
    2796:	f7 81       	ldd	r31, Z+7	; 0x07
    2798:	e0 2d       	mov	r30, r0
    279a:	09 95       	icall
    279c:	8c 01       	movw	r16, r24
    279e:	bc 01       	movw	r22, r24
    27a0:	77 27       	eor	r23, r23
    27a2:	ce 01       	movw	r24, r28
    27a4:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN14OneSheeldClass12processInputEi>
    27a8:	89 85       	ldd	r24, Y+9	; 0x09
    27aa:	88 23       	and	r24, r24
    27ac:	f9 f2       	breq	.-66     	; 0x276c <_ZN14OneSheeldClass12processInputEv+0xa>
    27ae:	ce 01       	movw	r24, r28
    27b0:	0e 94 ef 11 	call	0x23de	; 0x23de <_ZN14OneSheeldClass17enteringACallbackEv>
    27b4:	ed 8d       	ldd	r30, Y+29	; 0x1d
    27b6:	fe 8d       	ldd	r31, Y+30	; 0x1e
    27b8:	80 2f       	mov	r24, r16
    27ba:	09 95       	icall
    27bc:	ce 01       	movw	r24, r28
    27be:	0e 94 0d 12 	call	0x241a	; 0x241a <_ZN14OneSheeldClass16exitingACallbackEv>
    27c2:	d4 cf       	rjmp	.-88     	; 0x276c <_ZN14OneSheeldClass12processInputEv+0xa>
    27c4:	df 91       	pop	r29
    27c6:	cf 91       	pop	r28
    27c8:	1f 91       	pop	r17
    27ca:	0f 91       	pop	r16
    27cc:	08 95       	ret

000027ce <_Z11serialEventv>:
    27ce:	80 91 f5 04 	lds	r24, 0x04F5
    27d2:	81 11       	cpse	r24, r1
    27d4:	04 c0       	rjmp	.+8      	; 0x27de <_Z11serialEventv+0x10>
    27d6:	85 e7       	ldi	r24, 0x75	; 117
    27d8:	94 e0       	ldi	r25, 0x04	; 4
    27da:	0c 94 b1 13 	jmp	0x2762	; 0x2762 <_ZN14OneSheeldClass12processInputEv>
    27de:	08 95       	ret

000027e0 <_GLOBAL__sub_I__ZN14OneSheeldClass6isInitE>:
      {
        if(OneSheeldSerial->available())
          OneSheeld.processInput(OneSheeldSerial->read());
      }
}
OneSheeldClass OneSheeld;
    27e0:	85 e7       	ldi	r24, 0x75	; 117
    27e2:	94 e0       	ldi	r25, 0x04	; 4
    27e4:	0c 94 b9 0e 	jmp	0x1d72	; 0x1d72 <_ZN14OneSheeldClassC1Ev>

000027e8 <_ZN12PrintlnClassC1Ehhh>:
	cTypeStringData[stringDataLength]='\r';
	cTypeStringData[stringDataLength+1]='\n';
	cTypeStringData[stringDataLength+2]='\0';

	print(cTypeStringData);
}
    27e8:	0c 94 e3 15 	jmp	0x2bc6	; 0x2bc6 <_ZN10PrintClassC1Ehhh>

000027ec <_ZN12PrintlnClass7printlnEPKc>:
    27ec:	cf 92       	push	r12
    27ee:	df 92       	push	r13
    27f0:	ef 92       	push	r14
    27f2:	ff 92       	push	r15
    27f4:	0f 93       	push	r16
    27f6:	1f 93       	push	r17
    27f8:	cf 93       	push	r28
    27fa:	df 93       	push	r29
    27fc:	cd b7       	in	r28, 0x3d	; 61
    27fe:	de b7       	in	r29, 0x3e	; 62
    2800:	6c 01       	movw	r12, r24
    2802:	ed b6       	in	r14, 0x3d	; 61
    2804:	fe b6       	in	r15, 0x3e	; 62
    2806:	fb 01       	movw	r30, r22
    2808:	01 90       	ld	r0, Z+
    280a:	00 20       	and	r0, r0
    280c:	e9 f7       	brne	.-6      	; 0x2808 <_ZN12PrintlnClass7printlnEPKc+0x1c>
    280e:	9f 01       	movw	r18, r30
    2810:	26 1b       	sub	r18, r22
    2812:	37 0b       	sbc	r19, r23
    2814:	2e 5f       	subi	r18, 0xFE	; 254
    2816:	3f 4f       	sbci	r19, 0xFF	; 255
    2818:	8d b7       	in	r24, 0x3d	; 61
    281a:	9e b7       	in	r25, 0x3e	; 62
    281c:	82 1b       	sub	r24, r18
    281e:	93 0b       	sbc	r25, r19
    2820:	0f b6       	in	r0, 0x3f	; 63
    2822:	f8 94       	cli
    2824:	9e bf       	out	0x3e, r25	; 62
    2826:	0f be       	out	0x3f, r0	; 63
    2828:	8d bf       	out	0x3d, r24	; 61
    282a:	0d b7       	in	r16, 0x3d	; 61
    282c:	1e b7       	in	r17, 0x3e	; 62
    282e:	0f 5f       	subi	r16, 0xFF	; 255
    2830:	1f 4f       	sbci	r17, 0xFF	; 255
    2832:	ed b7       	in	r30, 0x3d	; 61
    2834:	fe b7       	in	r31, 0x3e	; 62
    2836:	11 82       	std	Z+1, r1	; 0x01
    2838:	c8 01       	movw	r24, r16
    283a:	0e 94 a3 21 	call	0x4346	; 0x4346 <strcat>
    283e:	60 e8       	ldi	r22, 0x80	; 128
    2840:	71 e0       	ldi	r23, 0x01	; 1
    2842:	c8 01       	movw	r24, r16
    2844:	0e 94 a3 21 	call	0x4346	; 0x4346 <strcat>
    2848:	b8 01       	movw	r22, r16
    284a:	c6 01       	movw	r24, r12
    284c:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <_ZN10PrintClass5printEPKc>
    2850:	0f b6       	in	r0, 0x3f	; 63
    2852:	f8 94       	cli
    2854:	fe be       	out	0x3e, r15	; 62
    2856:	0f be       	out	0x3f, r0	; 63
    2858:	ed be       	out	0x3d, r14	; 61
    285a:	df 91       	pop	r29
    285c:	cf 91       	pop	r28
    285e:	1f 91       	pop	r17
    2860:	0f 91       	pop	r16
    2862:	ff 90       	pop	r15
    2864:	ef 90       	pop	r14
    2866:	df 90       	pop	r13
    2868:	cf 90       	pop	r12
    286a:	08 95       	ret

0000286c <_ZN12PrintlnClass7printlnEdi>:

//Unsupported by Intel Galileo board and Arduino Due
#if  !defined(ARDUINO_LINUX) && !defined(SAM3X8)
void PrintlnClass::println(double data, int precesion)
{
    286c:	cf 92       	push	r12
    286e:	df 92       	push	r13
    2870:	ef 92       	push	r14
    2872:	ff 92       	push	r15
    2874:	0f 93       	push	r16
    2876:	1f 93       	push	r17
    2878:	cf 93       	push	r28
    287a:	df 93       	push	r29
    287c:	cd b7       	in	r28, 0x3d	; 61
    287e:	de b7       	in	r29, 0x3e	; 62
    2880:	a0 97       	sbiw	r28, 0x20	; 32
    2882:	0f b6       	in	r0, 0x3f	; 63
    2884:	f8 94       	cli
    2886:	de bf       	out	0x3e, r29	; 62
    2888:	0f be       	out	0x3f, r0	; 63
    288a:	cd bf       	out	0x3d, r28	; 61
    288c:	6c 01       	movw	r12, r24
    288e:	cb 01       	movw	r24, r22
    2890:	ba 01       	movw	r22, r20
	int i=0;
	char buffer[32]={'\0'};
    2892:	ae 01       	movw	r20, r28
    2894:	4f 5f       	subi	r20, 0xFF	; 255
    2896:	5f 4f       	sbci	r21, 0xFF	; 255
    2898:	7a 01       	movw	r14, r20
    289a:	30 e2       	ldi	r19, 0x20	; 32
    289c:	fa 01       	movw	r30, r20
    289e:	11 92       	st	Z+, r1
    28a0:	3a 95       	dec	r19
    28a2:	e9 f7       	brne	.-6      	; 0x289e <_ZN12PrintlnClass7printlnEdi+0x32>
	dtostrf(data,1,precesion,buffer);
    28a4:	8a 01       	movw	r16, r20
    28a6:	41 e0       	ldi	r20, 0x01	; 1
    28a8:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <dtostrf>

	while(buffer[i]!='\0' && i<32)i++;
    28ac:	f7 01       	movw	r30, r14
    28ae:	9f 01       	movw	r18, r30
    28b0:	2e 19       	sub	r18, r14
    28b2:	3f 09       	sbc	r19, r15
    28b4:	81 91       	ld	r24, Z+
    28b6:	81 11       	cpse	r24, r1
    28b8:	fa cf       	rjmp	.-12     	; 0x28ae <_ZN12PrintlnClass7printlnEdi+0x42>

	if(i+2>32)return;
    28ba:	2f 31       	cpi	r18, 0x1F	; 31
    28bc:	31 05       	cpc	r19, r1
    28be:	91 f0       	breq	.+36     	; 0x28e4 <_ZN12PrintlnClass7printlnEdi+0x78>
	buffer[i]='\r';
    28c0:	f7 01       	movw	r30, r14
    28c2:	e2 0f       	add	r30, r18
    28c4:	f3 1f       	adc	r31, r19
    28c6:	8d e0       	ldi	r24, 0x0D	; 13
    28c8:	80 83       	st	Z, r24
	buffer[i+1]='\n';
    28ca:	fe 01       	movw	r30, r28
    28cc:	e2 0f       	add	r30, r18
    28ce:	f3 1f       	adc	r31, r19
    28d0:	8a e0       	ldi	r24, 0x0A	; 10
    28d2:	82 83       	std	Z+2, r24	; 0x02
	buffer[i+2]='\0';
    28d4:	fe 01       	movw	r30, r28
    28d6:	e2 0f       	add	r30, r18
    28d8:	f3 1f       	adc	r31, r19
    28da:	13 82       	std	Z+3, r1	; 0x03

	print(buffer);
    28dc:	b7 01       	movw	r22, r14
    28de:	c6 01       	movw	r24, r12
    28e0:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <_ZN10PrintClass5printEPKc>

}
    28e4:	a0 96       	adiw	r28, 0x20	; 32
    28e6:	0f b6       	in	r0, 0x3f	; 63
    28e8:	f8 94       	cli
    28ea:	de bf       	out	0x3e, r29	; 62
    28ec:	0f be       	out	0x3f, r0	; 63
    28ee:	cd bf       	out	0x3d, r28	; 61
    28f0:	df 91       	pop	r29
    28f2:	cf 91       	pop	r28
    28f4:	1f 91       	pop	r17
    28f6:	0f 91       	pop	r16
    28f8:	ff 90       	pop	r15
    28fa:	ef 90       	pop	r14
    28fc:	df 90       	pop	r13
    28fe:	cf 90       	pop	r12
    2900:	08 95       	ret

00002902 <_ZN12ShieldParent11processDataEv>:
  OneSheeld.exitingACallback();
}

bool ShieldParent::isInACallback()
{
  return OneSheeld.isInACallback();
    2902:	08 95       	ret

00002904 <_ZN12ShieldParentC1Eh>:
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	32 e0       	ldi	r19, 0x02	; 2
    2908:	fc 01       	movw	r30, r24
    290a:	31 83       	std	Z+1, r19	; 0x01
    290c:	20 83       	st	Z, r18
    290e:	63 83       	std	Z+3, r22	; 0x03
    2910:	12 82       	std	Z+2, r1	; 0x02
    2912:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <_ZN14OneSheeldClass17addToShieldsArrayEP12ShieldParent>

00002916 <_ZN12ShieldParent11getShieldIdEv>:
    2916:	fc 01       	movw	r30, r24
    2918:	83 81       	ldd	r24, Z+3	; 0x03
    291a:	08 95       	ret

0000291c <_ZN12ShieldParent20setOneSheeldInstanceER14OneSheeldClass>:
}

void ShieldParent::setOneSheeldInstance(OneSheeldClass & instance)
{
	oneSheeldInstance=&instance;
    291c:	90 93 f9 04 	sts	0x04F9, r25
    2920:	80 93 f8 04 	sts	0x04F8, r24
	oneSheeldInstanceAvailable=true;
    2924:	81 e0       	ldi	r24, 0x01	; 1
    2926:	80 93 f7 04 	sts	0x04F7, r24
    292a:	08 95       	ret

0000292c <_ZN12ShieldParent22unSetOneSheeldInstanceEv>:
}

void ShieldParent::unSetOneSheeldInstance()
{
	oneSheeldInstance=NULL;
    292c:	10 92 f9 04 	sts	0x04F9, r1
    2930:	10 92 f8 04 	sts	0x04F8, r1
	oneSheeldInstanceAvailable=false;
    2934:	10 92 f7 04 	sts	0x04F7, r1
    2938:	08 95       	ret

0000293a <_ZN12ShieldParent20getOneSheeldInstanceEv>:
}

OneSheeldClass & ShieldParent::getOneSheeldInstance()
{
	if(oneSheeldInstanceAvailable)return *oneSheeldInstance;
    293a:	80 91 f7 04 	lds	r24, 0x04F7
    293e:	88 23       	and	r24, r24
    2940:	29 f0       	breq	.+10     	; 0x294c <_ZN12ShieldParent20getOneSheeldInstanceEv+0x12>
    2942:	80 91 f8 04 	lds	r24, 0x04F8
    2946:	90 91 f9 04 	lds	r25, 0x04F9
    294a:	08 95       	ret
	else return OneSheeld;
    294c:	85 e7       	ldi	r24, 0x75	; 117
    294e:	94 e0       	ldi	r25, 0x04	; 4
}
    2950:	08 95       	ret

00002952 <_ZN12ShieldParent12processFrameEv>:

void ShieldParent::processFrame()
{
    2952:	1f 93       	push	r17
    2954:	cf 93       	push	r28
    2956:	df 93       	push	r29
    2958:	ec 01       	movw	r28, r24
	if(shieldID!=getOneSheeldInstance().getShieldId())return;
    295a:	1b 81       	ldd	r17, Y+3	; 0x03
    295c:	0e 94 9d 14 	call	0x293a	; 0x293a <_ZN12ShieldParent20getOneSheeldInstanceEv>
    2960:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <_ZN14OneSheeldClass11getShieldIdEv>
    2964:	18 13       	cpse	r17, r24
    2966:	28 c0       	rjmp	.+80     	; 0x29b8 <_ZN12ShieldParent12processFrameEv+0x66>
	byte functionID = getOneSheeldInstance().getFunctionId();
    2968:	ce 01       	movw	r24, r28
    296a:	0e 94 9d 14 	call	0x293a	; 0x293a <_ZN12ShieldParent20getOneSheeldInstanceEv>
    296e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <_ZN14OneSheeldClass13getFunctionIdEv>

	if(functionID == CHECK_SELECTED)
    2972:	8f 3f       	cpi	r24, 0xFF	; 255
    2974:	b9 f4       	brne	.+46     	; 0x29a4 <_ZN12ShieldParent12processFrameEv+0x52>
	{
		if(isCallBackSet && !isInACallback())
    2976:	8a 81       	ldd	r24, Y+2	; 0x02
    2978:	88 23       	and	r24, r24
    297a:	f1 f0       	breq	.+60     	; 0x29b8 <_ZN12ShieldParent12processFrameEv+0x66>
  OneSheeld.exitingACallback();
}

bool ShieldParent::isInACallback()
{
  return OneSheeld.isInACallback();
    297c:	85 e7       	ldi	r24, 0x75	; 117
    297e:	94 e0       	ldi	r25, 0x04	; 4
    2980:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <_ZN14OneSheeldClass13isInACallbackEv>
	if(shieldID!=getOneSheeldInstance().getShieldId())return;
	byte functionID = getOneSheeldInstance().getFunctionId();

	if(functionID == CHECK_SELECTED)
	{
		if(isCallBackSet && !isInACallback())
    2984:	81 11       	cpse	r24, r1
    2986:	18 c0       	rjmp	.+48     	; 0x29b8 <_ZN12ShieldParent12processFrameEv+0x66>
	return shieldID;
}

void ShieldParent::enteringACallback()
{
  OneSheeld.enteringACallback();
    2988:	85 e7       	ldi	r24, 0x75	; 117
    298a:	94 e0       	ldi	r25, 0x04	; 4
    298c:	0e 94 ef 11 	call	0x23de	; 0x23de <_ZN14OneSheeldClass17enteringACallbackEv>
	if(functionID == CHECK_SELECTED)
	{
		if(isCallBackSet && !isInACallback())
		{
				enteringACallback();
				(*selectedCallBack)();
    2990:	ec 81       	ldd	r30, Y+4	; 0x04
    2992:	fd 81       	ldd	r31, Y+5	; 0x05
    2994:	09 95       	icall
  OneSheeld.enteringACallback();
}

void ShieldParent::exitingACallback()
{
  OneSheeld.exitingACallback();
    2996:	85 e7       	ldi	r24, 0x75	; 117
    2998:	94 e0       	ldi	r25, 0x04	; 4
				(*selectedCallBack)();
				exitingACallback();
		}
	}
	else processData();
    299a:	df 91       	pop	r29
    299c:	cf 91       	pop	r28
    299e:	1f 91       	pop	r17
  OneSheeld.enteringACallback();
}

void ShieldParent::exitingACallback()
{
  OneSheeld.exitingACallback();
    29a0:	0c 94 0d 12 	jmp	0x241a	; 0x241a <_ZN14OneSheeldClass16exitingACallbackEv>
				enteringACallback();
				(*selectedCallBack)();
				exitingACallback();
		}
	}
	else processData();
    29a4:	e8 81       	ld	r30, Y
    29a6:	f9 81       	ldd	r31, Y+1	; 0x01
    29a8:	02 80       	ldd	r0, Z+2	; 0x02
    29aa:	f3 81       	ldd	r31, Z+3	; 0x03
    29ac:	e0 2d       	mov	r30, r0
    29ae:	ce 01       	movw	r24, r28
    29b0:	df 91       	pop	r29
    29b2:	cf 91       	pop	r28
    29b4:	1f 91       	pop	r17
				enteringACallback();
				(*selectedCallBack)();
				exitingACallback();
		}
	}
	else processData();
    29b6:	09 94       	ijmp
    29b8:	df 91       	pop	r29
    29ba:	cf 91       	pop	r28
    29bc:	1f 91       	pop	r17
    29be:	08 95       	ret

000029c0 <_ZN14TerminalShield11processDataEv>:
  return count;
}

//Terminal Incomming Data processing
void TerminalShield::processData()
{
    29c0:	6f 92       	push	r6
    29c2:	7f 92       	push	r7
    29c4:	8f 92       	push	r8
    29c6:	9f 92       	push	r9
    29c8:	af 92       	push	r10
    29ca:	bf 92       	push	r11
    29cc:	cf 92       	push	r12
    29ce:	df 92       	push	r13
    29d0:	ef 92       	push	r14
    29d2:	ff 92       	push	r15
    29d4:	0f 93       	push	r16
    29d6:	1f 93       	push	r17
    29d8:	cf 93       	push	r28
    29da:	df 93       	push	r29
    29dc:	ec 01       	movw	r28, r24
	byte functionID = getOneSheeldInstance().getFunctionId();
    29de:	0e 94 9d 14 	call	0x293a	; 0x293a <_ZN12ShieldParent20getOneSheeldInstanceEv>
    29e2:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <_ZN14OneSheeldClass13getFunctionIdEv>
    29e6:	18 2f       	mov	r17, r24
	byte dataLength = getOneSheeldInstance().getArgumentLength(0);
    29e8:	ce 01       	movw	r24, r28
    29ea:	0e 94 9d 14 	call	0x293a	; 0x293a <_ZN12ShieldParent20getOneSheeldInstanceEv>
    29ee:	60 e0       	ldi	r22, 0x00	; 0
    29f0:	0e 94 09 0f 	call	0x1e12	; 0x1e12 <_ZN14OneSheeldClass17getArgumentLengthEh>
	if(functionID == TERMINAL_READ)
    29f4:	11 30       	cpi	r17, 0x01	; 1
    29f6:	09 f0       	breq	.+2      	; 0x29fa <_ZN14TerminalShield11processDataEv+0x3a>
    29f8:	46 c0       	rjmp	.+140    	; 0x2a86 <_ZN14TerminalShield11processDataEv+0xc6>
    29fa:	00 e0       	ldi	r16, 0x00	; 0
    29fc:	10 e0       	ldi	r17, 0x00	; 0
	{
			for (int j=0; j<dataLength; j++)
    29fe:	c8 2e       	mov	r12, r24
    2a00:	d1 2c       	mov	r13, r1
public:
  CircularBuffer() :
    wp_(buf_), rp_(buf_), tail_(buf_+Size),  remain_(0) {}
  ~CircularBuffer() {}
  void push(T value) {
    if(remain_==Size)return;
    2a02:	5e 01       	movw	r10, r28
    2a04:	ff e4       	ldi	r31, 0x4F	; 79
    2a06:	af 0e       	add	r10, r31
    2a08:	b1 1c       	adc	r11, r1
    *wp_++ = value;
    2a0a:	7e 01       	movw	r14, r28
    2a0c:	89 e4       	ldi	r24, 0x49	; 73
    2a0e:	e8 0e       	add	r14, r24
    2a10:	f1 1c       	adc	r15, r1
    remain_++;
    if (wp_ == tail_) wp_ = buf_;
    2a12:	4e 01       	movw	r8, r28
    2a14:	ad e4       	ldi	r26, 0x4D	; 77
    2a16:	8a 0e       	add	r8, r26
    2a18:	91 1c       	adc	r9, r1
    2a1a:	3e 01       	movw	r6, r28
    2a1c:	b9 e0       	ldi	r27, 0x09	; 9
    2a1e:	6b 0e       	add	r6, r27
    2a20:	71 1c       	adc	r7, r1
    2a22:	0c 15       	cp	r16, r12
    2a24:	1d 05       	cpc	r17, r13
    2a26:	7c f5       	brge	.+94     	; 0x2a86 <_ZN14TerminalShield11processDataEv+0xc6>
			{
				buffer.push(getOneSheeldInstance().getArgumentData(0)[j]);
    2a28:	ce 01       	movw	r24, r28
    2a2a:	0e 94 9d 14 	call	0x293a	; 0x293a <_ZN12ShieldParent20getOneSheeldInstanceEv>
    2a2e:	60 e0       	ldi	r22, 0x00	; 0
    2a30:	0e 94 12 0f 	call	0x1e24	; 0x1e24 <_ZN14OneSheeldClass15getArgumentDataEh>
    2a34:	80 0f       	add	r24, r16
    2a36:	91 1f       	adc	r25, r17
    2a38:	dc 01       	movw	r26, r24
    2a3a:	8c 91       	ld	r24, X
public:
  CircularBuffer() :
    wp_(buf_), rp_(buf_), tail_(buf_+Size),  remain_(0) {}
  ~CircularBuffer() {}
  void push(T value) {
    if(remain_==Size)return;
    2a3c:	f5 01       	movw	r30, r10
    2a3e:	20 81       	ld	r18, Z
    2a40:	31 81       	ldd	r19, Z+1	; 0x01
    2a42:	20 34       	cpi	r18, 0x40	; 64
    2a44:	31 05       	cpc	r19, r1
    2a46:	e1 f0       	breq	.+56     	; 0x2a80 <_ZN14TerminalShield11processDataEv+0xc0>
    *wp_++ = value;
    2a48:	d7 01       	movw	r26, r14
    2a4a:	ed 91       	ld	r30, X+
    2a4c:	fc 91       	ld	r31, X
    2a4e:	11 97       	sbiw	r26, 0x01	; 1
    2a50:	9f 01       	movw	r18, r30
    2a52:	2f 5f       	subi	r18, 0xFF	; 255
    2a54:	3f 4f       	sbci	r19, 0xFF	; 255
    2a56:	11 96       	adiw	r26, 0x01	; 1
    2a58:	3c 93       	st	X, r19
    2a5a:	2e 93       	st	-X, r18
    2a5c:	80 83       	st	Z, r24
    remain_++;
    2a5e:	f5 01       	movw	r30, r10
    2a60:	80 81       	ld	r24, Z
    2a62:	91 81       	ldd	r25, Z+1	; 0x01
    2a64:	01 96       	adiw	r24, 0x01	; 1
    2a66:	91 83       	std	Z+1, r25	; 0x01
    2a68:	80 83       	st	Z, r24
    if (wp_ == tail_) wp_ = buf_;
    2a6a:	2d 91       	ld	r18, X+
    2a6c:	3c 91       	ld	r19, X
    2a6e:	d4 01       	movw	r26, r8
    2a70:	8d 91       	ld	r24, X+
    2a72:	9c 91       	ld	r25, X
    2a74:	28 17       	cp	r18, r24
    2a76:	39 07       	cpc	r19, r25
    2a78:	19 f4       	brne	.+6      	; 0x2a80 <_ZN14TerminalShield11processDataEv+0xc0>
    2a7a:	f7 01       	movw	r30, r14
    2a7c:	71 82       	std	Z+1, r7	; 0x01
    2a7e:	60 82       	st	Z, r6
{
	byte functionID = getOneSheeldInstance().getFunctionId();
	byte dataLength = getOneSheeldInstance().getArgumentLength(0);
	if(functionID == TERMINAL_READ)
	{
			for (int j=0; j<dataLength; j++)
    2a80:	0f 5f       	subi	r16, 0xFF	; 255
    2a82:	1f 4f       	sbci	r17, 0xFF	; 255
    2a84:	ce cf       	rjmp	.-100    	; 0x2a22 <_ZN14TerminalShield11processDataEv+0x62>
			{
				buffer.push(getOneSheeldInstance().getArgumentData(0)[j]);
			}
	}
}
    2a86:	df 91       	pop	r29
    2a88:	cf 91       	pop	r28
    2a8a:	1f 91       	pop	r17
    2a8c:	0f 91       	pop	r16
    2a8e:	ff 90       	pop	r15
    2a90:	ef 90       	pop	r14
    2a92:	df 90       	pop	r13
    2a94:	cf 90       	pop	r12
    2a96:	bf 90       	pop	r11
    2a98:	af 90       	pop	r10
    2a9a:	9f 90       	pop	r9
    2a9c:	8f 90       	pop	r8
    2a9e:	7f 90       	pop	r7
    2aa0:	6f 90       	pop	r6
    2aa2:	08 95       	ret

00002aa4 <_ZN14TerminalShieldC1Ev>:
#define FROM_ONESHEELD_LIBRARY
#include "OneSheeld.h"
#include "TerminalShield.h"

//Constructor
TerminalShield::TerminalShield():PrintlnClass(TERMINAL_ID,TERMINAL_WRITE,TERMINAL_PRINT),ShieldParent(TERMINAL_ID)
    2aa4:	cf 93       	push	r28
    2aa6:	df 93       	push	r29
    2aa8:	ec 01       	movw	r28, r24
    2aaa:	22 e0       	ldi	r18, 0x02	; 2
    2aac:	41 e0       	ldi	r20, 0x01	; 1
    2aae:	66 e2       	ldi	r22, 0x26	; 38
    2ab0:	06 96       	adiw	r24, 0x06	; 6
    2ab2:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <_ZN12PrintlnClassC1Ehhh>
    2ab6:	66 e2       	ldi	r22, 0x26	; 38
    2ab8:	ce 01       	movw	r24, r28
    2aba:	0e 94 82 14 	call	0x2904	; 0x2904 <_ZN12ShieldParentC1Eh>
    2abe:	88 e0       	ldi	r24, 0x08	; 8
    2ac0:	92 e0       	ldi	r25, 0x02	; 2
    2ac2:	99 83       	std	Y+1, r25	; 0x01
    2ac4:	88 83       	st	Y, r24

template <typename T, uint16_t Size>
class CircularBuffer {
public:
  CircularBuffer() :
    wp_(buf_), rp_(buf_), tail_(buf_+Size),  remain_(0) {}
    2ac6:	ce 01       	movw	r24, r28
    2ac8:	09 96       	adiw	r24, 0x09	; 9
    2aca:	fe 01       	movw	r30, r28
    2acc:	e7 5b       	subi	r30, 0xB7	; 183
    2ace:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad0:	91 83       	std	Z+1, r25	; 0x01
    2ad2:	80 83       	st	Z, r24
    2ad4:	de 01       	movw	r26, r28
    2ad6:	a5 5b       	subi	r26, 0xB5	; 181
    2ad8:	bf 4f       	sbci	r27, 0xFF	; 255
    2ada:	11 96       	adiw	r26, 0x01	; 1
    2adc:	9c 93       	st	X, r25
    2ade:	8e 93       	st	-X, r24
    2ae0:	12 96       	adiw	r26, 0x02	; 2
    2ae2:	ed 93       	st	X+, r30
    2ae4:	fc 93       	st	X, r31
    2ae6:	c1 5b       	subi	r28, 0xB1	; 177
    2ae8:	df 4f       	sbci	r29, 0xFF	; 255
    2aea:	19 82       	std	Y+1, r1	; 0x01
    2aec:	18 82       	st	Y, r1
{}
    2aee:	df 91       	pop	r29
    2af0:	cf 91       	pop	r28
    2af2:	08 95       	ret

00002af4 <_ZN11HttpRequest13sendInitFrameEPKc>:
		free (url);
	}
}

void HttpRequest::sendInitFrame(const char * _url)
{
    2af4:	cf 92       	push	r12
    2af6:	df 92       	push	r13
    2af8:	ef 92       	push	r14
    2afa:	ff 92       	push	r15
    2afc:	0f 93       	push	r16
    2afe:	1f 93       	push	r17
    2b00:	cf 93       	push	r28
    2b02:	df 93       	push	r29
	//Check length of string 
	int _urlLength = strlen(_url);
    2b04:	fb 01       	movw	r30, r22
    2b06:	01 90       	ld	r0, Z+
    2b08:	00 20       	and	r0, r0
    2b0a:	e9 f7       	brne	.-6      	; 0x2b06 <_ZN11HttpRequest13sendInitFrameEPKc+0x12>
    2b0c:	31 97       	sbiw	r30, 0x01	; 1
    2b0e:	ef 01       	movw	r28, r30
    2b10:	c6 1b       	sub	r28, r22
    2b12:	d7 0b       	sbc	r29, r23
	if(!_urlLength) return;
    2b14:	d9 f1       	breq	.+118    	; 0x2b8c <_ZN11HttpRequest13sendInitFrameEPKc+0x98>
    2b16:	7b 01       	movw	r14, r22
    2b18:	6c 01       	movw	r12, r24
	OneSheeld.sendShieldFrame(INTERNET_ID,0,HTTP_REQUEST_URL,2,new FunctionArg(2,(byte*)localRequestId),
														  new FunctionArg(_urlLength,(byte*)_url));
    2b1a:	84 e0       	ldi	r24, 0x04	; 4
    2b1c:	90 e0       	ldi	r25, 0x00	; 0
    2b1e:	0e 94 99 18 	call	0x3132	; 0x3132 <_Znwj>
    2b22:	8c 01       	movw	r16, r24
	byte * data;
	bool saveData;
public:
	FunctionArg(int l ,byte * d, bool _saveData=false)
	{
		saveData=_saveData;
    2b24:	fc 01       	movw	r30, r24
    2b26:	13 82       	std	Z+3, r1	; 0x03
		length=(l>0xff)?0xff:l;
    2b28:	9e 01       	movw	r18, r28
    2b2a:	cf 3f       	cpi	r28, 0xFF	; 255
    2b2c:	d1 05       	cpc	r29, r1
    2b2e:	19 f0       	breq	.+6      	; 0x2b36 <_ZN11HttpRequest13sendInitFrameEPKc+0x42>
    2b30:	14 f0       	brlt	.+4      	; 0x2b36 <_ZN11HttpRequest13sendInitFrameEPKc+0x42>
    2b32:	2f ef       	ldi	r18, 0xFF	; 255
    2b34:	30 e0       	ldi	r19, 0x00	; 0
    2b36:	f8 01       	movw	r30, r16
    2b38:	20 83       	st	Z, r18
			data=(byte *)malloc(sizeof(byte)*length);
			memcpy(data,d,length);
		}
		else
		{
			data=d;
    2b3a:	f2 82       	std	Z+2, r15	; 0x02
    2b3c:	e1 82       	std	Z+1, r14	; 0x01
    2b3e:	84 e0       	ldi	r24, 0x04	; 4
    2b40:	90 e0       	ldi	r25, 0x00	; 0
    2b42:	0e 94 99 18 	call	0x3132	; 0x3132 <_Znwj>
    2b46:	fc 01       	movw	r30, r24
	byte * data;
	bool saveData;
public:
	FunctionArg(int l ,byte * d, bool _saveData=false)
	{
		saveData=_saveData;
    2b48:	13 82       	std	Z+3, r1	; 0x03
		length=(l>0xff)?0xff:l;
    2b4a:	82 e0       	ldi	r24, 0x02	; 2
    2b4c:	80 83       	st	Z, r24
void HttpRequest::sendInitFrame(const char * _url)
{
	//Check length of string 
	int _urlLength = strlen(_url);
	if(!_urlLength) return;
	OneSheeld.sendShieldFrame(INTERNET_ID,0,HTTP_REQUEST_URL,2,new FunctionArg(2,(byte*)localRequestId),
    2b4e:	96 01       	movw	r18, r12
    2b50:	2d 5f       	subi	r18, 0xFD	; 253
    2b52:	3f 4f       	sbci	r19, 0xFF	; 255
			data=(byte *)malloc(sizeof(byte)*length);
			memcpy(data,d,length);
		}
		else
		{
			data=d;
    2b54:	32 83       	std	Z+2, r19	; 0x02
    2b56:	21 83       	std	Z+1, r18	; 0x01
														  new FunctionArg(_urlLength,(byte*)_url));
    2b58:	1f 93       	push	r17
    2b5a:	0f 93       	push	r16
    2b5c:	ff 93       	push	r31
    2b5e:	ef 93       	push	r30
    2b60:	8f 93       	push	r24
    2b62:	c1 e0       	ldi	r28, 0x01	; 1
    2b64:	cf 93       	push	r28
    2b66:	1f 92       	push	r1
    2b68:	89 e2       	ldi	r24, 0x29	; 41
    2b6a:	8f 93       	push	r24
    2b6c:	85 e7       	ldi	r24, 0x75	; 117
    2b6e:	94 e0       	ldi	r25, 0x04	; 4
    2b70:	9f 93       	push	r25
    2b72:	8f 93       	push	r24
    2b74:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>
	isInitFrameSent=true;
    2b78:	f6 01       	movw	r30, r12
    2b7a:	c0 83       	st	Z, r28
    2b7c:	8d b7       	in	r24, 0x3d	; 61
    2b7e:	9e b7       	in	r25, 0x3e	; 62
    2b80:	0a 96       	adiw	r24, 0x0a	; 10
    2b82:	0f b6       	in	r0, 0x3f	; 63
    2b84:	f8 94       	cli
    2b86:	9e bf       	out	0x3e, r25	; 62
    2b88:	0f be       	out	0x3f, r0	; 63
    2b8a:	8d bf       	out	0x3d, r24	; 61
}
    2b8c:	df 91       	pop	r29
    2b8e:	cf 91       	pop	r28
    2b90:	1f 91       	pop	r17
    2b92:	0f 91       	pop	r16
    2b94:	ff 90       	pop	r15
    2b96:	ef 90       	pop	r14
    2b98:	df 90       	pop	r13
    2b9a:	cf 90       	pop	r12
    2b9c:	08 95       	ret

00002b9e <_ZN11HttpRequest13sendInitFrameEv>:
		sendInitFrame(_url);
	}
}
// #endif
void HttpRequest::sendInitFrame()
{
    2b9e:	cf 93       	push	r28
    2ba0:	df 93       	push	r29
	if(!isInitFrameSent)
    2ba2:	fc 01       	movw	r30, r24
    2ba4:	20 81       	ld	r18, Z
    2ba6:	21 11       	cpse	r18, r1
    2ba8:	0b c0       	rjmp	.+22     	; 0x2bc0 <_ZN11HttpRequest13sendInitFrameEv+0x22>
    2baa:	ec 01       	movw	r28, r24
	{
		sendInitFrame(url);
    2bac:	61 81       	ldd	r22, Z+1	; 0x01
    2bae:	72 81       	ldd	r23, Z+2	; 0x02
    2bb0:	0e 94 7a 15 	call	0x2af4	; 0x2af4 <_ZN11HttpRequest13sendInitFrameEPKc>
		free (url);
    2bb4:	89 81       	ldd	r24, Y+1	; 0x01
    2bb6:	9a 81       	ldd	r25, Y+2	; 0x02
	}
}
    2bb8:	df 91       	pop	r29
    2bba:	cf 91       	pop	r28
void HttpRequest::sendInitFrame()
{
	if(!isInitFrameSent)
	{
		sendInitFrame(url);
		free (url);
    2bbc:	0c 94 a5 1e 	jmp	0x3d4a	; 0x3d4a <free>
	}
}
    2bc0:	df 91       	pop	r29
    2bc2:	cf 91       	pop	r28
    2bc4:	08 95       	ret

00002bc6 <_ZN10PrintClassC1Ehhh>:
{
	char stringPointer[11];
	snprintf(stringPointer,11,"%lu",data);
	
	OneSheeld.sendShieldFrame(shieldId,0,print_fn_id,1,new FunctionArg(strlen(stringPointer),(byte *)stringPointer));	
}
    2bc6:	fc 01       	movw	r30, r24
    2bc8:	62 83       	std	Z+2, r22	; 0x02
    2bca:	20 83       	st	Z, r18
    2bcc:	41 83       	std	Z+1, r20	; 0x01
    2bce:	08 95       	ret

00002bd0 <_ZN10PrintClass5printEPKc>:
//Print string
void PrintClass::print(const char * stringData)
{
    2bd0:	ef 92       	push	r14
    2bd2:	ff 92       	push	r15
    2bd4:	0f 93       	push	r16
    2bd6:	1f 93       	push	r17
    2bd8:	cf 93       	push	r28
    2bda:	df 93       	push	r29
	//Check length of string 
	int stringDataLength = strlen(stringData);
    2bdc:	fb 01       	movw	r30, r22
    2bde:	01 90       	ld	r0, Z+
    2be0:	00 20       	and	r0, r0
    2be2:	e9 f7       	brne	.-6      	; 0x2bde <_ZN10PrintClass5printEPKc+0xe>
    2be4:	31 97       	sbiw	r30, 0x01	; 1
    2be6:	ef 01       	movw	r28, r30
    2be8:	c6 1b       	sub	r28, r22
    2bea:	d7 0b       	sbc	r29, r23
	if(!stringDataLength) return;
    2bec:	51 f1       	breq	.+84     	; 0x2c42 <_ZN10PrintClass5printEPKc+0x72>
    2bee:	8b 01       	movw	r16, r22
    2bf0:	7c 01       	movw	r14, r24
	OneSheeld.sendShieldFrame(shieldId,0,print_fn_id,1,new FunctionArg(stringDataLength,(byte*)stringData));	
    2bf2:	84 e0       	ldi	r24, 0x04	; 4
    2bf4:	90 e0       	ldi	r25, 0x00	; 0
    2bf6:	0e 94 99 18 	call	0x3132	; 0x3132 <_Znwj>
    2bfa:	fc 01       	movw	r30, r24
	byte * data;
	bool saveData;
public:
	FunctionArg(int l ,byte * d, bool _saveData=false)
	{
		saveData=_saveData;
    2bfc:	13 82       	std	Z+3, r1	; 0x03
		length=(l>0xff)?0xff:l;
    2bfe:	9e 01       	movw	r18, r28
    2c00:	cf 3f       	cpi	r28, 0xFF	; 255
    2c02:	d1 05       	cpc	r29, r1
    2c04:	19 f0       	breq	.+6      	; 0x2c0c <_ZN10PrintClass5printEPKc+0x3c>
    2c06:	14 f0       	brlt	.+4      	; 0x2c0c <_ZN10PrintClass5printEPKc+0x3c>
    2c08:	2f ef       	ldi	r18, 0xFF	; 255
    2c0a:	30 e0       	ldi	r19, 0x00	; 0
    2c0c:	20 83       	st	Z, r18
			data=(byte *)malloc(sizeof(byte)*length);
			memcpy(data,d,length);
		}
		else
		{
			data=d;
    2c0e:	12 83       	std	Z+2, r17	; 0x02
    2c10:	01 83       	std	Z+1, r16	; 0x01
    2c12:	ff 93       	push	r31
    2c14:	ef 93       	push	r30
    2c16:	81 e0       	ldi	r24, 0x01	; 1
    2c18:	8f 93       	push	r24
    2c1a:	f7 01       	movw	r30, r14
    2c1c:	80 81       	ld	r24, Z
    2c1e:	8f 93       	push	r24
    2c20:	1f 92       	push	r1
    2c22:	82 81       	ldd	r24, Z+2	; 0x02
    2c24:	8f 93       	push	r24
    2c26:	85 e7       	ldi	r24, 0x75	; 117
    2c28:	94 e0       	ldi	r25, 0x04	; 4
    2c2a:	9f 93       	push	r25
    2c2c:	8f 93       	push	r24
    2c2e:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZN14OneSheeldClass15sendShieldFrameEhhhhz>
    2c32:	8d b7       	in	r24, 0x3d	; 61
    2c34:	9e b7       	in	r25, 0x3e	; 62
    2c36:	08 96       	adiw	r24, 0x08	; 8
    2c38:	0f b6       	in	r0, 0x3f	; 63
    2c3a:	f8 94       	cli
    2c3c:	9e bf       	out	0x3e, r25	; 62
    2c3e:	0f be       	out	0x3f, r0	; 63
    2c40:	8d bf       	out	0x3d, r24	; 61
}
    2c42:	df 91       	pop	r29
    2c44:	cf 91       	pop	r28
    2c46:	1f 91       	pop	r17
    2c48:	0f 91       	pop	r16
    2c4a:	ff 90       	pop	r15
    2c4c:	ef 90       	pop	r14
    2c4e:	08 95       	ret

00002c50 <_ZN14SoftwareSerial4readEv>:
uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
  else
    return 1;
}
    2c50:	20 91 3c 05 	lds	r18, 0x053C
    2c54:	30 91 3d 05 	lds	r19, 0x053D
    2c58:	28 17       	cp	r18, r24
    2c5a:	39 07       	cpc	r19, r25
    2c5c:	b9 f4       	brne	.+46     	; 0x2c8c <_ZN14SoftwareSerial4readEv+0x3c>
    2c5e:	90 91 fa 04 	lds	r25, 0x04FA
    2c62:	80 91 fb 04 	lds	r24, 0x04FB
    2c66:	98 17       	cp	r25, r24
    2c68:	89 f0       	breq	.+34     	; 0x2c8c <_ZN14SoftwareSerial4readEv+0x3c>
    2c6a:	e0 91 fa 04 	lds	r30, 0x04FA
    2c6e:	f0 e0       	ldi	r31, 0x00	; 0
    2c70:	e4 50       	subi	r30, 0x04	; 4
    2c72:	fb 4f       	sbci	r31, 0xFB	; 251
    2c74:	80 81       	ld	r24, Z
    2c76:	20 91 fa 04 	lds	r18, 0x04FA
    2c7a:	30 e0       	ldi	r19, 0x00	; 0
    2c7c:	2f 5f       	subi	r18, 0xFF	; 255
    2c7e:	3f 4f       	sbci	r19, 0xFF	; 255
    2c80:	2f 73       	andi	r18, 0x3F	; 63
    2c82:	33 27       	eor	r19, r19
    2c84:	20 93 fa 04 	sts	0x04FA, r18
    2c88:	90 e0       	ldi	r25, 0x00	; 0
    2c8a:	08 95       	ret
    2c8c:	8f ef       	ldi	r24, 0xFF	; 255
    2c8e:	9f ef       	ldi	r25, 0xFF	; 255
    2c90:	08 95       	ret

00002c92 <_ZN14SoftwareSerial5writeEh>:
    2c92:	1f 93       	push	r17
    2c94:	cf 93       	push	r28
    2c96:	df 93       	push	r29
    2c98:	dc 01       	movw	r26, r24
    2c9a:	5c 96       	adiw	r26, 0x1c	; 28
    2c9c:	2d 91       	ld	r18, X+
    2c9e:	3c 91       	ld	r19, X
    2ca0:	5d 97       	sbiw	r26, 0x1d	; 29
    2ca2:	21 15       	cp	r18, r1
    2ca4:	31 05       	cpc	r19, r1
    2ca6:	39 f4       	brne	.+14     	; 0x2cb6 <_ZN14SoftwareSerial5writeEh+0x24>
    2ca8:	81 e0       	ldi	r24, 0x01	; 1
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	13 96       	adiw	r26, 0x03	; 3
    2cae:	9c 93       	st	X, r25
    2cb0:	8e 93       	st	-X, r24
    2cb2:	12 97       	sbiw	r26, 0x02	; 2
    2cb4:	3d c0       	rjmp	.+122    	; 0x2d30 <_ZN14SoftwareSerial5writeEh+0x9e>
    2cb6:	51 96       	adiw	r26, 0x11	; 17
    2cb8:	ed 91       	ld	r30, X+
    2cba:	fc 91       	ld	r31, X
    2cbc:	52 97       	sbiw	r26, 0x12	; 18
    2cbe:	50 96       	adiw	r26, 0x10	; 16
    2cc0:	9c 91       	ld	r25, X
    2cc2:	50 97       	sbiw	r26, 0x10	; 16
    2cc4:	89 2f       	mov	r24, r25
    2cc6:	80 95       	com	r24
    2cc8:	1f b7       	in	r17, 0x3f	; 63
    2cca:	5e 96       	adiw	r26, 0x1e	; 30
    2ccc:	4c 91       	ld	r20, X
    2cce:	5e 97       	sbiw	r26, 0x1e	; 30
    2cd0:	41 fb       	bst	r20, 1
    2cd2:	77 27       	eor	r23, r23
    2cd4:	70 f9       	bld	r23, 0
    2cd6:	41 fd       	sbrc	r20, 1
    2cd8:	60 95       	com	r22
    2cda:	f8 94       	cli
    2cdc:	40 81       	ld	r20, Z
    2cde:	77 23       	and	r23, r23
    2ce0:	11 f0       	breq	.+4      	; 0x2ce6 <_ZN14SoftwareSerial5writeEh+0x54>
    2ce2:	49 2b       	or	r20, r25
    2ce4:	01 c0       	rjmp	.+2      	; 0x2ce8 <_ZN14SoftwareSerial5writeEh+0x56>
    2ce6:	48 23       	and	r20, r24
    2ce8:	40 83       	st	Z, r20
    2cea:	e9 01       	movw	r28, r18
    2cec:	21 97       	sbiw	r28, 0x01	; 1
    2cee:	f1 f7       	brne	.-4      	; 0x2cec <_ZN14SoftwareSerial5writeEh+0x5a>
    2cf0:	48 e0       	ldi	r20, 0x08	; 8
    2cf2:	50 81       	ld	r21, Z
    2cf4:	60 ff       	sbrs	r22, 0
    2cf6:	02 c0       	rjmp	.+4      	; 0x2cfc <_ZN14SoftwareSerial5writeEh+0x6a>
    2cf8:	59 2b       	or	r21, r25
    2cfa:	01 c0       	rjmp	.+2      	; 0x2cfe <_ZN14SoftwareSerial5writeEh+0x6c>
    2cfc:	58 23       	and	r21, r24
    2cfe:	50 83       	st	Z, r21
    2d00:	e9 01       	movw	r28, r18
    2d02:	21 97       	sbiw	r28, 0x01	; 1
    2d04:	f1 f7       	brne	.-4      	; 0x2d02 <_ZN14SoftwareSerial5writeEh+0x70>
    2d06:	66 95       	lsr	r22
    2d08:	41 50       	subi	r20, 0x01	; 1
    2d0a:	99 f7       	brne	.-26     	; 0x2cf2 <_ZN14SoftwareSerial5writeEh+0x60>
    2d0c:	77 23       	and	r23, r23
    2d0e:	21 f0       	breq	.+8      	; 0x2d18 <_ZN14SoftwareSerial5writeEh+0x86>
    2d10:	90 81       	ld	r25, Z
    2d12:	89 23       	and	r24, r25
    2d14:	80 83       	st	Z, r24
    2d16:	03 c0       	rjmp	.+6      	; 0x2d1e <_ZN14SoftwareSerial5writeEh+0x8c>
    2d18:	80 81       	ld	r24, Z
    2d1a:	98 2b       	or	r25, r24
    2d1c:	90 83       	st	Z, r25
    2d1e:	1f bf       	out	0x3f, r17	; 63
    2d20:	5c 96       	adiw	r26, 0x1c	; 28
    2d22:	8d 91       	ld	r24, X+
    2d24:	9c 91       	ld	r25, X
    2d26:	5d 97       	sbiw	r26, 0x1d	; 29
    2d28:	01 97       	sbiw	r24, 0x01	; 1
    2d2a:	f1 f7       	brne	.-4      	; 0x2d28 <_ZN14SoftwareSerial5writeEh+0x96>
    2d2c:	21 e0       	ldi	r18, 0x01	; 1
    2d2e:	30 e0       	ldi	r19, 0x00	; 0
    2d30:	c9 01       	movw	r24, r18
    2d32:	df 91       	pop	r29
    2d34:	cf 91       	pop	r28
    2d36:	1f 91       	pop	r17
    2d38:	08 95       	ret

00002d3a <_ZN14SoftwareSerial5flushEv>:
    2d3a:	08 95       	ret

00002d3c <_ZN14SoftwareSerial4peekEv>:
    2d3c:	20 91 3c 05 	lds	r18, 0x053C
    2d40:	30 91 3d 05 	lds	r19, 0x053D
    2d44:	28 17       	cp	r18, r24
    2d46:	39 07       	cpc	r19, r25
    2d48:	71 f4       	brne	.+28     	; 0x2d66 <_ZN14SoftwareSerial4peekEv+0x2a>
    2d4a:	90 91 fa 04 	lds	r25, 0x04FA
    2d4e:	80 91 fb 04 	lds	r24, 0x04FB
    2d52:	98 17       	cp	r25, r24
    2d54:	41 f0       	breq	.+16     	; 0x2d66 <_ZN14SoftwareSerial4peekEv+0x2a>
    2d56:	e0 91 fa 04 	lds	r30, 0x04FA
    2d5a:	f0 e0       	ldi	r31, 0x00	; 0
    2d5c:	e4 50       	subi	r30, 0x04	; 4
    2d5e:	fb 4f       	sbci	r31, 0xFB	; 251
    2d60:	80 81       	ld	r24, Z
    2d62:	90 e0       	ldi	r25, 0x00	; 0
    2d64:	08 95       	ret
    2d66:	8f ef       	ldi	r24, 0xFF	; 255
    2d68:	9f ef       	ldi	r25, 0xFF	; 255
    2d6a:	08 95       	ret

00002d6c <_ZN14SoftwareSerial9availableEv>:
    2d6c:	20 91 3c 05 	lds	r18, 0x053C
    2d70:	30 91 3d 05 	lds	r19, 0x053D
    2d74:	28 17       	cp	r18, r24
    2d76:	39 07       	cpc	r19, r25
    2d78:	71 f4       	brne	.+28     	; 0x2d96 <_ZN14SoftwareSerial9availableEv+0x2a>
    2d7a:	80 91 fb 04 	lds	r24, 0x04FB
    2d7e:	20 91 fa 04 	lds	r18, 0x04FA
    2d82:	90 e0       	ldi	r25, 0x00	; 0
    2d84:	80 5c       	subi	r24, 0xC0	; 192
    2d86:	9f 4f       	sbci	r25, 0xFF	; 255
    2d88:	82 1b       	sub	r24, r18
    2d8a:	91 09       	sbc	r25, r1
    2d8c:	60 e4       	ldi	r22, 0x40	; 64
    2d8e:	70 e0       	ldi	r23, 0x00	; 0
    2d90:	0e 94 a2 19 	call	0x3344	; 0x3344 <__divmodhi4>
    2d94:	08 95       	ret
    2d96:	80 e0       	ldi	r24, 0x00	; 0
    2d98:	90 e0       	ldi	r25, 0x00	; 0
    2d9a:	08 95       	ret

00002d9c <_ZN14SoftwareSerial13stopListeningEv>:
    2d9c:	e0 91 3c 05 	lds	r30, 0x053C
    2da0:	f0 91 3d 05 	lds	r31, 0x053D
    2da4:	e8 17       	cp	r30, r24
    2da6:	f9 07       	cpc	r31, r25
    2da8:	69 f4       	brne	.+26     	; 0x2dc4 <_ZN14SoftwareSerial13stopListeningEv+0x28>
    2daa:	a3 89       	ldd	r26, Z+19	; 0x13
    2dac:	b4 89       	ldd	r27, Z+20	; 0x14
    2dae:	9c 91       	ld	r25, X
    2db0:	85 89       	ldd	r24, Z+21	; 0x15
    2db2:	80 95       	com	r24
    2db4:	89 23       	and	r24, r25
    2db6:	8c 93       	st	X, r24
    2db8:	10 92 3d 05 	sts	0x053D, r1
    2dbc:	10 92 3c 05 	sts	0x053C, r1
    2dc0:	81 e0       	ldi	r24, 0x01	; 1
    2dc2:	08 95       	ret
    2dc4:	80 e0       	ldi	r24, 0x00	; 0
    2dc6:	08 95       	ret

00002dc8 <_ZN14SoftwareSerial6listenEv>:
    2dc8:	cf 93       	push	r28
    2dca:	df 93       	push	r29
    2dcc:	ec 01       	movw	r28, r24
    2dce:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2dd0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2dd2:	89 2b       	or	r24, r25
    2dd4:	f1 f0       	breq	.+60     	; 0x2e12 <_ZN14SoftwareSerial6listenEv+0x4a>
    2dd6:	80 91 3c 05 	lds	r24, 0x053C
    2dda:	90 91 3d 05 	lds	r25, 0x053D
    2dde:	8c 17       	cp	r24, r28
    2de0:	9d 07       	cpc	r25, r29
    2de2:	b9 f0       	breq	.+46     	; 0x2e12 <_ZN14SoftwareSerial6listenEv+0x4a>
    2de4:	00 97       	sbiw	r24, 0x00	; 0
    2de6:	11 f0       	breq	.+4      	; 0x2dec <_ZN14SoftwareSerial6listenEv+0x24>
    2de8:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <_ZN14SoftwareSerial13stopListeningEv>
    2dec:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2dee:	8e 7f       	andi	r24, 0xFE	; 254
    2df0:	8e 8f       	std	Y+30, r24	; 0x1e
    2df2:	10 92 fb 04 	sts	0x04FB, r1
    2df6:	10 92 fa 04 	sts	0x04FA, r1
    2dfa:	d0 93 3d 05 	sts	0x053D, r29
    2dfe:	c0 93 3c 05 	sts	0x053C, r28
    2e02:	eb 89       	ldd	r30, Y+19	; 0x13
    2e04:	fc 89       	ldd	r31, Y+20	; 0x14
    2e06:	90 81       	ld	r25, Z
    2e08:	8d 89       	ldd	r24, Y+21	; 0x15
    2e0a:	89 2b       	or	r24, r25
    2e0c:	80 83       	st	Z, r24
    2e0e:	81 e0       	ldi	r24, 0x01	; 1
    2e10:	01 c0       	rjmp	.+2      	; 0x2e14 <_ZN14SoftwareSerial6listenEv+0x4c>
    2e12:	80 e0       	ldi	r24, 0x00	; 0
    2e14:	df 91       	pop	r29
    2e16:	cf 91       	pop	r28
    2e18:	08 95       	ret

00002e1a <__vector_3>:
    2e1a:	1f 92       	push	r1
    2e1c:	0f 92       	push	r0
    2e1e:	0f b6       	in	r0, 0x3f	; 63
    2e20:	0f 92       	push	r0
    2e22:	11 24       	eor	r1, r1
    2e24:	2f 93       	push	r18
    2e26:	3f 93       	push	r19
    2e28:	4f 93       	push	r20
    2e2a:	5f 93       	push	r21
    2e2c:	6f 93       	push	r22
    2e2e:	7f 93       	push	r23
    2e30:	8f 93       	push	r24
    2e32:	9f 93       	push	r25
    2e34:	af 93       	push	r26
    2e36:	bf 93       	push	r27
    2e38:	ef 93       	push	r30
    2e3a:	ff 93       	push	r31
    2e3c:	e0 91 3c 05 	lds	r30, 0x053C
    2e40:	f0 91 3d 05 	lds	r31, 0x053D
    2e44:	30 97       	sbiw	r30, 0x00	; 0
    2e46:	09 f4       	brne	.+2      	; 0x2e4a <__vector_3+0x30>
    2e48:	51 c0       	rjmp	.+162    	; 0x2eec <__vector_3+0xd2>
    2e4a:	96 8d       	ldd	r25, Z+30	; 0x1e
    2e4c:	a6 85       	ldd	r26, Z+14	; 0x0e
    2e4e:	b7 85       	ldd	r27, Z+15	; 0x0f
    2e50:	85 85       	ldd	r24, Z+13	; 0x0d
    2e52:	91 ff       	sbrs	r25, 1
    2e54:	04 c0       	rjmp	.+8      	; 0x2e5e <__vector_3+0x44>
    2e56:	9c 91       	ld	r25, X
    2e58:	89 23       	and	r24, r25
    2e5a:	29 f4       	brne	.+10     	; 0x2e66 <__vector_3+0x4c>
    2e5c:	47 c0       	rjmp	.+142    	; 0x2eec <__vector_3+0xd2>
    2e5e:	9c 91       	ld	r25, X
    2e60:	89 23       	and	r24, r25
    2e62:	09 f0       	breq	.+2      	; 0x2e66 <__vector_3+0x4c>
    2e64:	43 c0       	rjmp	.+134    	; 0x2eec <__vector_3+0xd2>
    2e66:	a3 89       	ldd	r26, Z+19	; 0x13
    2e68:	b4 89       	ldd	r27, Z+20	; 0x14
    2e6a:	9c 91       	ld	r25, X
    2e6c:	85 89       	ldd	r24, Z+21	; 0x15
    2e6e:	80 95       	com	r24
    2e70:	89 23       	and	r24, r25
    2e72:	8c 93       	st	X, r24
    2e74:	86 89       	ldd	r24, Z+22	; 0x16
    2e76:	97 89       	ldd	r25, Z+23	; 0x17
    2e78:	01 97       	sbiw	r24, 0x01	; 1
    2e7a:	f1 f7       	brne	.-4      	; 0x2e78 <__vector_3+0x5e>
    2e7c:	60 8d       	ldd	r22, Z+24	; 0x18
    2e7e:	71 8d       	ldd	r23, Z+25	; 0x19
    2e80:	a6 85       	ldd	r26, Z+14	; 0x0e
    2e82:	b7 85       	ldd	r27, Z+15	; 0x0f
    2e84:	55 85       	ldd	r21, Z+13	; 0x0d
    2e86:	38 e0       	ldi	r19, 0x08	; 8
    2e88:	20 e0       	ldi	r18, 0x00	; 0
    2e8a:	cb 01       	movw	r24, r22
    2e8c:	01 97       	sbiw	r24, 0x01	; 1
    2e8e:	f1 f7       	brne	.-4      	; 0x2e8c <__vector_3+0x72>
    2e90:	82 2f       	mov	r24, r18
    2e92:	90 e0       	ldi	r25, 0x00	; 0
    2e94:	95 95       	asr	r25
    2e96:	87 95       	ror	r24
    2e98:	28 2f       	mov	r18, r24
    2e9a:	4c 91       	ld	r20, X
    2e9c:	45 23       	and	r20, r21
    2e9e:	09 f0       	breq	.+2      	; 0x2ea2 <__vector_3+0x88>
    2ea0:	20 68       	ori	r18, 0x80	; 128
    2ea2:	31 50       	subi	r19, 0x01	; 1
    2ea4:	91 f7       	brne	.-28     	; 0x2e8a <__vector_3+0x70>
    2ea6:	86 8d       	ldd	r24, Z+30	; 0x1e
    2ea8:	81 fd       	sbrc	r24, 1
    2eaa:	20 95       	com	r18
    2eac:	80 91 fb 04 	lds	r24, 0x04FB
    2eb0:	90 e0       	ldi	r25, 0x00	; 0
    2eb2:	01 96       	adiw	r24, 0x01	; 1
    2eb4:	8f 73       	andi	r24, 0x3F	; 63
    2eb6:	99 27       	eor	r25, r25
    2eb8:	30 91 fa 04 	lds	r19, 0x04FA
    2ebc:	38 17       	cp	r19, r24
    2ebe:	49 f0       	breq	.+18     	; 0x2ed2 <__vector_3+0xb8>
    2ec0:	a0 91 fb 04 	lds	r26, 0x04FB
    2ec4:	b0 e0       	ldi	r27, 0x00	; 0
    2ec6:	a4 50       	subi	r26, 0x04	; 4
    2ec8:	bb 4f       	sbci	r27, 0xFB	; 251
    2eca:	2c 93       	st	X, r18
    2ecc:	80 93 fb 04 	sts	0x04FB, r24
    2ed0:	03 c0       	rjmp	.+6      	; 0x2ed8 <__vector_3+0xbe>
    2ed2:	86 8d       	ldd	r24, Z+30	; 0x1e
    2ed4:	81 60       	ori	r24, 0x01	; 1
    2ed6:	86 8f       	std	Z+30, r24	; 0x1e
    2ed8:	82 8d       	ldd	r24, Z+26	; 0x1a
    2eda:	93 8d       	ldd	r25, Z+27	; 0x1b
    2edc:	01 97       	sbiw	r24, 0x01	; 1
    2ede:	f1 f7       	brne	.-4      	; 0x2edc <__vector_3+0xc2>
    2ee0:	a3 89       	ldd	r26, Z+19	; 0x13
    2ee2:	b4 89       	ldd	r27, Z+20	; 0x14
    2ee4:	9c 91       	ld	r25, X
    2ee6:	85 89       	ldd	r24, Z+21	; 0x15
    2ee8:	89 2b       	or	r24, r25
    2eea:	8c 93       	st	X, r24
    2eec:	ff 91       	pop	r31
    2eee:	ef 91       	pop	r30
    2ef0:	bf 91       	pop	r27
    2ef2:	af 91       	pop	r26
    2ef4:	9f 91       	pop	r25
    2ef6:	8f 91       	pop	r24
    2ef8:	7f 91       	pop	r23
    2efa:	6f 91       	pop	r22
    2efc:	5f 91       	pop	r21
    2efe:	4f 91       	pop	r20
    2f00:	3f 91       	pop	r19
    2f02:	2f 91       	pop	r18
    2f04:	0f 90       	pop	r0
    2f06:	0f be       	out	0x3f, r0	; 63
    2f08:	0f 90       	pop	r0
    2f0a:	1f 90       	pop	r1
    2f0c:	18 95       	reti

00002f0e <_ZN14SoftwareSerialD1Ev>:
    2f0e:	20 e1       	ldi	r18, 0x10	; 16
    2f10:	32 e0       	ldi	r19, 0x02	; 2
    2f12:	fc 01       	movw	r30, r24
    2f14:	31 83       	std	Z+1, r19	; 0x01
    2f16:	20 83       	st	Z, r18
    2f18:	0c 94 ce 16 	jmp	0x2d9c	; 0x2d9c <_ZN14SoftwareSerial13stopListeningEv>

00002f1c <_ZN14SoftwareSerial5setTXEh>:
    2f1c:	1f 93       	push	r17
    2f1e:	cf 93       	push	r28
    2f20:	df 93       	push	r29
    2f22:	ec 01       	movw	r28, r24
    2f24:	16 2f       	mov	r17, r22
    2f26:	6e 8d       	ldd	r22, Y+30	; 0x1e
    2f28:	66 95       	lsr	r22
    2f2a:	61 70       	andi	r22, 0x01	; 1
    2f2c:	81 e0       	ldi	r24, 0x01	; 1
    2f2e:	68 27       	eor	r22, r24
    2f30:	81 2f       	mov	r24, r17
    2f32:	0e 94 0d 19 	call	0x321a	; 0x321a <digitalWrite>
    2f36:	61 e0       	ldi	r22, 0x01	; 1
    2f38:	81 2f       	mov	r24, r17
    2f3a:	0e 94 cc 18 	call	0x3198	; 0x3198 <pinMode>
    2f3e:	61 2f       	mov	r22, r17
    2f40:	70 e0       	ldi	r23, 0x00	; 0
    2f42:	fb 01       	movw	r30, r22
    2f44:	ec 5f       	subi	r30, 0xFC	; 252
    2f46:	fe 4f       	sbci	r31, 0xFE	; 254
    2f48:	e4 91       	lpm	r30, Z
    2f4a:	e8 8b       	std	Y+16, r30	; 0x10
    2f4c:	fb 01       	movw	r30, r22
    2f4e:	e8 5e       	subi	r30, 0xE8	; 232
    2f50:	fe 4f       	sbci	r31, 0xFE	; 254
    2f52:	e4 91       	lpm	r30, Z
    2f54:	f0 e0       	ldi	r31, 0x00	; 0
    2f56:	ee 0f       	add	r30, r30
    2f58:	ff 1f       	adc	r31, r31
    2f5a:	ea 5c       	subi	r30, 0xCA	; 202
    2f5c:	fe 4f       	sbci	r31, 0xFE	; 254
    2f5e:	85 91       	lpm	r24, Z+
    2f60:	94 91       	lpm	r25, Z
    2f62:	9a 8b       	std	Y+18, r25	; 0x12
    2f64:	89 8b       	std	Y+17, r24	; 0x11
    2f66:	df 91       	pop	r29
    2f68:	cf 91       	pop	r28
    2f6a:	1f 91       	pop	r17
    2f6c:	08 95       	ret

00002f6e <_ZN14SoftwareSerial5setRXEh>:
    2f6e:	1f 93       	push	r17
    2f70:	cf 93       	push	r28
    2f72:	df 93       	push	r29
    2f74:	ec 01       	movw	r28, r24
    2f76:	16 2f       	mov	r17, r22
    2f78:	60 e0       	ldi	r22, 0x00	; 0
    2f7a:	81 2f       	mov	r24, r17
    2f7c:	0e 94 cc 18 	call	0x3198	; 0x3198 <pinMode>
    2f80:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2f82:	81 fd       	sbrc	r24, 1
    2f84:	04 c0       	rjmp	.+8      	; 0x2f8e <_ZN14SoftwareSerial5setRXEh+0x20>
    2f86:	61 e0       	ldi	r22, 0x01	; 1
    2f88:	81 2f       	mov	r24, r17
    2f8a:	0e 94 0d 19 	call	0x321a	; 0x321a <digitalWrite>
    2f8e:	1c 87       	std	Y+12, r17	; 0x0c
    2f90:	61 2f       	mov	r22, r17
    2f92:	70 e0       	ldi	r23, 0x00	; 0
    2f94:	fb 01       	movw	r30, r22
    2f96:	ec 5f       	subi	r30, 0xFC	; 252
    2f98:	fe 4f       	sbci	r31, 0xFE	; 254
    2f9a:	e4 91       	lpm	r30, Z
    2f9c:	ed 87       	std	Y+13, r30	; 0x0d
    2f9e:	fb 01       	movw	r30, r22
    2fa0:	e8 5e       	subi	r30, 0xE8	; 232
    2fa2:	fe 4f       	sbci	r31, 0xFE	; 254
    2fa4:	e4 91       	lpm	r30, Z
    2fa6:	f0 e0       	ldi	r31, 0x00	; 0
    2fa8:	ee 0f       	add	r30, r30
    2faa:	ff 1f       	adc	r31, r31
    2fac:	e4 5d       	subi	r30, 0xD4	; 212
    2fae:	fe 4f       	sbci	r31, 0xFE	; 254
    2fb0:	85 91       	lpm	r24, Z+
    2fb2:	94 91       	lpm	r25, Z
    2fb4:	9f 87       	std	Y+15, r25	; 0x0f
    2fb6:	8e 87       	std	Y+14, r24	; 0x0e
    2fb8:	df 91       	pop	r29
    2fba:	cf 91       	pop	r28
    2fbc:	1f 91       	pop	r17
    2fbe:	08 95       	ret

00002fc0 <_ZN14SoftwareSerialC1Ehhb>:
    2fc0:	1f 93       	push	r17
    2fc2:	cf 93       	push	r28
    2fc4:	df 93       	push	r29
    2fc6:	ec 01       	movw	r28, r24
    2fc8:	16 2f       	mov	r17, r22
    2fca:	1b 82       	std	Y+3, r1	; 0x03
    2fcc:	1a 82       	std	Y+2, r1	; 0x02
    2fce:	88 ee       	ldi	r24, 0xE8	; 232
    2fd0:	93 e0       	ldi	r25, 0x03	; 3
    2fd2:	a0 e0       	ldi	r26, 0x00	; 0
    2fd4:	b0 e0       	ldi	r27, 0x00	; 0
    2fd6:	8c 83       	std	Y+4, r24	; 0x04
    2fd8:	9d 83       	std	Y+5, r25	; 0x05
    2fda:	ae 83       	std	Y+6, r26	; 0x06
    2fdc:	bf 83       	std	Y+7, r27	; 0x07
    2fde:	80 e1       	ldi	r24, 0x10	; 16
    2fe0:	92 e0       	ldi	r25, 0x02	; 2
    2fe2:	99 83       	std	Y+1, r25	; 0x01
    2fe4:	88 83       	st	Y, r24
    2fe6:	1f 8a       	std	Y+23, r1	; 0x17
    2fe8:	1e 8a       	std	Y+22, r1	; 0x16
    2fea:	19 8e       	std	Y+25, r1	; 0x19
    2fec:	18 8e       	std	Y+24, r1	; 0x18
    2fee:	1b 8e       	std	Y+27, r1	; 0x1b
    2ff0:	1a 8e       	std	Y+26, r1	; 0x1a
    2ff2:	1d 8e       	std	Y+29, r1	; 0x1d
    2ff4:	1c 8e       	std	Y+28, r1	; 0x1c
    2ff6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2ff8:	8e 7f       	andi	r24, 0xFE	; 254
    2ffa:	20 fb       	bst	r18, 0
    2ffc:	81 f9       	bld	r24, 1
    2ffe:	8e 8f       	std	Y+30, r24	; 0x1e
    3000:	64 2f       	mov	r22, r20
    3002:	ce 01       	movw	r24, r28
    3004:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <_ZN14SoftwareSerial5setTXEh>
    3008:	61 2f       	mov	r22, r17
    300a:	ce 01       	movw	r24, r28
    300c:	df 91       	pop	r29
    300e:	cf 91       	pop	r28
    3010:	1f 91       	pop	r17
    3012:	0c 94 b7 17 	jmp	0x2f6e	; 0x2f6e <_ZN14SoftwareSerial5setRXEh>

00003016 <_ZN14SoftwareSerial5beginEl>:
//
// Public methods
//

void SoftwareSerial::begin(long speed)
{
    3016:	cf 93       	push	r28
    3018:	df 93       	push	r29
    301a:	ec 01       	movw	r28, r24
    301c:	9a 01       	movw	r18, r20
    301e:	ab 01       	movw	r20, r22
  _rx_delay_centering = _rx_delay_intrabit = _rx_delay_stopbit = _tx_delay = 0;
    3020:	1b 8e       	std	Y+27, r1	; 0x1b
    3022:	1a 8e       	std	Y+26, r1	; 0x1a
    3024:	19 8e       	std	Y+25, r1	; 0x19
    3026:	18 8e       	std	Y+24, r1	; 0x18
    3028:	1f 8a       	std	Y+23, r1	; 0x17
    302a:	1e 8a       	std	Y+22, r1	; 0x16

  // Precalculate the various delays, in number of 4-cycle delays
  uint16_t bit_delay = (F_CPU / speed) / 4;
    302c:	60 e0       	ldi	r22, 0x00	; 0
    302e:	79 e0       	ldi	r23, 0x09	; 9
    3030:	8d e3       	ldi	r24, 0x3D	; 61
    3032:	90 e0       	ldi	r25, 0x00	; 0
    3034:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <__divmodsi4>
    3038:	f9 01       	movw	r30, r18
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    303a:	24 30       	cpi	r18, 0x04	; 4
    303c:	31 05       	cpc	r19, r1
    303e:	18 f0       	brcs	.+6      	; 0x3046 <_ZN14SoftwareSerial5beginEl+0x30>
    return num - sub;
    3040:	c9 01       	movw	r24, r18
    3042:	03 97       	sbiw	r24, 0x03	; 3
    3044:	02 c0       	rjmp	.+4      	; 0x304a <_ZN14SoftwareSerial5beginEl+0x34>
  else
    return 1;
    3046:	81 e0       	ldi	r24, 0x01	; 1
    3048:	90 e0       	ldi	r25, 0x00	; 0
  // 12 (gcc 4.8.2) or 13 (gcc 4.3.2) cycles from start bit to first bit,
  // 15 (gcc 4.8.2) or 16 (gcc 4.3.2) cycles between bits,
  // 12 (gcc 4.8.2) or 14 (gcc 4.3.2) cycles from last bit to stop bit
  // These are all close enough to just use 15 cycles, since the inter-bit
  // timings are the most critical (deviations stack 8 times)
  _tx_delay = subtract_cap(bit_delay, 15 / 4);
    304a:	9d 8f       	std	Y+29, r25	; 0x1d
    304c:	8c 8f       	std	Y+28, r24	; 0x1c

  // Only setup rx when we have a valid PCINT for this pin
  if (digitalPinToPCICR(_receivePin)) {
    304e:	6c 85       	ldd	r22, Y+12	; 0x0c
    3050:	66 31       	cpi	r22, 0x16	; 22
    3052:	08 f0       	brcs	.+2      	; 0x3056 <_ZN14SoftwareSerial5beginEl+0x40>
    3054:	69 c0       	rjmp	.+210    	; 0x3128 <_ZN14SoftwareSerial5beginEl+0x112>
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    3056:	c9 01       	movw	r24, r18
    3058:	96 95       	lsr	r25
    305a:	87 95       	ror	r24
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    305c:	84 31       	cpi	r24, 0x14	; 20
    305e:	91 05       	cpc	r25, r1
    3060:	10 f0       	brcs	.+4      	; 0x3066 <_ZN14SoftwareSerial5beginEl+0x50>
    return num - sub;
    3062:	43 97       	sbiw	r24, 0x13	; 19
    3064:	02 c0       	rjmp	.+4      	; 0x306a <_ZN14SoftwareSerial5beginEl+0x54>
  else
    return 1;
    3066:	81 e0       	ldi	r24, 0x01	; 1
    3068:	90 e0       	ldi	r25, 0x00	; 0
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    306a:	9f 8b       	std	Y+23, r25	; 0x17
    306c:	8e 8b       	std	Y+22, r24	; 0x16
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    306e:	36 97       	sbiw	r30, 0x06	; 6
    3070:	18 f0       	brcs	.+6      	; 0x3078 <_ZN14SoftwareSerial5beginEl+0x62>
    return num - sub;
    3072:	c9 01       	movw	r24, r18
    3074:	05 97       	sbiw	r24, 0x05	; 5
    3076:	02 c0       	rjmp	.+4      	; 0x307c <_ZN14SoftwareSerial5beginEl+0x66>
  else
    return 1;
    3078:	81 e0       	ldi	r24, 0x01	; 1
    307a:	90 e0       	ldi	r25, 0x00	; 0
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);

    // There are 23 cycles in each loop iteration (excluding the delay)
    _rx_delay_intrabit = subtract_cap(bit_delay, 23 / 4);
    307c:	99 8f       	std	Y+25, r25	; 0x19
    307e:	88 8f       	std	Y+24, r24	; 0x18
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    3080:	c9 01       	movw	r24, r18
    3082:	88 0f       	add	r24, r24
    3084:	99 1f       	adc	r25, r25
    3086:	28 0f       	add	r18, r24
    3088:	39 1f       	adc	r19, r25
    308a:	36 95       	lsr	r19
    308c:	27 95       	ror	r18
    308e:	36 95       	lsr	r19
    3090:	27 95       	ror	r18
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    3092:	2d 30       	cpi	r18, 0x0D	; 13
    3094:	31 05       	cpc	r19, r1
    3096:	18 f0       	brcs	.+6      	; 0x309e <_ZN14SoftwareSerial5beginEl+0x88>
    return num - sub;
    3098:	2c 50       	subi	r18, 0x0C	; 12
    309a:	31 09       	sbc	r19, r1
    309c:	02 c0       	rjmp	.+4      	; 0x30a2 <_ZN14SoftwareSerial5beginEl+0x8c>
  else
    return 1;
    309e:	21 e0       	ldi	r18, 0x01	; 1
    30a0:	30 e0       	ldi	r19, 0x00	; 0
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    30a2:	3b 8f       	std	Y+27, r19	; 0x1b
    30a4:	2a 8f       	std	Y+26, r18	; 0x1a


    // Enable the PCINT for the entire port here, but never disable it
    // (others might also need it, so we disable the interrupt by using
    // the per-pin PCMSK register).
    *digitalPinToPCICR(_receivePin) |= _BV(digitalPinToPCICRbit(_receivePin));
    30a6:	90 91 68 00 	lds	r25, 0x0068
    30aa:	68 30       	cpi	r22, 0x08	; 8
    30ac:	50 f0       	brcs	.+20     	; 0x30c2 <_ZN14SoftwareSerial5beginEl+0xac>
    30ae:	21 e0       	ldi	r18, 0x01	; 1
    30b0:	6e 30       	cpi	r22, 0x0E	; 14
    30b2:	08 f4       	brcc	.+2      	; 0x30b6 <_ZN14SoftwareSerial5beginEl+0xa0>
    30b4:	20 e0       	ldi	r18, 0x00	; 0
    30b6:	81 e0       	ldi	r24, 0x01	; 1
    30b8:	01 c0       	rjmp	.+2      	; 0x30bc <_ZN14SoftwareSerial5beginEl+0xa6>
    30ba:	88 0f       	add	r24, r24
    30bc:	2a 95       	dec	r18
    30be:	ea f7       	brpl	.-6      	; 0x30ba <_ZN14SoftwareSerial5beginEl+0xa4>
    30c0:	01 c0       	rjmp	.+2      	; 0x30c4 <_ZN14SoftwareSerial5beginEl+0xae>
    30c2:	84 e0       	ldi	r24, 0x04	; 4
    30c4:	89 2b       	or	r24, r25
    30c6:	80 93 68 00 	sts	0x0068, r24
    // Precalculate the pcint mask register and value, so setRxIntMask
    // can be used inside the ISR without costing too much time.
    _pcint_maskreg = digitalPinToPCMSK(_receivePin);
    30ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    30cc:	88 30       	cpi	r24, 0x08	; 8
    30ce:	38 f0       	brcs	.+14     	; 0x30de <_ZN14SoftwareSerial5beginEl+0xc8>
    30d0:	8e 30       	cpi	r24, 0x0E	; 14
    30d2:	40 f0       	brcs	.+16     	; 0x30e4 <_ZN14SoftwareSerial5beginEl+0xce>
    30d4:	86 31       	cpi	r24, 0x16	; 22
    30d6:	48 f0       	brcs	.+18     	; 0x30ea <_ZN14SoftwareSerial5beginEl+0xd4>
    30d8:	20 e0       	ldi	r18, 0x00	; 0
    30da:	30 e0       	ldi	r19, 0x00	; 0
    30dc:	08 c0       	rjmp	.+16     	; 0x30ee <_ZN14SoftwareSerial5beginEl+0xd8>
    30de:	2d e6       	ldi	r18, 0x6D	; 109
    30e0:	30 e0       	ldi	r19, 0x00	; 0
    30e2:	05 c0       	rjmp	.+10     	; 0x30ee <_ZN14SoftwareSerial5beginEl+0xd8>
    30e4:	2b e6       	ldi	r18, 0x6B	; 107
    30e6:	30 e0       	ldi	r19, 0x00	; 0
    30e8:	02 c0       	rjmp	.+4      	; 0x30ee <_ZN14SoftwareSerial5beginEl+0xd8>
    30ea:	2c e6       	ldi	r18, 0x6C	; 108
    30ec:	30 e0       	ldi	r19, 0x00	; 0
    30ee:	3c 8b       	std	Y+20, r19	; 0x14
    30f0:	2b 8b       	std	Y+19, r18	; 0x13
    _pcint_maskvalue = _BV(digitalPinToPCMSKbit(_receivePin));
    30f2:	88 30       	cpi	r24, 0x08	; 8
    30f4:	30 f4       	brcc	.+12     	; 0x3102 <_ZN14SoftwareSerial5beginEl+0xec>
    30f6:	91 e0       	ldi	r25, 0x01	; 1
    30f8:	01 c0       	rjmp	.+2      	; 0x30fc <_ZN14SoftwareSerial5beginEl+0xe6>
    30fa:	99 0f       	add	r25, r25
    30fc:	8a 95       	dec	r24
    30fe:	ea f7       	brpl	.-6      	; 0x30fa <_ZN14SoftwareSerial5beginEl+0xe4>
    3100:	0e c0       	rjmp	.+28     	; 0x311e <_ZN14SoftwareSerial5beginEl+0x108>
    3102:	28 2f       	mov	r18, r24
    3104:	30 e0       	ldi	r19, 0x00	; 0
    3106:	8e 30       	cpi	r24, 0x0E	; 14
    3108:	18 f4       	brcc	.+6      	; 0x3110 <_ZN14SoftwareSerial5beginEl+0xfa>
    310a:	28 50       	subi	r18, 0x08	; 8
    310c:	31 09       	sbc	r19, r1
    310e:	02 c0       	rjmp	.+4      	; 0x3114 <_ZN14SoftwareSerial5beginEl+0xfe>
    3110:	2e 50       	subi	r18, 0x0E	; 14
    3112:	31 09       	sbc	r19, r1
    3114:	91 e0       	ldi	r25, 0x01	; 1
    3116:	01 c0       	rjmp	.+2      	; 0x311a <_ZN14SoftwareSerial5beginEl+0x104>
    3118:	99 0f       	add	r25, r25
    311a:	2a 95       	dec	r18
    311c:	ea f7       	brpl	.-6      	; 0x3118 <_ZN14SoftwareSerial5beginEl+0x102>
    311e:	9d 8b       	std	Y+21, r25	; 0x15
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    3120:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3122:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3124:	01 97       	sbiw	r24, 0x01	; 1
    3126:	f1 f7       	brne	.-4      	; 0x3124 <_ZN14SoftwareSerial5beginEl+0x10e>
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    3128:	ce 01       	movw	r24, r28
}
    312a:	df 91       	pop	r29
    312c:	cf 91       	pop	r28
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    312e:	0c 94 e4 16 	jmp	0x2dc8	; 0x2dc8 <_ZN14SoftwareSerial6listenEv>

00003132 <_Znwj>:
void *operator new(size_t size) {
  return malloc(size);
}

void *operator new[](size_t size) {
  return malloc(size);
    3132:	0c 94 10 1e 	jmp	0x3c20	; 0x3c20 <malloc>

00003136 <_ZdlPv>:
}

void operator delete(void * ptr) {
  free(ptr);
    3136:	0c 94 a5 1e 	jmp	0x3d4a	; 0x3d4a <free>

0000313a <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    313a:	83 30       	cpi	r24, 0x03	; 3
    313c:	e9 f0       	breq	.+58     	; 0x3178 <turnOffPWM+0x3e>
    313e:	38 f0       	brcs	.+14     	; 0x314e <turnOffPWM+0x14>
    3140:	87 30       	cpi	r24, 0x07	; 7
    3142:	69 f0       	breq	.+26     	; 0x315e <turnOffPWM+0x24>
    3144:	88 30       	cpi	r24, 0x08	; 8
    3146:	11 f1       	breq	.+68     	; 0x318c <turnOffPWM+0x52>
    3148:	84 30       	cpi	r24, 0x04	; 4
    314a:	79 f0       	breq	.+30     	; 0x316a <turnOffPWM+0x30>
    314c:	08 95       	ret
    314e:	81 30       	cpi	r24, 0x01	; 1
    3150:	c9 f0       	breq	.+50     	; 0x3184 <turnOffPWM+0x4a>
    3152:	82 30       	cpi	r24, 0x02	; 2
    3154:	81 f4       	brne	.+32     	; 0x3176 <turnOffPWM+0x3c>
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    3156:	84 b5       	in	r24, 0x24	; 36
    3158:	8f 7d       	andi	r24, 0xDF	; 223
    315a:	84 bd       	out	0x24, r24	; 36
    315c:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    315e:	80 91 b0 00 	lds	r24, 0x00B0
    3162:	8f 77       	andi	r24, 0x7F	; 127
    3164:	80 93 b0 00 	sts	0x00B0, r24
    3168:	08 95       	ret
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    316a:	80 91 80 00 	lds	r24, 0x0080
    316e:	8f 7d       	andi	r24, 0xDF	; 223
    3170:	80 93 80 00 	sts	0x0080, r24
    3174:	08 95       	ret
    3176:	08 95       	ret
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    3178:	80 91 80 00 	lds	r24, 0x0080
    317c:	8f 77       	andi	r24, 0x7F	; 127
    317e:	80 93 80 00 	sts	0x0080, r24
    3182:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    3184:	84 b5       	in	r24, 0x24	; 36
    3186:	8f 77       	andi	r24, 0x7F	; 127
    3188:	84 bd       	out	0x24, r24	; 36
    318a:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    318c:	80 91 b0 00 	lds	r24, 0x00B0
    3190:	8f 7d       	andi	r24, 0xDF	; 223
    3192:	80 93 b0 00 	sts	0x00B0, r24
    3196:	08 95       	ret

00003198 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    3198:	cf 93       	push	r28
    319a:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    319c:	90 e0       	ldi	r25, 0x00	; 0
    319e:	fc 01       	movw	r30, r24
    31a0:	ec 5f       	subi	r30, 0xFC	; 252
    31a2:	fe 4f       	sbci	r31, 0xFE	; 254
    31a4:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    31a6:	fc 01       	movw	r30, r24
    31a8:	e8 5e       	subi	r30, 0xE8	; 232
    31aa:	fe 4f       	sbci	r31, 0xFE	; 254
    31ac:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    31ae:	88 23       	and	r24, r24
    31b0:	b9 f0       	breq	.+46     	; 0x31e0 <pinMode+0x48>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    31b2:	90 e0       	ldi	r25, 0x00	; 0
    31b4:	88 0f       	add	r24, r24
    31b6:	99 1f       	adc	r25, r25
    31b8:	fc 01       	movw	r30, r24
    31ba:	e0 5c       	subi	r30, 0xC0	; 192
    31bc:	fe 4f       	sbci	r31, 0xFE	; 254
    31be:	a5 91       	lpm	r26, Z+
    31c0:	b4 91       	lpm	r27, Z
	out = portOutputRegister(port);
    31c2:	fc 01       	movw	r30, r24
    31c4:	ea 5c       	subi	r30, 0xCA	; 202
    31c6:	fe 4f       	sbci	r31, 0xFE	; 254
    31c8:	c5 91       	lpm	r28, Z+
    31ca:	d4 91       	lpm	r29, Z

	if (mode == INPUT) { 
    31cc:	66 23       	and	r22, r22
    31ce:	59 f0       	breq	.+22     	; 0x31e6 <pinMode+0x4e>
		uint8_t oldSREG = SREG;
                cli();
		*reg &= ~bit;
		*out &= ~bit;
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    31d0:	62 30       	cpi	r22, 0x02	; 2
    31d2:	b9 f0       	breq	.+46     	; 0x3202 <pinMode+0x6a>
                cli();
		*reg &= ~bit;
		*out |= bit;
		SREG = oldSREG;
	} else {
		uint8_t oldSREG = SREG;
    31d4:	8f b7       	in	r24, 0x3f	; 63
                cli();
    31d6:	f8 94       	cli
		*reg |= bit;
    31d8:	ec 91       	ld	r30, X
    31da:	e2 2b       	or	r30, r18
    31dc:	ec 93       	st	X, r30
		SREG = oldSREG;
    31de:	8f bf       	out	0x3f, r24	; 63
	}
}
    31e0:	df 91       	pop	r29
    31e2:	cf 91       	pop	r28
    31e4:	08 95       	ret
	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
	out = portOutputRegister(port);

	if (mode == INPUT) { 
		uint8_t oldSREG = SREG;
    31e6:	9f b7       	in	r25, 0x3f	; 63
                cli();
    31e8:	f8 94       	cli
		*reg &= ~bit;
    31ea:	8c 91       	ld	r24, X
    31ec:	e2 2f       	mov	r30, r18
    31ee:	e0 95       	com	r30
    31f0:	8e 23       	and	r24, r30
    31f2:	8c 93       	st	X, r24
		*out &= ~bit;
    31f4:	28 81       	ld	r18, Y
    31f6:	e2 23       	and	r30, r18
    31f8:	e8 83       	st	Y, r30
		SREG = oldSREG;
    31fa:	9f bf       	out	0x3f, r25	; 63
		uint8_t oldSREG = SREG;
                cli();
		*reg |= bit;
		SREG = oldSREG;
	}
}
    31fc:	df 91       	pop	r29
    31fe:	cf 91       	pop	r28
    3200:	08 95       	ret
                cli();
		*reg &= ~bit;
		*out &= ~bit;
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
		uint8_t oldSREG = SREG;
    3202:	9f b7       	in	r25, 0x3f	; 63
                cli();
    3204:	f8 94       	cli
		*reg &= ~bit;
    3206:	3c 91       	ld	r19, X
    3208:	82 2f       	mov	r24, r18
    320a:	80 95       	com	r24
    320c:	83 23       	and	r24, r19
    320e:	8c 93       	st	X, r24
		*out |= bit;
    3210:	e8 81       	ld	r30, Y
    3212:	e2 2b       	or	r30, r18
    3214:	e8 83       	st	Y, r30
		SREG = oldSREG;
    3216:	9f bf       	out	0x3f, r25	; 63
    3218:	e3 cf       	rjmp	.-58     	; 0x31e0 <pinMode+0x48>

0000321a <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    321a:	1f 93       	push	r17
    321c:	cf 93       	push	r28
    321e:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    3220:	28 2f       	mov	r18, r24
    3222:	30 e0       	ldi	r19, 0x00	; 0
    3224:	f9 01       	movw	r30, r18
    3226:	e0 51       	subi	r30, 0x10	; 16
    3228:	ff 4f       	sbci	r31, 0xFF	; 255
    322a:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    322c:	f9 01       	movw	r30, r18
    322e:	ec 5f       	subi	r30, 0xFC	; 252
    3230:	fe 4f       	sbci	r31, 0xFE	; 254
    3232:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    3234:	f9 01       	movw	r30, r18
    3236:	e8 5e       	subi	r30, 0xE8	; 232
    3238:	fe 4f       	sbci	r31, 0xFE	; 254
    323a:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    323c:	cc 23       	and	r28, r28
    323e:	a9 f0       	breq	.+42     	; 0x326a <digitalWrite+0x50>
    3240:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    3242:	81 11       	cpse	r24, r1
    3244:	1b c0       	rjmp	.+54     	; 0x327c <digitalWrite+0x62>

	out = portOutputRegister(port);
    3246:	ec 2f       	mov	r30, r28
    3248:	f0 e0       	ldi	r31, 0x00	; 0
    324a:	ee 0f       	add	r30, r30
    324c:	ff 1f       	adc	r31, r31
    324e:	ea 5c       	subi	r30, 0xCA	; 202
    3250:	fe 4f       	sbci	r31, 0xFE	; 254
    3252:	a5 91       	lpm	r26, Z+
    3254:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    3256:	8f b7       	in	r24, 0x3f	; 63
	cli();
    3258:	f8 94       	cli

	if (val == LOW) {
    325a:	11 11       	cpse	r17, r1
    325c:	0a c0       	rjmp	.+20     	; 0x3272 <digitalWrite+0x58>
		*out &= ~bit;
    325e:	9c 91       	ld	r25, X
    3260:	ed 2f       	mov	r30, r29
    3262:	e0 95       	com	r30
    3264:	e9 23       	and	r30, r25
    3266:	ec 93       	st	X, r30
	} else {
		*out |= bit;
	}

	SREG = oldSREG;
    3268:	8f bf       	out	0x3f, r24	; 63
}
    326a:	df 91       	pop	r29
    326c:	cf 91       	pop	r28
    326e:	1f 91       	pop	r17
    3270:	08 95       	ret
	cli();

	if (val == LOW) {
		*out &= ~bit;
	} else {
		*out |= bit;
    3272:	ec 91       	ld	r30, X
    3274:	ed 2b       	or	r30, r29
    3276:	ec 93       	st	X, r30
	}

	SREG = oldSREG;
    3278:	8f bf       	out	0x3f, r24	; 63
    327a:	f7 cf       	rjmp	.-18     	; 0x326a <digitalWrite+0x50>

	if (port == NOT_A_PIN) return;

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    327c:	0e 94 9d 18 	call	0x313a	; 0x313a <turnOffPWM>
    3280:	e2 cf       	rjmp	.-60     	; 0x3246 <digitalWrite+0x2c>

00003282 <_Z6randomll>:
  }
  return random() % howbig;
}

long random(long howsmall, long howbig)
{
    3282:	cf 92       	push	r12
    3284:	df 92       	push	r13
    3286:	ef 92       	push	r14
    3288:	ff 92       	push	r15
    328a:	0f 93       	push	r16
    328c:	1f 93       	push	r17
    328e:	cf 93       	push	r28
    3290:	df 93       	push	r29
    3292:	00 d0       	rcall	.+0      	; 0x3294 <_Z6randomll+0x12>
    3294:	00 d0       	rcall	.+0      	; 0x3296 <_Z6randomll+0x14>
    3296:	cd b7       	in	r28, 0x3d	; 61
    3298:	de b7       	in	r29, 0x3e	; 62
  if (howsmall >= howbig) {
    329a:	62 17       	cp	r22, r18
    329c:	73 07       	cpc	r23, r19
    329e:	84 07       	cpc	r24, r20
    32a0:	95 07       	cpc	r25, r21
    32a2:	94 f4       	brge	.+36     	; 0x32c8 <_Z6randomll+0x46>
    32a4:	89 01       	movw	r16, r18
    32a6:	9a 01       	movw	r18, r20
    32a8:	6b 01       	movw	r12, r22
    32aa:	7c 01       	movw	r14, r24
    return howsmall;
  }
  long diff = howbig - howsmall;
    32ac:	a9 01       	movw	r20, r18
    32ae:	98 01       	movw	r18, r16
    32b0:	26 1b       	sub	r18, r22
    32b2:	37 0b       	sbc	r19, r23
    32b4:	48 0b       	sbc	r20, r24
    32b6:	59 0b       	sbc	r21, r25
  }
}

long random(long howbig)
{
  if (howbig == 0) {
    32b8:	a1 f4       	brne	.+40     	; 0x32e2 <_Z6randomll+0x60>
    return 0;
    32ba:	60 e0       	ldi	r22, 0x00	; 0
    32bc:	70 e0       	ldi	r23, 0x00	; 0
    32be:	cb 01       	movw	r24, r22
{
  if (howsmall >= howbig) {
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
    32c0:	6c 0d       	add	r22, r12
    32c2:	7d 1d       	adc	r23, r13
    32c4:	8e 1d       	adc	r24, r14
    32c6:	9f 1d       	adc	r25, r15
}
    32c8:	0f 90       	pop	r0
    32ca:	0f 90       	pop	r0
    32cc:	0f 90       	pop	r0
    32ce:	0f 90       	pop	r0
    32d0:	df 91       	pop	r29
    32d2:	cf 91       	pop	r28
    32d4:	1f 91       	pop	r17
    32d6:	0f 91       	pop	r16
    32d8:	ff 90       	pop	r15
    32da:	ef 90       	pop	r14
    32dc:	df 90       	pop	r13
    32de:	cf 90       	pop	r12
    32e0:	08 95       	ret
long random(long howbig)
{
  if (howbig == 0) {
    return 0;
  }
  return random() % howbig;
    32e2:	29 83       	std	Y+1, r18	; 0x01
    32e4:	3a 83       	std	Y+2, r19	; 0x02
    32e6:	4b 83       	std	Y+3, r20	; 0x03
    32e8:	5c 83       	std	Y+4, r21	; 0x04
    32ea:	0e 94 8b 1f 	call	0x3f16	; 0x3f16 <random>
    32ee:	29 81       	ldd	r18, Y+1	; 0x01
    32f0:	3a 81       	ldd	r19, Y+2	; 0x02
    32f2:	4b 81       	ldd	r20, Y+3	; 0x03
    32f4:	5c 81       	ldd	r21, Y+4	; 0x04
    32f6:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <__divmodsi4>
    32fa:	e2 cf       	rjmp	.-60     	; 0x32c0 <_Z6randomll+0x3e>

000032fc <__mulsi3>:
    32fc:	db 01       	movw	r26, r22
    32fe:	8f 93       	push	r24
    3300:	9f 93       	push	r25
    3302:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__muluhisi3>
    3306:	bf 91       	pop	r27
    3308:	af 91       	pop	r26
    330a:	a2 9f       	mul	r26, r18
    330c:	80 0d       	add	r24, r0
    330e:	91 1d       	adc	r25, r1
    3310:	a3 9f       	mul	r26, r19
    3312:	90 0d       	add	r25, r0
    3314:	b2 9f       	mul	r27, r18
    3316:	90 0d       	add	r25, r0
    3318:	11 24       	eor	r1, r1
    331a:	08 95       	ret

0000331c <__udivmodhi4>:
    331c:	aa 1b       	sub	r26, r26
    331e:	bb 1b       	sub	r27, r27
    3320:	51 e1       	ldi	r21, 0x11	; 17
    3322:	07 c0       	rjmp	.+14     	; 0x3332 <__udivmodhi4_ep>

00003324 <__udivmodhi4_loop>:
    3324:	aa 1f       	adc	r26, r26
    3326:	bb 1f       	adc	r27, r27
    3328:	a6 17       	cp	r26, r22
    332a:	b7 07       	cpc	r27, r23
    332c:	10 f0       	brcs	.+4      	; 0x3332 <__udivmodhi4_ep>
    332e:	a6 1b       	sub	r26, r22
    3330:	b7 0b       	sbc	r27, r23

00003332 <__udivmodhi4_ep>:
    3332:	88 1f       	adc	r24, r24
    3334:	99 1f       	adc	r25, r25
    3336:	5a 95       	dec	r21
    3338:	a9 f7       	brne	.-22     	; 0x3324 <__udivmodhi4_loop>
    333a:	80 95       	com	r24
    333c:	90 95       	com	r25
    333e:	bc 01       	movw	r22, r24
    3340:	cd 01       	movw	r24, r26
    3342:	08 95       	ret

00003344 <__divmodhi4>:
    3344:	97 fb       	bst	r25, 7
    3346:	07 2e       	mov	r0, r23
    3348:	16 f4       	brtc	.+4      	; 0x334e <__divmodhi4+0xa>
    334a:	00 94       	com	r0
    334c:	07 d0       	rcall	.+14     	; 0x335c <__divmodhi4_neg1>
    334e:	77 fd       	sbrc	r23, 7
    3350:	09 d0       	rcall	.+18     	; 0x3364 <__divmodhi4_neg2>
    3352:	0e 94 8e 19 	call	0x331c	; 0x331c <__udivmodhi4>
    3356:	07 fc       	sbrc	r0, 7
    3358:	05 d0       	rcall	.+10     	; 0x3364 <__divmodhi4_neg2>
    335a:	3e f4       	brtc	.+14     	; 0x336a <__divmodhi4_exit>

0000335c <__divmodhi4_neg1>:
    335c:	90 95       	com	r25
    335e:	81 95       	neg	r24
    3360:	9f 4f       	sbci	r25, 0xFF	; 255
    3362:	08 95       	ret

00003364 <__divmodhi4_neg2>:
    3364:	70 95       	com	r23
    3366:	61 95       	neg	r22
    3368:	7f 4f       	sbci	r23, 0xFF	; 255

0000336a <__divmodhi4_exit>:
    336a:	08 95       	ret

0000336c <__udivmodsi4>:
    336c:	a1 e2       	ldi	r26, 0x21	; 33
    336e:	1a 2e       	mov	r1, r26
    3370:	aa 1b       	sub	r26, r26
    3372:	bb 1b       	sub	r27, r27
    3374:	fd 01       	movw	r30, r26
    3376:	0d c0       	rjmp	.+26     	; 0x3392 <__udivmodsi4_ep>

00003378 <__udivmodsi4_loop>:
    3378:	aa 1f       	adc	r26, r26
    337a:	bb 1f       	adc	r27, r27
    337c:	ee 1f       	adc	r30, r30
    337e:	ff 1f       	adc	r31, r31
    3380:	a2 17       	cp	r26, r18
    3382:	b3 07       	cpc	r27, r19
    3384:	e4 07       	cpc	r30, r20
    3386:	f5 07       	cpc	r31, r21
    3388:	20 f0       	brcs	.+8      	; 0x3392 <__udivmodsi4_ep>
    338a:	a2 1b       	sub	r26, r18
    338c:	b3 0b       	sbc	r27, r19
    338e:	e4 0b       	sbc	r30, r20
    3390:	f5 0b       	sbc	r31, r21

00003392 <__udivmodsi4_ep>:
    3392:	66 1f       	adc	r22, r22
    3394:	77 1f       	adc	r23, r23
    3396:	88 1f       	adc	r24, r24
    3398:	99 1f       	adc	r25, r25
    339a:	1a 94       	dec	r1
    339c:	69 f7       	brne	.-38     	; 0x3378 <__udivmodsi4_loop>
    339e:	60 95       	com	r22
    33a0:	70 95       	com	r23
    33a2:	80 95       	com	r24
    33a4:	90 95       	com	r25
    33a6:	9b 01       	movw	r18, r22
    33a8:	ac 01       	movw	r20, r24
    33aa:	bd 01       	movw	r22, r26
    33ac:	cf 01       	movw	r24, r30
    33ae:	08 95       	ret

000033b0 <__divmodsi4>:
    33b0:	05 2e       	mov	r0, r21
    33b2:	97 fb       	bst	r25, 7
    33b4:	1e f4       	brtc	.+6      	; 0x33bc <__divmodsi4+0xc>
    33b6:	00 94       	com	r0
    33b8:	0e 94 ef 19 	call	0x33de	; 0x33de <__negsi2>
    33bc:	57 fd       	sbrc	r21, 7
    33be:	07 d0       	rcall	.+14     	; 0x33ce <__divmodsi4_neg2>
    33c0:	0e 94 b6 19 	call	0x336c	; 0x336c <__udivmodsi4>
    33c4:	07 fc       	sbrc	r0, 7
    33c6:	03 d0       	rcall	.+6      	; 0x33ce <__divmodsi4_neg2>
    33c8:	4e f4       	brtc	.+18     	; 0x33dc <__divmodsi4_exit>
    33ca:	0c 94 ef 19 	jmp	0x33de	; 0x33de <__negsi2>

000033ce <__divmodsi4_neg2>:
    33ce:	50 95       	com	r21
    33d0:	40 95       	com	r20
    33d2:	30 95       	com	r19
    33d4:	21 95       	neg	r18
    33d6:	3f 4f       	sbci	r19, 0xFF	; 255
    33d8:	4f 4f       	sbci	r20, 0xFF	; 255
    33da:	5f 4f       	sbci	r21, 0xFF	; 255

000033dc <__divmodsi4_exit>:
    33dc:	08 95       	ret

000033de <__negsi2>:
    33de:	90 95       	com	r25
    33e0:	80 95       	com	r24
    33e2:	70 95       	com	r23
    33e4:	61 95       	neg	r22
    33e6:	7f 4f       	sbci	r23, 0xFF	; 255
    33e8:	8f 4f       	sbci	r24, 0xFF	; 255
    33ea:	9f 4f       	sbci	r25, 0xFF	; 255
    33ec:	08 95       	ret

000033ee <__muluhisi3>:
    33ee:	0e 94 08 1a 	call	0x3410	; 0x3410 <__umulhisi3>
    33f2:	a5 9f       	mul	r26, r21
    33f4:	90 0d       	add	r25, r0
    33f6:	b4 9f       	mul	r27, r20
    33f8:	90 0d       	add	r25, r0
    33fa:	a4 9f       	mul	r26, r20
    33fc:	80 0d       	add	r24, r0
    33fe:	91 1d       	adc	r25, r1
    3400:	11 24       	eor	r1, r1
    3402:	08 95       	ret

00003404 <__tablejump2__>:
    3404:	ee 0f       	add	r30, r30
    3406:	ff 1f       	adc	r31, r31
    3408:	05 90       	lpm	r0, Z+
    340a:	f4 91       	lpm	r31, Z
    340c:	e0 2d       	mov	r30, r0
    340e:	09 94       	ijmp

00003410 <__umulhisi3>:
    3410:	a2 9f       	mul	r26, r18
    3412:	b0 01       	movw	r22, r0
    3414:	b3 9f       	mul	r27, r19
    3416:	c0 01       	movw	r24, r0
    3418:	a3 9f       	mul	r26, r19
    341a:	70 0d       	add	r23, r0
    341c:	81 1d       	adc	r24, r1
    341e:	11 24       	eor	r1, r1
    3420:	91 1d       	adc	r25, r1
    3422:	b2 9f       	mul	r27, r18
    3424:	70 0d       	add	r23, r0
    3426:	81 1d       	adc	r24, r1
    3428:	11 24       	eor	r1, r1
    342a:	91 1d       	adc	r25, r1
    342c:	08 95       	ret

0000342e <__subsf3>:
    342e:	50 58       	subi	r21, 0x80	; 128

00003430 <__addsf3>:
    3430:	bb 27       	eor	r27, r27
    3432:	aa 27       	eor	r26, r26
    3434:	0e 94 2f 1a 	call	0x345e	; 0x345e <__addsf3x>
    3438:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>
    343c:	0e 94 96 1c 	call	0x392c	; 0x392c <__fp_pscA>
    3440:	38 f0       	brcs	.+14     	; 0x3450 <__addsf3+0x20>
    3442:	0e 94 9d 1c 	call	0x393a	; 0x393a <__fp_pscB>
    3446:	20 f0       	brcs	.+8      	; 0x3450 <__addsf3+0x20>
    3448:	39 f4       	brne	.+14     	; 0x3458 <__addsf3+0x28>
    344a:	9f 3f       	cpi	r25, 0xFF	; 255
    344c:	19 f4       	brne	.+6      	; 0x3454 <__addsf3+0x24>
    344e:	26 f4       	brtc	.+8      	; 0x3458 <__addsf3+0x28>
    3450:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3454:	0e f4       	brtc	.+2      	; 0x3458 <__addsf3+0x28>
    3456:	e0 95       	com	r30
    3458:	e7 fb       	bst	r30, 7
    345a:	0c 94 44 1c 	jmp	0x3888	; 0x3888 <__fp_inf>

0000345e <__addsf3x>:
    345e:	e9 2f       	mov	r30, r25
    3460:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <__fp_split3>
    3464:	58 f3       	brcs	.-42     	; 0x343c <__addsf3+0xc>
    3466:	ba 17       	cp	r27, r26
    3468:	62 07       	cpc	r22, r18
    346a:	73 07       	cpc	r23, r19
    346c:	84 07       	cpc	r24, r20
    346e:	95 07       	cpc	r25, r21
    3470:	20 f0       	brcs	.+8      	; 0x347a <__addsf3x+0x1c>
    3472:	79 f4       	brne	.+30     	; 0x3492 <__addsf3x+0x34>
    3474:	a6 f5       	brtc	.+104    	; 0x34de <__addsf3x+0x80>
    3476:	0c 94 16 1d 	jmp	0x3a2c	; 0x3a2c <__fp_zero>
    347a:	0e f4       	brtc	.+2      	; 0x347e <__addsf3x+0x20>
    347c:	e0 95       	com	r30
    347e:	0b 2e       	mov	r0, r27
    3480:	ba 2f       	mov	r27, r26
    3482:	a0 2d       	mov	r26, r0
    3484:	0b 01       	movw	r0, r22
    3486:	b9 01       	movw	r22, r18
    3488:	90 01       	movw	r18, r0
    348a:	0c 01       	movw	r0, r24
    348c:	ca 01       	movw	r24, r20
    348e:	a0 01       	movw	r20, r0
    3490:	11 24       	eor	r1, r1
    3492:	ff 27       	eor	r31, r31
    3494:	59 1b       	sub	r21, r25
    3496:	99 f0       	breq	.+38     	; 0x34be <__addsf3x+0x60>
    3498:	59 3f       	cpi	r21, 0xF9	; 249
    349a:	50 f4       	brcc	.+20     	; 0x34b0 <__addsf3x+0x52>
    349c:	50 3e       	cpi	r21, 0xE0	; 224
    349e:	68 f1       	brcs	.+90     	; 0x34fa <__addsf3x+0x9c>
    34a0:	1a 16       	cp	r1, r26
    34a2:	f0 40       	sbci	r31, 0x00	; 0
    34a4:	a2 2f       	mov	r26, r18
    34a6:	23 2f       	mov	r18, r19
    34a8:	34 2f       	mov	r19, r20
    34aa:	44 27       	eor	r20, r20
    34ac:	58 5f       	subi	r21, 0xF8	; 248
    34ae:	f3 cf       	rjmp	.-26     	; 0x3496 <__addsf3x+0x38>
    34b0:	46 95       	lsr	r20
    34b2:	37 95       	ror	r19
    34b4:	27 95       	ror	r18
    34b6:	a7 95       	ror	r26
    34b8:	f0 40       	sbci	r31, 0x00	; 0
    34ba:	53 95       	inc	r21
    34bc:	c9 f7       	brne	.-14     	; 0x34b0 <__addsf3x+0x52>
    34be:	7e f4       	brtc	.+30     	; 0x34de <__addsf3x+0x80>
    34c0:	1f 16       	cp	r1, r31
    34c2:	ba 0b       	sbc	r27, r26
    34c4:	62 0b       	sbc	r22, r18
    34c6:	73 0b       	sbc	r23, r19
    34c8:	84 0b       	sbc	r24, r20
    34ca:	ba f0       	brmi	.+46     	; 0x34fa <__addsf3x+0x9c>
    34cc:	91 50       	subi	r25, 0x01	; 1
    34ce:	a1 f0       	breq	.+40     	; 0x34f8 <__addsf3x+0x9a>
    34d0:	ff 0f       	add	r31, r31
    34d2:	bb 1f       	adc	r27, r27
    34d4:	66 1f       	adc	r22, r22
    34d6:	77 1f       	adc	r23, r23
    34d8:	88 1f       	adc	r24, r24
    34da:	c2 f7       	brpl	.-16     	; 0x34cc <__addsf3x+0x6e>
    34dc:	0e c0       	rjmp	.+28     	; 0x34fa <__addsf3x+0x9c>
    34de:	ba 0f       	add	r27, r26
    34e0:	62 1f       	adc	r22, r18
    34e2:	73 1f       	adc	r23, r19
    34e4:	84 1f       	adc	r24, r20
    34e6:	48 f4       	brcc	.+18     	; 0x34fa <__addsf3x+0x9c>
    34e8:	87 95       	ror	r24
    34ea:	77 95       	ror	r23
    34ec:	67 95       	ror	r22
    34ee:	b7 95       	ror	r27
    34f0:	f7 95       	ror	r31
    34f2:	9e 3f       	cpi	r25, 0xFE	; 254
    34f4:	08 f0       	brcs	.+2      	; 0x34f8 <__addsf3x+0x9a>
    34f6:	b0 cf       	rjmp	.-160    	; 0x3458 <__addsf3+0x28>
    34f8:	93 95       	inc	r25
    34fa:	88 0f       	add	r24, r24
    34fc:	08 f0       	brcs	.+2      	; 0x3500 <__addsf3x+0xa2>
    34fe:	99 27       	eor	r25, r25
    3500:	ee 0f       	add	r30, r30
    3502:	97 95       	ror	r25
    3504:	87 95       	ror	r24
    3506:	08 95       	ret

00003508 <asin>:
    3508:	9f 93       	push	r25
    350a:	9f 77       	andi	r25, 0x7F	; 127
    350c:	ee e3       	ldi	r30, 0x3E	; 62
    350e:	89 37       	cpi	r24, 0x79	; 121
    3510:	9e 07       	cpc	r25, r30
    3512:	28 f4       	brcc	.+10     	; 0x351e <asin+0x16>
    3514:	e8 e6       	ldi	r30, 0x68	; 104
    3516:	f0 e0       	ldi	r31, 0x00	; 0
    3518:	0e 94 82 1c 	call	0x3904	; 0x3904 <__fp_powsodd>
    351c:	0c c0       	rjmp	.+24     	; 0x3536 <asin+0x2e>
    351e:	0e 94 00 1c 	call	0x3800	; 0x3800 <__fp_arccos>
    3522:	90 58       	subi	r25, 0x80	; 128
    3524:	a2 ea       	ldi	r26, 0xA2	; 162
    3526:	2a ed       	ldi	r18, 0xDA	; 218
    3528:	3f e0       	ldi	r19, 0x0F	; 15
    352a:	49 ec       	ldi	r20, 0xC9	; 201
    352c:	5f e3       	ldi	r21, 0x3F	; 63
    352e:	0e 94 2f 1a 	call	0x345e	; 0x345e <__addsf3x>
    3532:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    3536:	0f 90       	pop	r0
    3538:	07 fc       	sbrc	r0, 7
    353a:	90 58       	subi	r25, 0x80	; 128
    353c:	08 95       	ret
    353e:	0e 94 96 1c 	call	0x392c	; 0x392c <__fp_pscA>
    3542:	60 f0       	brcs	.+24     	; 0x355c <asin+0x54>
    3544:	80 e8       	ldi	r24, 0x80	; 128
    3546:	91 e0       	ldi	r25, 0x01	; 1
    3548:	09 f4       	brne	.+2      	; 0x354c <asin+0x44>
    354a:	9e ef       	ldi	r25, 0xFE	; 254
    354c:	0e 94 9d 1c 	call	0x393a	; 0x393a <__fp_pscB>
    3550:	28 f0       	brcs	.+10     	; 0x355c <asin+0x54>
    3552:	40 e8       	ldi	r20, 0x80	; 128
    3554:	51 e0       	ldi	r21, 0x01	; 1
    3556:	71 f4       	brne	.+28     	; 0x3574 <atan2+0x10>
    3558:	5e ef       	ldi	r21, 0xFE	; 254
    355a:	0c c0       	rjmp	.+24     	; 0x3574 <atan2+0x10>
    355c:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3560:	0c 94 16 1d 	jmp	0x3a2c	; 0x3a2c <__fp_zero>

00003564 <atan2>:
    3564:	e9 2f       	mov	r30, r25
    3566:	e0 78       	andi	r30, 0x80	; 128
    3568:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <__fp_split3>
    356c:	40 f3       	brcs	.-48     	; 0x353e <asin+0x36>
    356e:	09 2e       	mov	r0, r25
    3570:	05 2a       	or	r0, r21
    3572:	b1 f3       	breq	.-20     	; 0x3560 <asin+0x58>
    3574:	26 17       	cp	r18, r22
    3576:	37 07       	cpc	r19, r23
    3578:	48 07       	cpc	r20, r24
    357a:	59 07       	cpc	r21, r25
    357c:	38 f0       	brcs	.+14     	; 0x358c <atan2+0x28>
    357e:	0e 2e       	mov	r0, r30
    3580:	07 f8       	bld	r0, 7
    3582:	e0 25       	eor	r30, r0
    3584:	69 f0       	breq	.+26     	; 0x35a0 <atan2+0x3c>
    3586:	e0 25       	eor	r30, r0
    3588:	e0 64       	ori	r30, 0x40	; 64
    358a:	0a c0       	rjmp	.+20     	; 0x35a0 <atan2+0x3c>
    358c:	ef 63       	ori	r30, 0x3F	; 63
    358e:	07 f8       	bld	r0, 7
    3590:	00 94       	com	r0
    3592:	07 fa       	bst	r0, 7
    3594:	db 01       	movw	r26, r22
    3596:	b9 01       	movw	r22, r18
    3598:	9d 01       	movw	r18, r26
    359a:	dc 01       	movw	r26, r24
    359c:	ca 01       	movw	r24, r20
    359e:	ad 01       	movw	r20, r26
    35a0:	ef 93       	push	r30
    35a2:	0e 94 32 1b 	call	0x3664	; 0x3664 <__divsf3_pse>
    35a6:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    35aa:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <atan>
    35ae:	5f 91       	pop	r21
    35b0:	55 23       	and	r21, r21
    35b2:	39 f0       	breq	.+14     	; 0x35c2 <atan2+0x5e>
    35b4:	2b ed       	ldi	r18, 0xDB	; 219
    35b6:	3f e0       	ldi	r19, 0x0F	; 15
    35b8:	49 e4       	ldi	r20, 0x49	; 73
    35ba:	50 fd       	sbrc	r21, 0
    35bc:	49 ec       	ldi	r20, 0xC9	; 201
    35be:	0c 94 18 1a 	jmp	0x3430	; 0x3430 <__addsf3>
    35c2:	08 95       	ret

000035c4 <atan>:
    35c4:	df 93       	push	r29
    35c6:	dd 27       	eor	r29, r29
    35c8:	b9 2f       	mov	r27, r25
    35ca:	bf 77       	andi	r27, 0x7F	; 127
    35cc:	40 e8       	ldi	r20, 0x80	; 128
    35ce:	5f e3       	ldi	r21, 0x3F	; 63
    35d0:	16 16       	cp	r1, r22
    35d2:	17 06       	cpc	r1, r23
    35d4:	48 07       	cpc	r20, r24
    35d6:	5b 07       	cpc	r21, r27
    35d8:	18 f4       	brcc	.+6      	; 0x35e0 <atan+0x1c>
    35da:	d9 2f       	mov	r29, r25
    35dc:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <inverse>
    35e0:	9f 93       	push	r25
    35e2:	8f 93       	push	r24
    35e4:	7f 93       	push	r23
    35e6:	6f 93       	push	r22
    35e8:	0e 94 e5 1d 	call	0x3bca	; 0x3bca <square>
    35ec:	ec e7       	ldi	r30, 0x7C	; 124
    35ee:	f0 e0       	ldi	r31, 0x00	; 0
    35f0:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <__fp_powser>
    35f4:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    35f8:	2f 91       	pop	r18
    35fa:	3f 91       	pop	r19
    35fc:	4f 91       	pop	r20
    35fe:	5f 91       	pop	r21
    3600:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__mulsf3x>
    3604:	dd 23       	and	r29, r29
    3606:	51 f0       	breq	.+20     	; 0x361c <atan+0x58>
    3608:	90 58       	subi	r25, 0x80	; 128
    360a:	a2 ea       	ldi	r26, 0xA2	; 162
    360c:	2a ed       	ldi	r18, 0xDA	; 218
    360e:	3f e0       	ldi	r19, 0x0F	; 15
    3610:	49 ec       	ldi	r20, 0xC9	; 201
    3612:	5f e3       	ldi	r21, 0x3F	; 63
    3614:	d0 78       	andi	r29, 0x80	; 128
    3616:	5d 27       	eor	r21, r29
    3618:	0e 94 2f 1a 	call	0x345e	; 0x345e <__addsf3x>
    361c:	df 91       	pop	r29
    361e:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>

00003622 <__cmpsf2>:
    3622:	0e 94 20 1c 	call	0x3840	; 0x3840 <__fp_cmp>
    3626:	08 f4       	brcc	.+2      	; 0x362a <__cmpsf2+0x8>
    3628:	81 e0       	ldi	r24, 0x01	; 1
    362a:	08 95       	ret

0000362c <cos>:
    362c:	0e 94 a6 1c 	call	0x394c	; 0x394c <__fp_rempio2>
    3630:	e3 95       	inc	r30
    3632:	0c 94 e0 1c 	jmp	0x39c0	; 0x39c0 <__fp_sinus>

00003636 <__divsf3>:
    3636:	0e 94 2f 1b 	call	0x365e	; 0x365e <__divsf3x>
    363a:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>
    363e:	0e 94 9d 1c 	call	0x393a	; 0x393a <__fp_pscB>
    3642:	58 f0       	brcs	.+22     	; 0x365a <__divsf3+0x24>
    3644:	0e 94 96 1c 	call	0x392c	; 0x392c <__fp_pscA>
    3648:	40 f0       	brcs	.+16     	; 0x365a <__divsf3+0x24>
    364a:	29 f4       	brne	.+10     	; 0x3656 <__divsf3+0x20>
    364c:	5f 3f       	cpi	r21, 0xFF	; 255
    364e:	29 f0       	breq	.+10     	; 0x365a <__divsf3+0x24>
    3650:	0c 94 44 1c 	jmp	0x3888	; 0x3888 <__fp_inf>
    3654:	51 11       	cpse	r21, r1
    3656:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    365a:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>

0000365e <__divsf3x>:
    365e:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <__fp_split3>
    3662:	68 f3       	brcs	.-38     	; 0x363e <__divsf3+0x8>

00003664 <__divsf3_pse>:
    3664:	99 23       	and	r25, r25
    3666:	b1 f3       	breq	.-20     	; 0x3654 <__divsf3+0x1e>
    3668:	55 23       	and	r21, r21
    366a:	91 f3       	breq	.-28     	; 0x3650 <__divsf3+0x1a>
    366c:	95 1b       	sub	r25, r21
    366e:	55 0b       	sbc	r21, r21
    3670:	bb 27       	eor	r27, r27
    3672:	aa 27       	eor	r26, r26
    3674:	62 17       	cp	r22, r18
    3676:	73 07       	cpc	r23, r19
    3678:	84 07       	cpc	r24, r20
    367a:	38 f0       	brcs	.+14     	; 0x368a <__divsf3_pse+0x26>
    367c:	9f 5f       	subi	r25, 0xFF	; 255
    367e:	5f 4f       	sbci	r21, 0xFF	; 255
    3680:	22 0f       	add	r18, r18
    3682:	33 1f       	adc	r19, r19
    3684:	44 1f       	adc	r20, r20
    3686:	aa 1f       	adc	r26, r26
    3688:	a9 f3       	breq	.-22     	; 0x3674 <__divsf3_pse+0x10>
    368a:	35 d0       	rcall	.+106    	; 0x36f6 <__divsf3_pse+0x92>
    368c:	0e 2e       	mov	r0, r30
    368e:	3a f0       	brmi	.+14     	; 0x369e <__divsf3_pse+0x3a>
    3690:	e0 e8       	ldi	r30, 0x80	; 128
    3692:	32 d0       	rcall	.+100    	; 0x36f8 <__divsf3_pse+0x94>
    3694:	91 50       	subi	r25, 0x01	; 1
    3696:	50 40       	sbci	r21, 0x00	; 0
    3698:	e6 95       	lsr	r30
    369a:	00 1c       	adc	r0, r0
    369c:	ca f7       	brpl	.-14     	; 0x3690 <__divsf3_pse+0x2c>
    369e:	2b d0       	rcall	.+86     	; 0x36f6 <__divsf3_pse+0x92>
    36a0:	fe 2f       	mov	r31, r30
    36a2:	29 d0       	rcall	.+82     	; 0x36f6 <__divsf3_pse+0x92>
    36a4:	66 0f       	add	r22, r22
    36a6:	77 1f       	adc	r23, r23
    36a8:	88 1f       	adc	r24, r24
    36aa:	bb 1f       	adc	r27, r27
    36ac:	26 17       	cp	r18, r22
    36ae:	37 07       	cpc	r19, r23
    36b0:	48 07       	cpc	r20, r24
    36b2:	ab 07       	cpc	r26, r27
    36b4:	b0 e8       	ldi	r27, 0x80	; 128
    36b6:	09 f0       	breq	.+2      	; 0x36ba <__divsf3_pse+0x56>
    36b8:	bb 0b       	sbc	r27, r27
    36ba:	80 2d       	mov	r24, r0
    36bc:	bf 01       	movw	r22, r30
    36be:	ff 27       	eor	r31, r31
    36c0:	93 58       	subi	r25, 0x83	; 131
    36c2:	5f 4f       	sbci	r21, 0xFF	; 255
    36c4:	3a f0       	brmi	.+14     	; 0x36d4 <__divsf3_pse+0x70>
    36c6:	9e 3f       	cpi	r25, 0xFE	; 254
    36c8:	51 05       	cpc	r21, r1
    36ca:	78 f0       	brcs	.+30     	; 0x36ea <__divsf3_pse+0x86>
    36cc:	0c 94 44 1c 	jmp	0x3888	; 0x3888 <__fp_inf>
    36d0:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    36d4:	5f 3f       	cpi	r21, 0xFF	; 255
    36d6:	e4 f3       	brlt	.-8      	; 0x36d0 <__divsf3_pse+0x6c>
    36d8:	98 3e       	cpi	r25, 0xE8	; 232
    36da:	d4 f3       	brlt	.-12     	; 0x36d0 <__divsf3_pse+0x6c>
    36dc:	86 95       	lsr	r24
    36de:	77 95       	ror	r23
    36e0:	67 95       	ror	r22
    36e2:	b7 95       	ror	r27
    36e4:	f7 95       	ror	r31
    36e6:	9f 5f       	subi	r25, 0xFF	; 255
    36e8:	c9 f7       	brne	.-14     	; 0x36dc <__divsf3_pse+0x78>
    36ea:	88 0f       	add	r24, r24
    36ec:	91 1d       	adc	r25, r1
    36ee:	96 95       	lsr	r25
    36f0:	87 95       	ror	r24
    36f2:	97 f9       	bld	r25, 7
    36f4:	08 95       	ret
    36f6:	e1 e0       	ldi	r30, 0x01	; 1
    36f8:	66 0f       	add	r22, r22
    36fa:	77 1f       	adc	r23, r23
    36fc:	88 1f       	adc	r24, r24
    36fe:	bb 1f       	adc	r27, r27
    3700:	62 17       	cp	r22, r18
    3702:	73 07       	cpc	r23, r19
    3704:	84 07       	cpc	r24, r20
    3706:	ba 07       	cpc	r27, r26
    3708:	20 f0       	brcs	.+8      	; 0x3712 <__divsf3_pse+0xae>
    370a:	62 1b       	sub	r22, r18
    370c:	73 0b       	sbc	r23, r19
    370e:	84 0b       	sbc	r24, r20
    3710:	ba 0b       	sbc	r27, r26
    3712:	ee 1f       	adc	r30, r30
    3714:	88 f7       	brcc	.-30     	; 0x36f8 <__divsf3_pse+0x94>
    3716:	e0 95       	com	r30
    3718:	08 95       	ret

0000371a <__fixsfsi>:
    371a:	0e 94 94 1b 	call	0x3728	; 0x3728 <__fixunssfsi>
    371e:	68 94       	set
    3720:	b1 11       	cpse	r27, r1
    3722:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    3726:	08 95       	ret

00003728 <__fixunssfsi>:
    3728:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    372c:	88 f0       	brcs	.+34     	; 0x3750 <__fixunssfsi+0x28>
    372e:	9f 57       	subi	r25, 0x7F	; 127
    3730:	98 f0       	brcs	.+38     	; 0x3758 <__fixunssfsi+0x30>
    3732:	b9 2f       	mov	r27, r25
    3734:	99 27       	eor	r25, r25
    3736:	b7 51       	subi	r27, 0x17	; 23
    3738:	b0 f0       	brcs	.+44     	; 0x3766 <__fixunssfsi+0x3e>
    373a:	e1 f0       	breq	.+56     	; 0x3774 <__fixunssfsi+0x4c>
    373c:	66 0f       	add	r22, r22
    373e:	77 1f       	adc	r23, r23
    3740:	88 1f       	adc	r24, r24
    3742:	99 1f       	adc	r25, r25
    3744:	1a f0       	brmi	.+6      	; 0x374c <__fixunssfsi+0x24>
    3746:	ba 95       	dec	r27
    3748:	c9 f7       	brne	.-14     	; 0x373c <__fixunssfsi+0x14>
    374a:	14 c0       	rjmp	.+40     	; 0x3774 <__fixunssfsi+0x4c>
    374c:	b1 30       	cpi	r27, 0x01	; 1
    374e:	91 f0       	breq	.+36     	; 0x3774 <__fixunssfsi+0x4c>
    3750:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <__fp_zero>
    3754:	b1 e0       	ldi	r27, 0x01	; 1
    3756:	08 95       	ret
    3758:	0c 94 16 1d 	jmp	0x3a2c	; 0x3a2c <__fp_zero>
    375c:	67 2f       	mov	r22, r23
    375e:	78 2f       	mov	r23, r24
    3760:	88 27       	eor	r24, r24
    3762:	b8 5f       	subi	r27, 0xF8	; 248
    3764:	39 f0       	breq	.+14     	; 0x3774 <__fixunssfsi+0x4c>
    3766:	b9 3f       	cpi	r27, 0xF9	; 249
    3768:	cc f3       	brlt	.-14     	; 0x375c <__fixunssfsi+0x34>
    376a:	86 95       	lsr	r24
    376c:	77 95       	ror	r23
    376e:	67 95       	ror	r22
    3770:	b3 95       	inc	r27
    3772:	d9 f7       	brne	.-10     	; 0x376a <__fixunssfsi+0x42>
    3774:	3e f4       	brtc	.+14     	; 0x3784 <__fixunssfsi+0x5c>
    3776:	90 95       	com	r25
    3778:	80 95       	com	r24
    377a:	70 95       	com	r23
    377c:	61 95       	neg	r22
    377e:	7f 4f       	sbci	r23, 0xFF	; 255
    3780:	8f 4f       	sbci	r24, 0xFF	; 255
    3782:	9f 4f       	sbci	r25, 0xFF	; 255
    3784:	08 95       	ret

00003786 <__floatunsisf>:
    3786:	e8 94       	clt
    3788:	09 c0       	rjmp	.+18     	; 0x379c <__floatsisf+0x12>

0000378a <__floatsisf>:
    378a:	97 fb       	bst	r25, 7
    378c:	3e f4       	brtc	.+14     	; 0x379c <__floatsisf+0x12>
    378e:	90 95       	com	r25
    3790:	80 95       	com	r24
    3792:	70 95       	com	r23
    3794:	61 95       	neg	r22
    3796:	7f 4f       	sbci	r23, 0xFF	; 255
    3798:	8f 4f       	sbci	r24, 0xFF	; 255
    379a:	9f 4f       	sbci	r25, 0xFF	; 255
    379c:	99 23       	and	r25, r25
    379e:	a9 f0       	breq	.+42     	; 0x37ca <__floatsisf+0x40>
    37a0:	f9 2f       	mov	r31, r25
    37a2:	96 e9       	ldi	r25, 0x96	; 150
    37a4:	bb 27       	eor	r27, r27
    37a6:	93 95       	inc	r25
    37a8:	f6 95       	lsr	r31
    37aa:	87 95       	ror	r24
    37ac:	77 95       	ror	r23
    37ae:	67 95       	ror	r22
    37b0:	b7 95       	ror	r27
    37b2:	f1 11       	cpse	r31, r1
    37b4:	f8 cf       	rjmp	.-16     	; 0x37a6 <__floatsisf+0x1c>
    37b6:	fa f4       	brpl	.+62     	; 0x37f6 <__floatsisf+0x6c>
    37b8:	bb 0f       	add	r27, r27
    37ba:	11 f4       	brne	.+4      	; 0x37c0 <__floatsisf+0x36>
    37bc:	60 ff       	sbrs	r22, 0
    37be:	1b c0       	rjmp	.+54     	; 0x37f6 <__floatsisf+0x6c>
    37c0:	6f 5f       	subi	r22, 0xFF	; 255
    37c2:	7f 4f       	sbci	r23, 0xFF	; 255
    37c4:	8f 4f       	sbci	r24, 0xFF	; 255
    37c6:	9f 4f       	sbci	r25, 0xFF	; 255
    37c8:	16 c0       	rjmp	.+44     	; 0x37f6 <__floatsisf+0x6c>
    37ca:	88 23       	and	r24, r24
    37cc:	11 f0       	breq	.+4      	; 0x37d2 <__floatsisf+0x48>
    37ce:	96 e9       	ldi	r25, 0x96	; 150
    37d0:	11 c0       	rjmp	.+34     	; 0x37f4 <__floatsisf+0x6a>
    37d2:	77 23       	and	r23, r23
    37d4:	21 f0       	breq	.+8      	; 0x37de <__floatsisf+0x54>
    37d6:	9e e8       	ldi	r25, 0x8E	; 142
    37d8:	87 2f       	mov	r24, r23
    37da:	76 2f       	mov	r23, r22
    37dc:	05 c0       	rjmp	.+10     	; 0x37e8 <__floatsisf+0x5e>
    37de:	66 23       	and	r22, r22
    37e0:	71 f0       	breq	.+28     	; 0x37fe <__floatsisf+0x74>
    37e2:	96 e8       	ldi	r25, 0x86	; 134
    37e4:	86 2f       	mov	r24, r22
    37e6:	70 e0       	ldi	r23, 0x00	; 0
    37e8:	60 e0       	ldi	r22, 0x00	; 0
    37ea:	2a f0       	brmi	.+10     	; 0x37f6 <__floatsisf+0x6c>
    37ec:	9a 95       	dec	r25
    37ee:	66 0f       	add	r22, r22
    37f0:	77 1f       	adc	r23, r23
    37f2:	88 1f       	adc	r24, r24
    37f4:	da f7       	brpl	.-10     	; 0x37ec <__floatsisf+0x62>
    37f6:	88 0f       	add	r24, r24
    37f8:	96 95       	lsr	r25
    37fa:	87 95       	ror	r24
    37fc:	97 f9       	bld	r25, 7
    37fe:	08 95       	ret

00003800 <__fp_arccos>:
    3800:	df 93       	push	r29
    3802:	cf 93       	push	r28
    3804:	1f 93       	push	r17
    3806:	0f 93       	push	r16
    3808:	8b 01       	movw	r16, r22
    380a:	ec 01       	movw	r28, r24
    380c:	e9 ea       	ldi	r30, 0xA9	; 169
    380e:	f0 e0       	ldi	r31, 0x00	; 0
    3810:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <__fp_powser>
    3814:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    3818:	98 01       	movw	r18, r16
    381a:	ae 01       	movw	r20, r28
    381c:	8b 01       	movw	r16, r22
    381e:	ec 01       	movw	r28, r24
    3820:	60 e0       	ldi	r22, 0x00	; 0
    3822:	70 e0       	ldi	r23, 0x00	; 0
    3824:	80 e8       	ldi	r24, 0x80	; 128
    3826:	9f e3       	ldi	r25, 0x3F	; 63
    3828:	0e 94 17 1a 	call	0x342e	; 0x342e <__subsf3>
    382c:	0e 94 a5 1d 	call	0x3b4a	; 0x3b4a <sqrt>
    3830:	98 01       	movw	r18, r16
    3832:	ae 01       	movw	r20, r28
    3834:	0f 91       	pop	r16
    3836:	1f 91       	pop	r17
    3838:	cf 91       	pop	r28
    383a:	df 91       	pop	r29
    383c:	0c 94 3d 1d 	jmp	0x3a7a	; 0x3a7a <__mulsf3x>

00003840 <__fp_cmp>:
    3840:	99 0f       	add	r25, r25
    3842:	00 08       	sbc	r0, r0
    3844:	55 0f       	add	r21, r21
    3846:	aa 0b       	sbc	r26, r26
    3848:	e0 e8       	ldi	r30, 0x80	; 128
    384a:	fe ef       	ldi	r31, 0xFE	; 254
    384c:	16 16       	cp	r1, r22
    384e:	17 06       	cpc	r1, r23
    3850:	e8 07       	cpc	r30, r24
    3852:	f9 07       	cpc	r31, r25
    3854:	c0 f0       	brcs	.+48     	; 0x3886 <__fp_cmp+0x46>
    3856:	12 16       	cp	r1, r18
    3858:	13 06       	cpc	r1, r19
    385a:	e4 07       	cpc	r30, r20
    385c:	f5 07       	cpc	r31, r21
    385e:	98 f0       	brcs	.+38     	; 0x3886 <__fp_cmp+0x46>
    3860:	62 1b       	sub	r22, r18
    3862:	73 0b       	sbc	r23, r19
    3864:	84 0b       	sbc	r24, r20
    3866:	95 0b       	sbc	r25, r21
    3868:	39 f4       	brne	.+14     	; 0x3878 <__fp_cmp+0x38>
    386a:	0a 26       	eor	r0, r26
    386c:	61 f0       	breq	.+24     	; 0x3886 <__fp_cmp+0x46>
    386e:	23 2b       	or	r18, r19
    3870:	24 2b       	or	r18, r20
    3872:	25 2b       	or	r18, r21
    3874:	21 f4       	brne	.+8      	; 0x387e <__fp_cmp+0x3e>
    3876:	08 95       	ret
    3878:	0a 26       	eor	r0, r26
    387a:	09 f4       	brne	.+2      	; 0x387e <__fp_cmp+0x3e>
    387c:	a1 40       	sbci	r26, 0x01	; 1
    387e:	a6 95       	lsr	r26
    3880:	8f ef       	ldi	r24, 0xFF	; 255
    3882:	81 1d       	adc	r24, r1
    3884:	81 1d       	adc	r24, r1
    3886:	08 95       	ret

00003888 <__fp_inf>:
    3888:	97 f9       	bld	r25, 7
    388a:	9f 67       	ori	r25, 0x7F	; 127
    388c:	80 e8       	ldi	r24, 0x80	; 128
    388e:	70 e0       	ldi	r23, 0x00	; 0
    3890:	60 e0       	ldi	r22, 0x00	; 0
    3892:	08 95       	ret

00003894 <__fp_mpack>:
    3894:	9f 3f       	cpi	r25, 0xFF	; 255
    3896:	31 f0       	breq	.+12     	; 0x38a4 <__fp_mpack_finite+0xc>

00003898 <__fp_mpack_finite>:
    3898:	91 50       	subi	r25, 0x01	; 1
    389a:	20 f4       	brcc	.+8      	; 0x38a4 <__fp_mpack_finite+0xc>
    389c:	87 95       	ror	r24
    389e:	77 95       	ror	r23
    38a0:	67 95       	ror	r22
    38a2:	b7 95       	ror	r27
    38a4:	88 0f       	add	r24, r24
    38a6:	91 1d       	adc	r25, r1
    38a8:	96 95       	lsr	r25
    38aa:	87 95       	ror	r24
    38ac:	97 f9       	bld	r25, 7
    38ae:	08 95       	ret

000038b0 <__fp_nan>:
    38b0:	9f ef       	ldi	r25, 0xFF	; 255
    38b2:	80 ec       	ldi	r24, 0xC0	; 192
    38b4:	08 95       	ret

000038b6 <__fp_powser>:
    38b6:	df 93       	push	r29
    38b8:	cf 93       	push	r28
    38ba:	1f 93       	push	r17
    38bc:	0f 93       	push	r16
    38be:	ff 92       	push	r15
    38c0:	ef 92       	push	r14
    38c2:	df 92       	push	r13
    38c4:	7b 01       	movw	r14, r22
    38c6:	8c 01       	movw	r16, r24
    38c8:	68 94       	set
    38ca:	06 c0       	rjmp	.+12     	; 0x38d8 <__fp_powser+0x22>
    38cc:	da 2e       	mov	r13, r26
    38ce:	ef 01       	movw	r28, r30
    38d0:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__mulsf3x>
    38d4:	fe 01       	movw	r30, r28
    38d6:	e8 94       	clt
    38d8:	a5 91       	lpm	r26, Z+
    38da:	25 91       	lpm	r18, Z+
    38dc:	35 91       	lpm	r19, Z+
    38de:	45 91       	lpm	r20, Z+
    38e0:	55 91       	lpm	r21, Z+
    38e2:	a6 f3       	brts	.-24     	; 0x38cc <__fp_powser+0x16>
    38e4:	ef 01       	movw	r28, r30
    38e6:	0e 94 2f 1a 	call	0x345e	; 0x345e <__addsf3x>
    38ea:	fe 01       	movw	r30, r28
    38ec:	97 01       	movw	r18, r14
    38ee:	a8 01       	movw	r20, r16
    38f0:	da 94       	dec	r13
    38f2:	69 f7       	brne	.-38     	; 0x38ce <__fp_powser+0x18>
    38f4:	df 90       	pop	r13
    38f6:	ef 90       	pop	r14
    38f8:	ff 90       	pop	r15
    38fa:	0f 91       	pop	r16
    38fc:	1f 91       	pop	r17
    38fe:	cf 91       	pop	r28
    3900:	df 91       	pop	r29
    3902:	08 95       	ret

00003904 <__fp_powsodd>:
    3904:	9f 93       	push	r25
    3906:	8f 93       	push	r24
    3908:	7f 93       	push	r23
    390a:	6f 93       	push	r22
    390c:	ff 93       	push	r31
    390e:	ef 93       	push	r30
    3910:	9b 01       	movw	r18, r22
    3912:	ac 01       	movw	r20, r24
    3914:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
    3918:	ef 91       	pop	r30
    391a:	ff 91       	pop	r31
    391c:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <__fp_powser>
    3920:	2f 91       	pop	r18
    3922:	3f 91       	pop	r19
    3924:	4f 91       	pop	r20
    3926:	5f 91       	pop	r21
    3928:	0c 94 2a 1d 	jmp	0x3a54	; 0x3a54 <__mulsf3>

0000392c <__fp_pscA>:
    392c:	00 24       	eor	r0, r0
    392e:	0a 94       	dec	r0
    3930:	16 16       	cp	r1, r22
    3932:	17 06       	cpc	r1, r23
    3934:	18 06       	cpc	r1, r24
    3936:	09 06       	cpc	r0, r25
    3938:	08 95       	ret

0000393a <__fp_pscB>:
    393a:	00 24       	eor	r0, r0
    393c:	0a 94       	dec	r0
    393e:	12 16       	cp	r1, r18
    3940:	13 06       	cpc	r1, r19
    3942:	14 06       	cpc	r1, r20
    3944:	05 06       	cpc	r0, r21
    3946:	08 95       	ret
    3948:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>

0000394c <__fp_rempio2>:
    394c:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3950:	d8 f3       	brcs	.-10     	; 0x3948 <__fp_pscB+0xe>
    3952:	e8 94       	clt
    3954:	e0 e0       	ldi	r30, 0x00	; 0
    3956:	bb 27       	eor	r27, r27
    3958:	9f 57       	subi	r25, 0x7F	; 127
    395a:	f0 f0       	brcs	.+60     	; 0x3998 <__fp_rempio2+0x4c>
    395c:	2a ed       	ldi	r18, 0xDA	; 218
    395e:	3f e0       	ldi	r19, 0x0F	; 15
    3960:	49 ec       	ldi	r20, 0xC9	; 201
    3962:	06 c0       	rjmp	.+12     	; 0x3970 <__fp_rempio2+0x24>
    3964:	ee 0f       	add	r30, r30
    3966:	bb 0f       	add	r27, r27
    3968:	66 1f       	adc	r22, r22
    396a:	77 1f       	adc	r23, r23
    396c:	88 1f       	adc	r24, r24
    396e:	28 f0       	brcs	.+10     	; 0x397a <__fp_rempio2+0x2e>
    3970:	b2 3a       	cpi	r27, 0xA2	; 162
    3972:	62 07       	cpc	r22, r18
    3974:	73 07       	cpc	r23, r19
    3976:	84 07       	cpc	r24, r20
    3978:	28 f0       	brcs	.+10     	; 0x3984 <__fp_rempio2+0x38>
    397a:	b2 5a       	subi	r27, 0xA2	; 162
    397c:	62 0b       	sbc	r22, r18
    397e:	73 0b       	sbc	r23, r19
    3980:	84 0b       	sbc	r24, r20
    3982:	e3 95       	inc	r30
    3984:	9a 95       	dec	r25
    3986:	72 f7       	brpl	.-36     	; 0x3964 <__fp_rempio2+0x18>
    3988:	80 38       	cpi	r24, 0x80	; 128
    398a:	30 f4       	brcc	.+12     	; 0x3998 <__fp_rempio2+0x4c>
    398c:	9a 95       	dec	r25
    398e:	bb 0f       	add	r27, r27
    3990:	66 1f       	adc	r22, r22
    3992:	77 1f       	adc	r23, r23
    3994:	88 1f       	adc	r24, r24
    3996:	d2 f7       	brpl	.-12     	; 0x398c <__fp_rempio2+0x40>
    3998:	90 48       	sbci	r25, 0x80	; 128
    399a:	0c 94 4c 1c 	jmp	0x3898	; 0x3898 <__fp_mpack_finite>

0000399e <__fp_round>:
    399e:	09 2e       	mov	r0, r25
    39a0:	03 94       	inc	r0
    39a2:	00 0c       	add	r0, r0
    39a4:	11 f4       	brne	.+4      	; 0x39aa <__fp_round+0xc>
    39a6:	88 23       	and	r24, r24
    39a8:	52 f0       	brmi	.+20     	; 0x39be <__fp_round+0x20>
    39aa:	bb 0f       	add	r27, r27
    39ac:	40 f4       	brcc	.+16     	; 0x39be <__fp_round+0x20>
    39ae:	bf 2b       	or	r27, r31
    39b0:	11 f4       	brne	.+4      	; 0x39b6 <__fp_round+0x18>
    39b2:	60 ff       	sbrs	r22, 0
    39b4:	04 c0       	rjmp	.+8      	; 0x39be <__fp_round+0x20>
    39b6:	6f 5f       	subi	r22, 0xFF	; 255
    39b8:	7f 4f       	sbci	r23, 0xFF	; 255
    39ba:	8f 4f       	sbci	r24, 0xFF	; 255
    39bc:	9f 4f       	sbci	r25, 0xFF	; 255
    39be:	08 95       	ret

000039c0 <__fp_sinus>:
    39c0:	ef 93       	push	r30
    39c2:	e0 ff       	sbrs	r30, 0
    39c4:	07 c0       	rjmp	.+14     	; 0x39d4 <__fp_sinus+0x14>
    39c6:	a2 ea       	ldi	r26, 0xA2	; 162
    39c8:	2a ed       	ldi	r18, 0xDA	; 218
    39ca:	3f e0       	ldi	r19, 0x0F	; 15
    39cc:	49 ec       	ldi	r20, 0xC9	; 201
    39ce:	5f eb       	ldi	r21, 0xBF	; 191
    39d0:	0e 94 2f 1a 	call	0x345e	; 0x345e <__addsf3x>
    39d4:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    39d8:	0f 90       	pop	r0
    39da:	03 94       	inc	r0
    39dc:	01 fc       	sbrc	r0, 1
    39de:	90 58       	subi	r25, 0x80	; 128
    39e0:	e1 ed       	ldi	r30, 0xD1	; 209
    39e2:	f0 e0       	ldi	r31, 0x00	; 0
    39e4:	0c 94 82 1c 	jmp	0x3904	; 0x3904 <__fp_powsodd>

000039e8 <__fp_split3>:
    39e8:	57 fd       	sbrc	r21, 7
    39ea:	90 58       	subi	r25, 0x80	; 128
    39ec:	44 0f       	add	r20, r20
    39ee:	55 1f       	adc	r21, r21
    39f0:	59 f0       	breq	.+22     	; 0x3a08 <__fp_splitA+0x10>
    39f2:	5f 3f       	cpi	r21, 0xFF	; 255
    39f4:	71 f0       	breq	.+28     	; 0x3a12 <__fp_splitA+0x1a>
    39f6:	47 95       	ror	r20

000039f8 <__fp_splitA>:
    39f8:	88 0f       	add	r24, r24
    39fa:	97 fb       	bst	r25, 7
    39fc:	99 1f       	adc	r25, r25
    39fe:	61 f0       	breq	.+24     	; 0x3a18 <__fp_splitA+0x20>
    3a00:	9f 3f       	cpi	r25, 0xFF	; 255
    3a02:	79 f0       	breq	.+30     	; 0x3a22 <__fp_splitA+0x2a>
    3a04:	87 95       	ror	r24
    3a06:	08 95       	ret
    3a08:	12 16       	cp	r1, r18
    3a0a:	13 06       	cpc	r1, r19
    3a0c:	14 06       	cpc	r1, r20
    3a0e:	55 1f       	adc	r21, r21
    3a10:	f2 cf       	rjmp	.-28     	; 0x39f6 <__fp_split3+0xe>
    3a12:	46 95       	lsr	r20
    3a14:	f1 df       	rcall	.-30     	; 0x39f8 <__fp_splitA>
    3a16:	08 c0       	rjmp	.+16     	; 0x3a28 <__fp_splitA+0x30>
    3a18:	16 16       	cp	r1, r22
    3a1a:	17 06       	cpc	r1, r23
    3a1c:	18 06       	cpc	r1, r24
    3a1e:	99 1f       	adc	r25, r25
    3a20:	f1 cf       	rjmp	.-30     	; 0x3a04 <__fp_splitA+0xc>
    3a22:	86 95       	lsr	r24
    3a24:	71 05       	cpc	r23, r1
    3a26:	61 05       	cpc	r22, r1
    3a28:	08 94       	sec
    3a2a:	08 95       	ret

00003a2c <__fp_zero>:
    3a2c:	e8 94       	clt

00003a2e <__fp_szero>:
    3a2e:	bb 27       	eor	r27, r27
    3a30:	66 27       	eor	r22, r22
    3a32:	77 27       	eor	r23, r23
    3a34:	cb 01       	movw	r24, r22
    3a36:	97 f9       	bld	r25, 7
    3a38:	08 95       	ret

00003a3a <__gesf2>:
    3a3a:	0e 94 20 1c 	call	0x3840	; 0x3840 <__fp_cmp>
    3a3e:	08 f4       	brcc	.+2      	; 0x3a42 <__gesf2+0x8>
    3a40:	8f ef       	ldi	r24, 0xFF	; 255
    3a42:	08 95       	ret

00003a44 <inverse>:
    3a44:	9b 01       	movw	r18, r22
    3a46:	ac 01       	movw	r20, r24
    3a48:	60 e0       	ldi	r22, 0x00	; 0
    3a4a:	70 e0       	ldi	r23, 0x00	; 0
    3a4c:	80 e8       	ldi	r24, 0x80	; 128
    3a4e:	9f e3       	ldi	r25, 0x3F	; 63
    3a50:	0c 94 1b 1b 	jmp	0x3636	; 0x3636 <__divsf3>

00003a54 <__mulsf3>:
    3a54:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__mulsf3x>
    3a58:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>
    3a5c:	0e 94 96 1c 	call	0x392c	; 0x392c <__fp_pscA>
    3a60:	38 f0       	brcs	.+14     	; 0x3a70 <__mulsf3+0x1c>
    3a62:	0e 94 9d 1c 	call	0x393a	; 0x393a <__fp_pscB>
    3a66:	20 f0       	brcs	.+8      	; 0x3a70 <__mulsf3+0x1c>
    3a68:	95 23       	and	r25, r21
    3a6a:	11 f0       	breq	.+4      	; 0x3a70 <__mulsf3+0x1c>
    3a6c:	0c 94 44 1c 	jmp	0x3888	; 0x3888 <__fp_inf>
    3a70:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3a74:	11 24       	eor	r1, r1
    3a76:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>

00003a7a <__mulsf3x>:
    3a7a:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <__fp_split3>
    3a7e:	70 f3       	brcs	.-36     	; 0x3a5c <__mulsf3+0x8>

00003a80 <__mulsf3_pse>:
    3a80:	95 9f       	mul	r25, r21
    3a82:	c1 f3       	breq	.-16     	; 0x3a74 <__mulsf3+0x20>
    3a84:	95 0f       	add	r25, r21
    3a86:	50 e0       	ldi	r21, 0x00	; 0
    3a88:	55 1f       	adc	r21, r21
    3a8a:	62 9f       	mul	r22, r18
    3a8c:	f0 01       	movw	r30, r0
    3a8e:	72 9f       	mul	r23, r18
    3a90:	bb 27       	eor	r27, r27
    3a92:	f0 0d       	add	r31, r0
    3a94:	b1 1d       	adc	r27, r1
    3a96:	63 9f       	mul	r22, r19
    3a98:	aa 27       	eor	r26, r26
    3a9a:	f0 0d       	add	r31, r0
    3a9c:	b1 1d       	adc	r27, r1
    3a9e:	aa 1f       	adc	r26, r26
    3aa0:	64 9f       	mul	r22, r20
    3aa2:	66 27       	eor	r22, r22
    3aa4:	b0 0d       	add	r27, r0
    3aa6:	a1 1d       	adc	r26, r1
    3aa8:	66 1f       	adc	r22, r22
    3aaa:	82 9f       	mul	r24, r18
    3aac:	22 27       	eor	r18, r18
    3aae:	b0 0d       	add	r27, r0
    3ab0:	a1 1d       	adc	r26, r1
    3ab2:	62 1f       	adc	r22, r18
    3ab4:	73 9f       	mul	r23, r19
    3ab6:	b0 0d       	add	r27, r0
    3ab8:	a1 1d       	adc	r26, r1
    3aba:	62 1f       	adc	r22, r18
    3abc:	83 9f       	mul	r24, r19
    3abe:	a0 0d       	add	r26, r0
    3ac0:	61 1d       	adc	r22, r1
    3ac2:	22 1f       	adc	r18, r18
    3ac4:	74 9f       	mul	r23, r20
    3ac6:	33 27       	eor	r19, r19
    3ac8:	a0 0d       	add	r26, r0
    3aca:	61 1d       	adc	r22, r1
    3acc:	23 1f       	adc	r18, r19
    3ace:	84 9f       	mul	r24, r20
    3ad0:	60 0d       	add	r22, r0
    3ad2:	21 1d       	adc	r18, r1
    3ad4:	82 2f       	mov	r24, r18
    3ad6:	76 2f       	mov	r23, r22
    3ad8:	6a 2f       	mov	r22, r26
    3ada:	11 24       	eor	r1, r1
    3adc:	9f 57       	subi	r25, 0x7F	; 127
    3ade:	50 40       	sbci	r21, 0x00	; 0
    3ae0:	9a f0       	brmi	.+38     	; 0x3b08 <__mulsf3_pse+0x88>
    3ae2:	f1 f0       	breq	.+60     	; 0x3b20 <__mulsf3_pse+0xa0>
    3ae4:	88 23       	and	r24, r24
    3ae6:	4a f0       	brmi	.+18     	; 0x3afa <__mulsf3_pse+0x7a>
    3ae8:	ee 0f       	add	r30, r30
    3aea:	ff 1f       	adc	r31, r31
    3aec:	bb 1f       	adc	r27, r27
    3aee:	66 1f       	adc	r22, r22
    3af0:	77 1f       	adc	r23, r23
    3af2:	88 1f       	adc	r24, r24
    3af4:	91 50       	subi	r25, 0x01	; 1
    3af6:	50 40       	sbci	r21, 0x00	; 0
    3af8:	a9 f7       	brne	.-22     	; 0x3ae4 <__mulsf3_pse+0x64>
    3afa:	9e 3f       	cpi	r25, 0xFE	; 254
    3afc:	51 05       	cpc	r21, r1
    3afe:	80 f0       	brcs	.+32     	; 0x3b20 <__mulsf3_pse+0xa0>
    3b00:	0c 94 44 1c 	jmp	0x3888	; 0x3888 <__fp_inf>
    3b04:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    3b08:	5f 3f       	cpi	r21, 0xFF	; 255
    3b0a:	e4 f3       	brlt	.-8      	; 0x3b04 <__mulsf3_pse+0x84>
    3b0c:	98 3e       	cpi	r25, 0xE8	; 232
    3b0e:	d4 f3       	brlt	.-12     	; 0x3b04 <__mulsf3_pse+0x84>
    3b10:	86 95       	lsr	r24
    3b12:	77 95       	ror	r23
    3b14:	67 95       	ror	r22
    3b16:	b7 95       	ror	r27
    3b18:	f7 95       	ror	r31
    3b1a:	e7 95       	ror	r30
    3b1c:	9f 5f       	subi	r25, 0xFF	; 255
    3b1e:	c1 f7       	brne	.-16     	; 0x3b10 <__mulsf3_pse+0x90>
    3b20:	fe 2b       	or	r31, r30
    3b22:	88 0f       	add	r24, r24
    3b24:	91 1d       	adc	r25, r1
    3b26:	96 95       	lsr	r25
    3b28:	87 95       	ror	r24
    3b2a:	97 f9       	bld	r25, 7
    3b2c:	08 95       	ret

00003b2e <sin>:
    3b2e:	9f 93       	push	r25
    3b30:	0e 94 a6 1c 	call	0x394c	; 0x394c <__fp_rempio2>
    3b34:	0f 90       	pop	r0
    3b36:	07 fc       	sbrc	r0, 7
    3b38:	ee 5f       	subi	r30, 0xFE	; 254
    3b3a:	0c 94 e0 1c 	jmp	0x39c0	; 0x39c0 <__fp_sinus>
    3b3e:	19 f4       	brne	.+6      	; 0x3b46 <sin+0x18>
    3b40:	16 f4       	brtc	.+4      	; 0x3b46 <sin+0x18>
    3b42:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3b46:	0c 94 4a 1c 	jmp	0x3894	; 0x3894 <__fp_mpack>

00003b4a <sqrt>:
    3b4a:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3b4e:	b8 f3       	brcs	.-18     	; 0x3b3e <sin+0x10>
    3b50:	99 23       	and	r25, r25
    3b52:	c9 f3       	breq	.-14     	; 0x3b46 <sin+0x18>
    3b54:	b6 f3       	brts	.-20     	; 0x3b42 <sin+0x14>
    3b56:	9f 57       	subi	r25, 0x7F	; 127
    3b58:	55 0b       	sbc	r21, r21
    3b5a:	87 ff       	sbrs	r24, 7
    3b5c:	0e 94 e9 1d 	call	0x3bd2	; 0x3bd2 <__fp_norm2>
    3b60:	00 24       	eor	r0, r0
    3b62:	a0 e6       	ldi	r26, 0x60	; 96
    3b64:	40 ea       	ldi	r20, 0xA0	; 160
    3b66:	90 01       	movw	r18, r0
    3b68:	80 58       	subi	r24, 0x80	; 128
    3b6a:	56 95       	lsr	r21
    3b6c:	97 95       	ror	r25
    3b6e:	28 f4       	brcc	.+10     	; 0x3b7a <sqrt+0x30>
    3b70:	80 5c       	subi	r24, 0xC0	; 192
    3b72:	66 0f       	add	r22, r22
    3b74:	77 1f       	adc	r23, r23
    3b76:	88 1f       	adc	r24, r24
    3b78:	20 f0       	brcs	.+8      	; 0x3b82 <sqrt+0x38>
    3b7a:	26 17       	cp	r18, r22
    3b7c:	37 07       	cpc	r19, r23
    3b7e:	48 07       	cpc	r20, r24
    3b80:	30 f4       	brcc	.+12     	; 0x3b8e <sqrt+0x44>
    3b82:	62 1b       	sub	r22, r18
    3b84:	73 0b       	sbc	r23, r19
    3b86:	84 0b       	sbc	r24, r20
    3b88:	20 29       	or	r18, r0
    3b8a:	31 29       	or	r19, r1
    3b8c:	4a 2b       	or	r20, r26
    3b8e:	a6 95       	lsr	r26
    3b90:	17 94       	ror	r1
    3b92:	07 94       	ror	r0
    3b94:	20 25       	eor	r18, r0
    3b96:	31 25       	eor	r19, r1
    3b98:	4a 27       	eor	r20, r26
    3b9a:	58 f7       	brcc	.-42     	; 0x3b72 <sqrt+0x28>
    3b9c:	66 0f       	add	r22, r22
    3b9e:	77 1f       	adc	r23, r23
    3ba0:	88 1f       	adc	r24, r24
    3ba2:	20 f0       	brcs	.+8      	; 0x3bac <sqrt+0x62>
    3ba4:	26 17       	cp	r18, r22
    3ba6:	37 07       	cpc	r19, r23
    3ba8:	48 07       	cpc	r20, r24
    3baa:	30 f4       	brcc	.+12     	; 0x3bb8 <sqrt+0x6e>
    3bac:	62 0b       	sbc	r22, r18
    3bae:	73 0b       	sbc	r23, r19
    3bb0:	84 0b       	sbc	r24, r20
    3bb2:	20 0d       	add	r18, r0
    3bb4:	31 1d       	adc	r19, r1
    3bb6:	41 1d       	adc	r20, r1
    3bb8:	a0 95       	com	r26
    3bba:	81 f7       	brne	.-32     	; 0x3b9c <sqrt+0x52>
    3bbc:	b9 01       	movw	r22, r18
    3bbe:	84 2f       	mov	r24, r20
    3bc0:	91 58       	subi	r25, 0x81	; 129
    3bc2:	88 0f       	add	r24, r24
    3bc4:	96 95       	lsr	r25
    3bc6:	87 95       	ror	r24
    3bc8:	08 95       	ret

00003bca <square>:
    3bca:	9b 01       	movw	r18, r22
    3bcc:	ac 01       	movw	r20, r24
    3bce:	0c 94 2a 1d 	jmp	0x3a54	; 0x3a54 <__mulsf3>

00003bd2 <__fp_norm2>:
    3bd2:	91 50       	subi	r25, 0x01	; 1
    3bd4:	50 40       	sbci	r21, 0x00	; 0
    3bd6:	66 0f       	add	r22, r22
    3bd8:	77 1f       	adc	r23, r23
    3bda:	88 1f       	adc	r24, r24
    3bdc:	d2 f7       	brpl	.-12     	; 0x3bd2 <__fp_norm2>
    3bde:	08 95       	ret

00003be0 <dtostrf>:
    3be0:	ef 92       	push	r14
    3be2:	0f 93       	push	r16
    3be4:	1f 93       	push	r17
    3be6:	cf 93       	push	r28
    3be8:	df 93       	push	r29
    3bea:	e8 01       	movw	r28, r16
    3bec:	47 fd       	sbrc	r20, 7
    3bee:	02 c0       	rjmp	.+4      	; 0x3bf4 <dtostrf+0x14>
    3bf0:	34 e0       	ldi	r19, 0x04	; 4
    3bf2:	01 c0       	rjmp	.+2      	; 0x3bf6 <dtostrf+0x16>
    3bf4:	34 e1       	ldi	r19, 0x14	; 20
    3bf6:	e4 2f       	mov	r30, r20
    3bf8:	44 0f       	add	r20, r20
    3bfa:	ff 0b       	sbc	r31, r31
    3bfc:	f7 ff       	sbrs	r31, 7
    3bfe:	03 c0       	rjmp	.+6      	; 0x3c06 <dtostrf+0x26>
    3c00:	f1 95       	neg	r31
    3c02:	e1 95       	neg	r30
    3c04:	f1 09       	sbc	r31, r1
    3c06:	e3 2e       	mov	r14, r19
    3c08:	02 2f       	mov	r16, r18
    3c0a:	2e 2f       	mov	r18, r30
    3c0c:	ae 01       	movw	r20, r28
    3c0e:	0e 94 dc 21 	call	0x43b8	; 0x43b8 <dtoa_prf>
    3c12:	ce 01       	movw	r24, r28
    3c14:	df 91       	pop	r29
    3c16:	cf 91       	pop	r28
    3c18:	1f 91       	pop	r17
    3c1a:	0f 91       	pop	r16
    3c1c:	ef 90       	pop	r14
    3c1e:	08 95       	ret

00003c20 <malloc>:
    3c20:	cf 93       	push	r28
    3c22:	df 93       	push	r29
    3c24:	82 30       	cpi	r24, 0x02	; 2
    3c26:	91 05       	cpc	r25, r1
    3c28:	10 f4       	brcc	.+4      	; 0x3c2e <malloc+0xe>
    3c2a:	82 e0       	ldi	r24, 0x02	; 2
    3c2c:	90 e0       	ldi	r25, 0x00	; 0
    3c2e:	e0 91 40 05 	lds	r30, 0x0540
    3c32:	f0 91 41 05 	lds	r31, 0x0541
    3c36:	20 e0       	ldi	r18, 0x00	; 0
    3c38:	30 e0       	ldi	r19, 0x00	; 0
    3c3a:	c0 e0       	ldi	r28, 0x00	; 0
    3c3c:	d0 e0       	ldi	r29, 0x00	; 0
    3c3e:	30 97       	sbiw	r30, 0x00	; 0
    3c40:	11 f1       	breq	.+68     	; 0x3c86 <malloc+0x66>
    3c42:	40 81       	ld	r20, Z
    3c44:	51 81       	ldd	r21, Z+1	; 0x01
    3c46:	48 17       	cp	r20, r24
    3c48:	59 07       	cpc	r21, r25
    3c4a:	c0 f0       	brcs	.+48     	; 0x3c7c <malloc+0x5c>
    3c4c:	48 17       	cp	r20, r24
    3c4e:	59 07       	cpc	r21, r25
    3c50:	61 f4       	brne	.+24     	; 0x3c6a <malloc+0x4a>
    3c52:	82 81       	ldd	r24, Z+2	; 0x02
    3c54:	93 81       	ldd	r25, Z+3	; 0x03
    3c56:	20 97       	sbiw	r28, 0x00	; 0
    3c58:	19 f0       	breq	.+6      	; 0x3c60 <malloc+0x40>
    3c5a:	9b 83       	std	Y+3, r25	; 0x03
    3c5c:	8a 83       	std	Y+2, r24	; 0x02
    3c5e:	2b c0       	rjmp	.+86     	; 0x3cb6 <malloc+0x96>
    3c60:	90 93 41 05 	sts	0x0541, r25
    3c64:	80 93 40 05 	sts	0x0540, r24
    3c68:	26 c0       	rjmp	.+76     	; 0x3cb6 <malloc+0x96>
    3c6a:	21 15       	cp	r18, r1
    3c6c:	31 05       	cpc	r19, r1
    3c6e:	19 f0       	breq	.+6      	; 0x3c76 <malloc+0x56>
    3c70:	42 17       	cp	r20, r18
    3c72:	53 07       	cpc	r21, r19
    3c74:	18 f4       	brcc	.+6      	; 0x3c7c <malloc+0x5c>
    3c76:	9a 01       	movw	r18, r20
    3c78:	be 01       	movw	r22, r28
    3c7a:	df 01       	movw	r26, r30
    3c7c:	ef 01       	movw	r28, r30
    3c7e:	02 80       	ldd	r0, Z+2	; 0x02
    3c80:	f3 81       	ldd	r31, Z+3	; 0x03
    3c82:	e0 2d       	mov	r30, r0
    3c84:	dc cf       	rjmp	.-72     	; 0x3c3e <malloc+0x1e>
    3c86:	21 15       	cp	r18, r1
    3c88:	31 05       	cpc	r19, r1
    3c8a:	09 f1       	breq	.+66     	; 0x3cce <malloc+0xae>
    3c8c:	28 1b       	sub	r18, r24
    3c8e:	39 0b       	sbc	r19, r25
    3c90:	24 30       	cpi	r18, 0x04	; 4
    3c92:	31 05       	cpc	r19, r1
    3c94:	90 f4       	brcc	.+36     	; 0x3cba <malloc+0x9a>
    3c96:	12 96       	adiw	r26, 0x02	; 2
    3c98:	8d 91       	ld	r24, X+
    3c9a:	9c 91       	ld	r25, X
    3c9c:	13 97       	sbiw	r26, 0x03	; 3
    3c9e:	61 15       	cp	r22, r1
    3ca0:	71 05       	cpc	r23, r1
    3ca2:	21 f0       	breq	.+8      	; 0x3cac <malloc+0x8c>
    3ca4:	fb 01       	movw	r30, r22
    3ca6:	93 83       	std	Z+3, r25	; 0x03
    3ca8:	82 83       	std	Z+2, r24	; 0x02
    3caa:	04 c0       	rjmp	.+8      	; 0x3cb4 <malloc+0x94>
    3cac:	90 93 41 05 	sts	0x0541, r25
    3cb0:	80 93 40 05 	sts	0x0540, r24
    3cb4:	fd 01       	movw	r30, r26
    3cb6:	32 96       	adiw	r30, 0x02	; 2
    3cb8:	44 c0       	rjmp	.+136    	; 0x3d42 <malloc+0x122>
    3cba:	fd 01       	movw	r30, r26
    3cbc:	e2 0f       	add	r30, r18
    3cbe:	f3 1f       	adc	r31, r19
    3cc0:	81 93       	st	Z+, r24
    3cc2:	91 93       	st	Z+, r25
    3cc4:	22 50       	subi	r18, 0x02	; 2
    3cc6:	31 09       	sbc	r19, r1
    3cc8:	2d 93       	st	X+, r18
    3cca:	3c 93       	st	X, r19
    3ccc:	3a c0       	rjmp	.+116    	; 0x3d42 <malloc+0x122>
    3cce:	20 91 3e 05 	lds	r18, 0x053E
    3cd2:	30 91 3f 05 	lds	r19, 0x053F
    3cd6:	23 2b       	or	r18, r19
    3cd8:	41 f4       	brne	.+16     	; 0x3cea <malloc+0xca>
    3cda:	20 91 02 01 	lds	r18, 0x0102
    3cde:	30 91 03 01 	lds	r19, 0x0103
    3ce2:	30 93 3f 05 	sts	0x053F, r19
    3ce6:	20 93 3e 05 	sts	0x053E, r18
    3cea:	20 91 00 01 	lds	r18, 0x0100
    3cee:	30 91 01 01 	lds	r19, 0x0101
    3cf2:	21 15       	cp	r18, r1
    3cf4:	31 05       	cpc	r19, r1
    3cf6:	41 f4       	brne	.+16     	; 0x3d08 <malloc+0xe8>
    3cf8:	2d b7       	in	r18, 0x3d	; 61
    3cfa:	3e b7       	in	r19, 0x3e	; 62
    3cfc:	40 91 04 01 	lds	r20, 0x0104
    3d00:	50 91 05 01 	lds	r21, 0x0105
    3d04:	24 1b       	sub	r18, r20
    3d06:	35 0b       	sbc	r19, r21
    3d08:	e0 91 3e 05 	lds	r30, 0x053E
    3d0c:	f0 91 3f 05 	lds	r31, 0x053F
    3d10:	e2 17       	cp	r30, r18
    3d12:	f3 07       	cpc	r31, r19
    3d14:	a0 f4       	brcc	.+40     	; 0x3d3e <malloc+0x11e>
    3d16:	2e 1b       	sub	r18, r30
    3d18:	3f 0b       	sbc	r19, r31
    3d1a:	28 17       	cp	r18, r24
    3d1c:	39 07       	cpc	r19, r25
    3d1e:	78 f0       	brcs	.+30     	; 0x3d3e <malloc+0x11e>
    3d20:	ac 01       	movw	r20, r24
    3d22:	4e 5f       	subi	r20, 0xFE	; 254
    3d24:	5f 4f       	sbci	r21, 0xFF	; 255
    3d26:	24 17       	cp	r18, r20
    3d28:	35 07       	cpc	r19, r21
    3d2a:	48 f0       	brcs	.+18     	; 0x3d3e <malloc+0x11e>
    3d2c:	4e 0f       	add	r20, r30
    3d2e:	5f 1f       	adc	r21, r31
    3d30:	50 93 3f 05 	sts	0x053F, r21
    3d34:	40 93 3e 05 	sts	0x053E, r20
    3d38:	81 93       	st	Z+, r24
    3d3a:	91 93       	st	Z+, r25
    3d3c:	02 c0       	rjmp	.+4      	; 0x3d42 <malloc+0x122>
    3d3e:	e0 e0       	ldi	r30, 0x00	; 0
    3d40:	f0 e0       	ldi	r31, 0x00	; 0
    3d42:	cf 01       	movw	r24, r30
    3d44:	df 91       	pop	r29
    3d46:	cf 91       	pop	r28
    3d48:	08 95       	ret

00003d4a <free>:
    3d4a:	0f 93       	push	r16
    3d4c:	1f 93       	push	r17
    3d4e:	cf 93       	push	r28
    3d50:	df 93       	push	r29
    3d52:	00 97       	sbiw	r24, 0x00	; 0
    3d54:	09 f4       	brne	.+2      	; 0x3d58 <free+0xe>
    3d56:	8c c0       	rjmp	.+280    	; 0x3e70 <free+0x126>
    3d58:	fc 01       	movw	r30, r24
    3d5a:	32 97       	sbiw	r30, 0x02	; 2
    3d5c:	13 82       	std	Z+3, r1	; 0x03
    3d5e:	12 82       	std	Z+2, r1	; 0x02
    3d60:	00 91 40 05 	lds	r16, 0x0540
    3d64:	10 91 41 05 	lds	r17, 0x0541
    3d68:	01 15       	cp	r16, r1
    3d6a:	11 05       	cpc	r17, r1
    3d6c:	81 f4       	brne	.+32     	; 0x3d8e <free+0x44>
    3d6e:	20 81       	ld	r18, Z
    3d70:	31 81       	ldd	r19, Z+1	; 0x01
    3d72:	82 0f       	add	r24, r18
    3d74:	93 1f       	adc	r25, r19
    3d76:	20 91 3e 05 	lds	r18, 0x053E
    3d7a:	30 91 3f 05 	lds	r19, 0x053F
    3d7e:	28 17       	cp	r18, r24
    3d80:	39 07       	cpc	r19, r25
    3d82:	79 f5       	brne	.+94     	; 0x3de2 <free+0x98>
    3d84:	f0 93 3f 05 	sts	0x053F, r31
    3d88:	e0 93 3e 05 	sts	0x053E, r30
    3d8c:	71 c0       	rjmp	.+226    	; 0x3e70 <free+0x126>
    3d8e:	d8 01       	movw	r26, r16
    3d90:	40 e0       	ldi	r20, 0x00	; 0
    3d92:	50 e0       	ldi	r21, 0x00	; 0
    3d94:	ae 17       	cp	r26, r30
    3d96:	bf 07       	cpc	r27, r31
    3d98:	50 f4       	brcc	.+20     	; 0x3dae <free+0x64>
    3d9a:	12 96       	adiw	r26, 0x02	; 2
    3d9c:	2d 91       	ld	r18, X+
    3d9e:	3c 91       	ld	r19, X
    3da0:	13 97       	sbiw	r26, 0x03	; 3
    3da2:	ad 01       	movw	r20, r26
    3da4:	21 15       	cp	r18, r1
    3da6:	31 05       	cpc	r19, r1
    3da8:	09 f1       	breq	.+66     	; 0x3dec <free+0xa2>
    3daa:	d9 01       	movw	r26, r18
    3dac:	f3 cf       	rjmp	.-26     	; 0x3d94 <free+0x4a>
    3dae:	9d 01       	movw	r18, r26
    3db0:	da 01       	movw	r26, r20
    3db2:	33 83       	std	Z+3, r19	; 0x03
    3db4:	22 83       	std	Z+2, r18	; 0x02
    3db6:	60 81       	ld	r22, Z
    3db8:	71 81       	ldd	r23, Z+1	; 0x01
    3dba:	86 0f       	add	r24, r22
    3dbc:	97 1f       	adc	r25, r23
    3dbe:	82 17       	cp	r24, r18
    3dc0:	93 07       	cpc	r25, r19
    3dc2:	69 f4       	brne	.+26     	; 0x3dde <free+0x94>
    3dc4:	ec 01       	movw	r28, r24
    3dc6:	28 81       	ld	r18, Y
    3dc8:	39 81       	ldd	r19, Y+1	; 0x01
    3dca:	26 0f       	add	r18, r22
    3dcc:	37 1f       	adc	r19, r23
    3dce:	2e 5f       	subi	r18, 0xFE	; 254
    3dd0:	3f 4f       	sbci	r19, 0xFF	; 255
    3dd2:	31 83       	std	Z+1, r19	; 0x01
    3dd4:	20 83       	st	Z, r18
    3dd6:	8a 81       	ldd	r24, Y+2	; 0x02
    3dd8:	9b 81       	ldd	r25, Y+3	; 0x03
    3dda:	93 83       	std	Z+3, r25	; 0x03
    3ddc:	82 83       	std	Z+2, r24	; 0x02
    3dde:	45 2b       	or	r20, r21
    3de0:	29 f4       	brne	.+10     	; 0x3dec <free+0xa2>
    3de2:	f0 93 41 05 	sts	0x0541, r31
    3de6:	e0 93 40 05 	sts	0x0540, r30
    3dea:	42 c0       	rjmp	.+132    	; 0x3e70 <free+0x126>
    3dec:	13 96       	adiw	r26, 0x03	; 3
    3dee:	fc 93       	st	X, r31
    3df0:	ee 93       	st	-X, r30
    3df2:	12 97       	sbiw	r26, 0x02	; 2
    3df4:	ed 01       	movw	r28, r26
    3df6:	49 91       	ld	r20, Y+
    3df8:	59 91       	ld	r21, Y+
    3dfa:	9e 01       	movw	r18, r28
    3dfc:	24 0f       	add	r18, r20
    3dfe:	35 1f       	adc	r19, r21
    3e00:	e2 17       	cp	r30, r18
    3e02:	f3 07       	cpc	r31, r19
    3e04:	71 f4       	brne	.+28     	; 0x3e22 <free+0xd8>
    3e06:	80 81       	ld	r24, Z
    3e08:	91 81       	ldd	r25, Z+1	; 0x01
    3e0a:	84 0f       	add	r24, r20
    3e0c:	95 1f       	adc	r25, r21
    3e0e:	02 96       	adiw	r24, 0x02	; 2
    3e10:	11 96       	adiw	r26, 0x01	; 1
    3e12:	9c 93       	st	X, r25
    3e14:	8e 93       	st	-X, r24
    3e16:	82 81       	ldd	r24, Z+2	; 0x02
    3e18:	93 81       	ldd	r25, Z+3	; 0x03
    3e1a:	13 96       	adiw	r26, 0x03	; 3
    3e1c:	9c 93       	st	X, r25
    3e1e:	8e 93       	st	-X, r24
    3e20:	12 97       	sbiw	r26, 0x02	; 2
    3e22:	e0 e0       	ldi	r30, 0x00	; 0
    3e24:	f0 e0       	ldi	r31, 0x00	; 0
    3e26:	d8 01       	movw	r26, r16
    3e28:	12 96       	adiw	r26, 0x02	; 2
    3e2a:	8d 91       	ld	r24, X+
    3e2c:	9c 91       	ld	r25, X
    3e2e:	13 97       	sbiw	r26, 0x03	; 3
    3e30:	00 97       	sbiw	r24, 0x00	; 0
    3e32:	19 f0       	breq	.+6      	; 0x3e3a <free+0xf0>
    3e34:	f8 01       	movw	r30, r16
    3e36:	8c 01       	movw	r16, r24
    3e38:	f6 cf       	rjmp	.-20     	; 0x3e26 <free+0xdc>
    3e3a:	8d 91       	ld	r24, X+
    3e3c:	9c 91       	ld	r25, X
    3e3e:	98 01       	movw	r18, r16
    3e40:	2e 5f       	subi	r18, 0xFE	; 254
    3e42:	3f 4f       	sbci	r19, 0xFF	; 255
    3e44:	82 0f       	add	r24, r18
    3e46:	93 1f       	adc	r25, r19
    3e48:	20 91 3e 05 	lds	r18, 0x053E
    3e4c:	30 91 3f 05 	lds	r19, 0x053F
    3e50:	28 17       	cp	r18, r24
    3e52:	39 07       	cpc	r19, r25
    3e54:	69 f4       	brne	.+26     	; 0x3e70 <free+0x126>
    3e56:	30 97       	sbiw	r30, 0x00	; 0
    3e58:	29 f4       	brne	.+10     	; 0x3e64 <free+0x11a>
    3e5a:	10 92 41 05 	sts	0x0541, r1
    3e5e:	10 92 40 05 	sts	0x0540, r1
    3e62:	02 c0       	rjmp	.+4      	; 0x3e68 <free+0x11e>
    3e64:	13 82       	std	Z+3, r1	; 0x03
    3e66:	12 82       	std	Z+2, r1	; 0x02
    3e68:	10 93 3f 05 	sts	0x053F, r17
    3e6c:	00 93 3e 05 	sts	0x053E, r16
    3e70:	df 91       	pop	r29
    3e72:	cf 91       	pop	r28
    3e74:	1f 91       	pop	r17
    3e76:	0f 91       	pop	r16
    3e78:	08 95       	ret

00003e7a <do_random>:
    3e7a:	8f 92       	push	r8
    3e7c:	9f 92       	push	r9
    3e7e:	af 92       	push	r10
    3e80:	bf 92       	push	r11
    3e82:	cf 92       	push	r12
    3e84:	df 92       	push	r13
    3e86:	ef 92       	push	r14
    3e88:	ff 92       	push	r15
    3e8a:	cf 93       	push	r28
    3e8c:	df 93       	push	r29
    3e8e:	ec 01       	movw	r28, r24
    3e90:	68 81       	ld	r22, Y
    3e92:	79 81       	ldd	r23, Y+1	; 0x01
    3e94:	8a 81       	ldd	r24, Y+2	; 0x02
    3e96:	9b 81       	ldd	r25, Y+3	; 0x03
    3e98:	61 15       	cp	r22, r1
    3e9a:	71 05       	cpc	r23, r1
    3e9c:	81 05       	cpc	r24, r1
    3e9e:	91 05       	cpc	r25, r1
    3ea0:	21 f4       	brne	.+8      	; 0x3eaa <do_random+0x30>
    3ea2:	64 e2       	ldi	r22, 0x24	; 36
    3ea4:	79 ed       	ldi	r23, 0xD9	; 217
    3ea6:	8b e5       	ldi	r24, 0x5B	; 91
    3ea8:	97 e0       	ldi	r25, 0x07	; 7
    3eaa:	2d e1       	ldi	r18, 0x1D	; 29
    3eac:	33 ef       	ldi	r19, 0xF3	; 243
    3eae:	41 e0       	ldi	r20, 0x01	; 1
    3eb0:	50 e0       	ldi	r21, 0x00	; 0
    3eb2:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <__divmodsi4>
    3eb6:	49 01       	movw	r8, r18
    3eb8:	5a 01       	movw	r10, r20
    3eba:	9b 01       	movw	r18, r22
    3ebc:	ac 01       	movw	r20, r24
    3ebe:	a7 ea       	ldi	r26, 0xA7	; 167
    3ec0:	b1 e4       	ldi	r27, 0x41	; 65
    3ec2:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__muluhisi3>
    3ec6:	6b 01       	movw	r12, r22
    3ec8:	7c 01       	movw	r14, r24
    3eca:	ac ee       	ldi	r26, 0xEC	; 236
    3ecc:	b4 ef       	ldi	r27, 0xF4	; 244
    3ece:	a5 01       	movw	r20, r10
    3ed0:	94 01       	movw	r18, r8
    3ed2:	0e 94 bd 25 	call	0x4b7a	; 0x4b7a <__mulohisi3>
    3ed6:	dc 01       	movw	r26, r24
    3ed8:	cb 01       	movw	r24, r22
    3eda:	8c 0d       	add	r24, r12
    3edc:	9d 1d       	adc	r25, r13
    3ede:	ae 1d       	adc	r26, r14
    3ee0:	bf 1d       	adc	r27, r15
    3ee2:	b7 ff       	sbrs	r27, 7
    3ee4:	03 c0       	rjmp	.+6      	; 0x3eec <do_random+0x72>
    3ee6:	01 97       	sbiw	r24, 0x01	; 1
    3ee8:	a1 09       	sbc	r26, r1
    3eea:	b0 48       	sbci	r27, 0x80	; 128
    3eec:	88 83       	st	Y, r24
    3eee:	99 83       	std	Y+1, r25	; 0x01
    3ef0:	aa 83       	std	Y+2, r26	; 0x02
    3ef2:	bb 83       	std	Y+3, r27	; 0x03
    3ef4:	bc 01       	movw	r22, r24
    3ef6:	cd 01       	movw	r24, r26
    3ef8:	9f 77       	andi	r25, 0x7F	; 127
    3efa:	df 91       	pop	r29
    3efc:	cf 91       	pop	r28
    3efe:	ff 90       	pop	r15
    3f00:	ef 90       	pop	r14
    3f02:	df 90       	pop	r13
    3f04:	cf 90       	pop	r12
    3f06:	bf 90       	pop	r11
    3f08:	af 90       	pop	r10
    3f0a:	9f 90       	pop	r9
    3f0c:	8f 90       	pop	r8
    3f0e:	08 95       	ret

00003f10 <random_r>:
    3f10:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <do_random>
    3f14:	08 95       	ret

00003f16 <random>:
    3f16:	86 e0       	ldi	r24, 0x06	; 6
    3f18:	91 e0       	ldi	r25, 0x01	; 1
    3f1a:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <do_random>
    3f1e:	08 95       	ret

00003f20 <srandom>:
    3f20:	60 93 06 01 	sts	0x0106, r22
    3f24:	70 93 07 01 	sts	0x0107, r23
    3f28:	80 93 08 01 	sts	0x0108, r24
    3f2c:	90 93 09 01 	sts	0x0109, r25
    3f30:	08 95       	ret

00003f32 <realloc>:
    3f32:	a0 e0       	ldi	r26, 0x00	; 0
    3f34:	b0 e0       	ldi	r27, 0x00	; 0
    3f36:	ef e9       	ldi	r30, 0x9F	; 159
    3f38:	ff e1       	ldi	r31, 0x1F	; 31
    3f3a:	0c 94 c6 25 	jmp	0x4b8c	; 0x4b8c <__prologue_saves__+0x8>
    3f3e:	ec 01       	movw	r28, r24
    3f40:	00 97       	sbiw	r24, 0x00	; 0
    3f42:	21 f4       	brne	.+8      	; 0x3f4c <realloc+0x1a>
    3f44:	cb 01       	movw	r24, r22
    3f46:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <malloc>
    3f4a:	b8 c0       	rjmp	.+368    	; 0x40bc <realloc+0x18a>
    3f4c:	fc 01       	movw	r30, r24
    3f4e:	e6 0f       	add	r30, r22
    3f50:	f7 1f       	adc	r31, r23
    3f52:	9c 01       	movw	r18, r24
    3f54:	22 50       	subi	r18, 0x02	; 2
    3f56:	31 09       	sbc	r19, r1
    3f58:	e2 17       	cp	r30, r18
    3f5a:	f3 07       	cpc	r31, r19
    3f5c:	08 f4       	brcc	.+2      	; 0x3f60 <realloc+0x2e>
    3f5e:	ac c0       	rjmp	.+344    	; 0x40b8 <realloc+0x186>
    3f60:	d9 01       	movw	r26, r18
    3f62:	0d 91       	ld	r16, X+
    3f64:	1c 91       	ld	r17, X
    3f66:	11 97       	sbiw	r26, 0x01	; 1
    3f68:	06 17       	cp	r16, r22
    3f6a:	17 07       	cpc	r17, r23
    3f6c:	b0 f0       	brcs	.+44     	; 0x3f9a <realloc+0x68>
    3f6e:	05 30       	cpi	r16, 0x05	; 5
    3f70:	11 05       	cpc	r17, r1
    3f72:	08 f4       	brcc	.+2      	; 0x3f76 <realloc+0x44>
    3f74:	9f c0       	rjmp	.+318    	; 0x40b4 <realloc+0x182>
    3f76:	c8 01       	movw	r24, r16
    3f78:	04 97       	sbiw	r24, 0x04	; 4
    3f7a:	86 17       	cp	r24, r22
    3f7c:	97 07       	cpc	r25, r23
    3f7e:	08 f4       	brcc	.+2      	; 0x3f82 <realloc+0x50>
    3f80:	99 c0       	rjmp	.+306    	; 0x40b4 <realloc+0x182>
    3f82:	02 50       	subi	r16, 0x02	; 2
    3f84:	11 09       	sbc	r17, r1
    3f86:	06 1b       	sub	r16, r22
    3f88:	17 0b       	sbc	r17, r23
    3f8a:	01 93       	st	Z+, r16
    3f8c:	11 93       	st	Z+, r17
    3f8e:	6d 93       	st	X+, r22
    3f90:	7c 93       	st	X, r23
    3f92:	cf 01       	movw	r24, r30
    3f94:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    3f98:	8d c0       	rjmp	.+282    	; 0x40b4 <realloc+0x182>
    3f9a:	5b 01       	movw	r10, r22
    3f9c:	a0 1a       	sub	r10, r16
    3f9e:	b1 0a       	sbc	r11, r17
    3fa0:	4c 01       	movw	r8, r24
    3fa2:	80 0e       	add	r8, r16
    3fa4:	91 1e       	adc	r9, r17
    3fa6:	a0 91 40 05 	lds	r26, 0x0540
    3faa:	b0 91 41 05 	lds	r27, 0x0541
    3fae:	40 e0       	ldi	r20, 0x00	; 0
    3fb0:	50 e0       	ldi	r21, 0x00	; 0
    3fb2:	e1 2c       	mov	r14, r1
    3fb4:	f1 2c       	mov	r15, r1
    3fb6:	10 97       	sbiw	r26, 0x00	; 0
    3fb8:	09 f4       	brne	.+2      	; 0x3fbc <realloc+0x8a>
    3fba:	4a c0       	rjmp	.+148    	; 0x4050 <realloc+0x11e>
    3fbc:	a8 15       	cp	r26, r8
    3fbe:	b9 05       	cpc	r27, r9
    3fc0:	d1 f5       	brne	.+116    	; 0x4036 <realloc+0x104>
    3fc2:	6d 90       	ld	r6, X+
    3fc4:	7c 90       	ld	r7, X
    3fc6:	11 97       	sbiw	r26, 0x01	; 1
    3fc8:	63 01       	movw	r12, r6
    3fca:	82 e0       	ldi	r24, 0x02	; 2
    3fcc:	c8 0e       	add	r12, r24
    3fce:	d1 1c       	adc	r13, r1
    3fd0:	ca 14       	cp	r12, r10
    3fd2:	db 04       	cpc	r13, r11
    3fd4:	80 f1       	brcs	.+96     	; 0x4036 <realloc+0x104>
    3fd6:	a3 01       	movw	r20, r6
    3fd8:	4a 19       	sub	r20, r10
    3fda:	5b 09       	sbc	r21, r11
    3fdc:	6a 01       	movw	r12, r20
    3fde:	82 e0       	ldi	r24, 0x02	; 2
    3fe0:	c8 0e       	add	r12, r24
    3fe2:	d1 1c       	adc	r13, r1
    3fe4:	12 96       	adiw	r26, 0x02	; 2
    3fe6:	bc 90       	ld	r11, X
    3fe8:	12 97       	sbiw	r26, 0x02	; 2
    3fea:	13 96       	adiw	r26, 0x03	; 3
    3fec:	ac 91       	ld	r26, X
    3fee:	b5 e0       	ldi	r27, 0x05	; 5
    3ff0:	cb 16       	cp	r12, r27
    3ff2:	d1 04       	cpc	r13, r1
    3ff4:	40 f0       	brcs	.+16     	; 0x4006 <realloc+0xd4>
    3ff6:	b2 82       	std	Z+2, r11	; 0x02
    3ff8:	a3 83       	std	Z+3, r26	; 0x03
    3ffa:	51 83       	std	Z+1, r21	; 0x01
    3ffc:	40 83       	st	Z, r20
    3ffe:	d9 01       	movw	r26, r18
    4000:	6d 93       	st	X+, r22
    4002:	7c 93       	st	X, r23
    4004:	0a c0       	rjmp	.+20     	; 0x401a <realloc+0xe8>
    4006:	0e 5f       	subi	r16, 0xFE	; 254
    4008:	1f 4f       	sbci	r17, 0xFF	; 255
    400a:	c3 01       	movw	r24, r6
    400c:	80 0f       	add	r24, r16
    400e:	91 1f       	adc	r25, r17
    4010:	f9 01       	movw	r30, r18
    4012:	91 83       	std	Z+1, r25	; 0x01
    4014:	80 83       	st	Z, r24
    4016:	eb 2d       	mov	r30, r11
    4018:	fa 2f       	mov	r31, r26
    401a:	e1 14       	cp	r14, r1
    401c:	f1 04       	cpc	r15, r1
    401e:	31 f0       	breq	.+12     	; 0x402c <realloc+0xfa>
    4020:	d7 01       	movw	r26, r14
    4022:	13 96       	adiw	r26, 0x03	; 3
    4024:	fc 93       	st	X, r31
    4026:	ee 93       	st	-X, r30
    4028:	12 97       	sbiw	r26, 0x02	; 2
    402a:	44 c0       	rjmp	.+136    	; 0x40b4 <realloc+0x182>
    402c:	f0 93 41 05 	sts	0x0541, r31
    4030:	e0 93 40 05 	sts	0x0540, r30
    4034:	3f c0       	rjmp	.+126    	; 0x40b4 <realloc+0x182>
    4036:	8d 91       	ld	r24, X+
    4038:	9c 91       	ld	r25, X
    403a:	11 97       	sbiw	r26, 0x01	; 1
    403c:	48 17       	cp	r20, r24
    403e:	59 07       	cpc	r21, r25
    4040:	08 f4       	brcc	.+2      	; 0x4044 <realloc+0x112>
    4042:	ac 01       	movw	r20, r24
    4044:	7d 01       	movw	r14, r26
    4046:	12 96       	adiw	r26, 0x02	; 2
    4048:	0d 90       	ld	r0, X+
    404a:	bc 91       	ld	r27, X
    404c:	a0 2d       	mov	r26, r0
    404e:	b3 cf       	rjmp	.-154    	; 0x3fb6 <realloc+0x84>
    4050:	80 91 3e 05 	lds	r24, 0x053E
    4054:	90 91 3f 05 	lds	r25, 0x053F
    4058:	88 15       	cp	r24, r8
    405a:	99 05       	cpc	r25, r9
    405c:	e1 f4       	brne	.+56     	; 0x4096 <realloc+0x164>
    405e:	46 17       	cp	r20, r22
    4060:	57 07       	cpc	r21, r23
    4062:	c8 f4       	brcc	.+50     	; 0x4096 <realloc+0x164>
    4064:	80 91 00 01 	lds	r24, 0x0100
    4068:	90 91 01 01 	lds	r25, 0x0101
    406c:	00 97       	sbiw	r24, 0x00	; 0
    406e:	41 f4       	brne	.+16     	; 0x4080 <realloc+0x14e>
    4070:	8d b7       	in	r24, 0x3d	; 61
    4072:	9e b7       	in	r25, 0x3e	; 62
    4074:	40 91 04 01 	lds	r20, 0x0104
    4078:	50 91 05 01 	lds	r21, 0x0105
    407c:	84 1b       	sub	r24, r20
    407e:	95 0b       	sbc	r25, r21
    4080:	e8 17       	cp	r30, r24
    4082:	f9 07       	cpc	r31, r25
    4084:	c8 f4       	brcc	.+50     	; 0x40b8 <realloc+0x186>
    4086:	f0 93 3f 05 	sts	0x053F, r31
    408a:	e0 93 3e 05 	sts	0x053E, r30
    408e:	f9 01       	movw	r30, r18
    4090:	71 83       	std	Z+1, r23	; 0x01
    4092:	60 83       	st	Z, r22
    4094:	0f c0       	rjmp	.+30     	; 0x40b4 <realloc+0x182>
    4096:	cb 01       	movw	r24, r22
    4098:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <malloc>
    409c:	7c 01       	movw	r14, r24
    409e:	00 97       	sbiw	r24, 0x00	; 0
    40a0:	59 f0       	breq	.+22     	; 0x40b8 <realloc+0x186>
    40a2:	a8 01       	movw	r20, r16
    40a4:	be 01       	movw	r22, r28
    40a6:	0e 94 93 21 	call	0x4326	; 0x4326 <memcpy>
    40aa:	ce 01       	movw	r24, r28
    40ac:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <free>
    40b0:	c7 01       	movw	r24, r14
    40b2:	04 c0       	rjmp	.+8      	; 0x40bc <realloc+0x18a>
    40b4:	ce 01       	movw	r24, r28
    40b6:	02 c0       	rjmp	.+4      	; 0x40bc <realloc+0x18a>
    40b8:	80 e0       	ldi	r24, 0x00	; 0
    40ba:	90 e0       	ldi	r25, 0x00	; 0
    40bc:	cd b7       	in	r28, 0x3d	; 61
    40be:	de b7       	in	r29, 0x3e	; 62
    40c0:	ee e0       	ldi	r30, 0x0E	; 14
    40c2:	0c 94 e2 25 	jmp	0x4bc4	; 0x4bc4 <__epilogue_restores__+0x8>

000040c6 <strtol>:
    40c6:	a0 e0       	ldi	r26, 0x00	; 0
    40c8:	b0 e0       	ldi	r27, 0x00	; 0
    40ca:	e9 e6       	ldi	r30, 0x69	; 105
    40cc:	f0 e2       	ldi	r31, 0x20	; 32
    40ce:	0c 94 c2 25 	jmp	0x4b84	; 0x4b84 <__prologue_saves__>
    40d2:	5c 01       	movw	r10, r24
    40d4:	6b 01       	movw	r12, r22
    40d6:	7a 01       	movw	r14, r20
    40d8:	61 15       	cp	r22, r1
    40da:	71 05       	cpc	r23, r1
    40dc:	19 f0       	breq	.+6      	; 0x40e4 <strtol+0x1e>
    40de:	fb 01       	movw	r30, r22
    40e0:	91 83       	std	Z+1, r25	; 0x01
    40e2:	80 83       	st	Z, r24
    40e4:	e1 14       	cp	r14, r1
    40e6:	f1 04       	cpc	r15, r1
    40e8:	29 f0       	breq	.+10     	; 0x40f4 <strtol+0x2e>
    40ea:	c7 01       	movw	r24, r14
    40ec:	02 97       	sbiw	r24, 0x02	; 2
    40ee:	83 97       	sbiw	r24, 0x23	; 35
    40f0:	08 f0       	brcs	.+2      	; 0x40f4 <strtol+0x2e>
    40f2:	f1 c0       	rjmp	.+482    	; 0x42d6 <strtol+0x210>
    40f4:	e5 01       	movw	r28, r10
    40f6:	21 96       	adiw	r28, 0x01	; 1
    40f8:	f5 01       	movw	r30, r10
    40fa:	10 81       	ld	r17, Z
    40fc:	81 2f       	mov	r24, r17
    40fe:	90 e0       	ldi	r25, 0x00	; 0
    4100:	0e 94 78 21 	call	0x42f0	; 0x42f0 <isspace>
    4104:	89 2b       	or	r24, r25
    4106:	11 f0       	breq	.+4      	; 0x410c <strtol+0x46>
    4108:	5e 01       	movw	r10, r28
    410a:	f4 cf       	rjmp	.-24     	; 0x40f4 <strtol+0x2e>
    410c:	1d 32       	cpi	r17, 0x2D	; 45
    410e:	29 f4       	brne	.+10     	; 0x411a <strtol+0x54>
    4110:	21 96       	adiw	r28, 0x01	; 1
    4112:	f5 01       	movw	r30, r10
    4114:	11 81       	ldd	r17, Z+1	; 0x01
    4116:	01 e0       	ldi	r16, 0x01	; 1
    4118:	07 c0       	rjmp	.+14     	; 0x4128 <strtol+0x62>
    411a:	1b 32       	cpi	r17, 0x2B	; 43
    411c:	21 f4       	brne	.+8      	; 0x4126 <strtol+0x60>
    411e:	e5 01       	movw	r28, r10
    4120:	22 96       	adiw	r28, 0x02	; 2
    4122:	f5 01       	movw	r30, r10
    4124:	11 81       	ldd	r17, Z+1	; 0x01
    4126:	00 e0       	ldi	r16, 0x00	; 0
    4128:	e1 14       	cp	r14, r1
    412a:	f1 04       	cpc	r15, r1
    412c:	59 f1       	breq	.+86     	; 0x4184 <strtol+0xbe>
    412e:	f0 e1       	ldi	r31, 0x10	; 16
    4130:	ef 16       	cp	r14, r31
    4132:	f1 04       	cpc	r15, r1
    4134:	61 f4       	brne	.+24     	; 0x414e <strtol+0x88>
    4136:	10 33       	cpi	r17, 0x30	; 48
    4138:	e1 f4       	brne	.+56     	; 0x4172 <strtol+0xac>
    413a:	88 81       	ld	r24, Y
    413c:	8f 7d       	andi	r24, 0xDF	; 223
    413e:	88 35       	cpi	r24, 0x58	; 88
    4140:	69 f5       	brne	.+90     	; 0x419c <strtol+0xd6>
    4142:	19 81       	ldd	r17, Y+1	; 0x01
    4144:	22 96       	adiw	r28, 0x02	; 2
    4146:	02 60       	ori	r16, 0x02	; 2
    4148:	70 e1       	ldi	r23, 0x10	; 16
    414a:	e7 2e       	mov	r14, r23
    414c:	f1 2c       	mov	r15, r1
    414e:	88 e0       	ldi	r24, 0x08	; 8
    4150:	e8 16       	cp	r14, r24
    4152:	f1 04       	cpc	r15, r1
    4154:	39 f1       	breq	.+78     	; 0x41a4 <strtol+0xde>
    4156:	2c f4       	brge	.+10     	; 0x4162 <strtol+0x9c>
    4158:	f2 e0       	ldi	r31, 0x02	; 2
    415a:	ef 16       	cp	r14, r31
    415c:	f1 04       	cpc	r15, r1
    415e:	c9 f1       	breq	.+114    	; 0x41d2 <strtol+0x10c>
    4160:	2a c0       	rjmp	.+84     	; 0x41b6 <strtol+0xf0>
    4162:	8a e0       	ldi	r24, 0x0A	; 10
    4164:	e8 16       	cp	r14, r24
    4166:	f1 04       	cpc	r15, r1
    4168:	79 f0       	breq	.+30     	; 0x4188 <strtol+0xc2>
    416a:	e0 e1       	ldi	r30, 0x10	; 16
    416c:	ee 16       	cp	r14, r30
    416e:	f1 04       	cpc	r15, r1
    4170:	11 f5       	brne	.+68     	; 0x41b6 <strtol+0xf0>
    4172:	50 e1       	ldi	r21, 0x10	; 16
    4174:	e5 2e       	mov	r14, r21
    4176:	f1 2c       	mov	r15, r1
    4178:	81 2c       	mov	r8, r1
    417a:	91 2c       	mov	r9, r1
    417c:	a1 2c       	mov	r10, r1
    417e:	68 e0       	ldi	r22, 0x08	; 8
    4180:	b6 2e       	mov	r11, r22
    4182:	2c c0       	rjmp	.+88     	; 0x41dc <strtol+0x116>
    4184:	10 33       	cpi	r17, 0x30	; 48
    4186:	c9 f2       	breq	.-78     	; 0x413a <strtol+0x74>
    4188:	3a e0       	ldi	r19, 0x0A	; 10
    418a:	e3 2e       	mov	r14, r19
    418c:	f1 2c       	mov	r15, r1
    418e:	4c ec       	ldi	r20, 0xCC	; 204
    4190:	84 2e       	mov	r8, r20
    4192:	98 2c       	mov	r9, r8
    4194:	a8 2c       	mov	r10, r8
    4196:	4c e0       	ldi	r20, 0x0C	; 12
    4198:	b4 2e       	mov	r11, r20
    419a:	20 c0       	rjmp	.+64     	; 0x41dc <strtol+0x116>
    419c:	10 e3       	ldi	r17, 0x30	; 48
    419e:	e1 14       	cp	r14, r1
    41a0:	f1 04       	cpc	r15, r1
    41a2:	a9 f6       	brne	.-86     	; 0x414e <strtol+0x88>
    41a4:	98 e0       	ldi	r25, 0x08	; 8
    41a6:	e9 2e       	mov	r14, r25
    41a8:	f1 2c       	mov	r15, r1
    41aa:	81 2c       	mov	r8, r1
    41ac:	91 2c       	mov	r9, r1
    41ae:	a1 2c       	mov	r10, r1
    41b0:	20 e1       	ldi	r18, 0x10	; 16
    41b2:	b2 2e       	mov	r11, r18
    41b4:	13 c0       	rjmp	.+38     	; 0x41dc <strtol+0x116>
    41b6:	60 e0       	ldi	r22, 0x00	; 0
    41b8:	70 e0       	ldi	r23, 0x00	; 0
    41ba:	80 e0       	ldi	r24, 0x00	; 0
    41bc:	90 e8       	ldi	r25, 0x80	; 128
    41be:	97 01       	movw	r18, r14
    41c0:	0f 2c       	mov	r0, r15
    41c2:	00 0c       	add	r0, r0
    41c4:	44 0b       	sbc	r20, r20
    41c6:	55 0b       	sbc	r21, r21
    41c8:	0e 94 b6 19 	call	0x336c	; 0x336c <__udivmodsi4>
    41cc:	49 01       	movw	r8, r18
    41ce:	5a 01       	movw	r10, r20
    41d0:	05 c0       	rjmp	.+10     	; 0x41dc <strtol+0x116>
    41d2:	81 2c       	mov	r8, r1
    41d4:	91 2c       	mov	r9, r1
    41d6:	a1 2c       	mov	r10, r1
    41d8:	80 e4       	ldi	r24, 0x40	; 64
    41da:	b8 2e       	mov	r11, r24
    41dc:	60 e0       	ldi	r22, 0x00	; 0
    41de:	20 e0       	ldi	r18, 0x00	; 0
    41e0:	30 e0       	ldi	r19, 0x00	; 0
    41e2:	a9 01       	movw	r20, r18
    41e4:	27 01       	movw	r4, r14
    41e6:	0f 2c       	mov	r0, r15
    41e8:	00 0c       	add	r0, r0
    41ea:	66 08       	sbc	r6, r6
    41ec:	77 08       	sbc	r7, r7
    41ee:	1e 01       	movw	r2, r28
    41f0:	e0 ed       	ldi	r30, 0xD0	; 208
    41f2:	e1 0f       	add	r30, r17
    41f4:	ea 30       	cpi	r30, 0x0A	; 10
    41f6:	60 f0       	brcs	.+24     	; 0x4210 <strtol+0x14a>
    41f8:	8f eb       	ldi	r24, 0xBF	; 191
    41fa:	81 0f       	add	r24, r17
    41fc:	8a 31       	cpi	r24, 0x1A	; 26
    41fe:	10 f4       	brcc	.+4      	; 0x4204 <strtol+0x13e>
    4200:	e9 ec       	ldi	r30, 0xC9	; 201
    4202:	05 c0       	rjmp	.+10     	; 0x420e <strtol+0x148>
    4204:	8f e9       	ldi	r24, 0x9F	; 159
    4206:	81 0f       	add	r24, r17
    4208:	8a 31       	cpi	r24, 0x1A	; 26
    420a:	28 f5       	brcc	.+74     	; 0x4256 <strtol+0x190>
    420c:	e9 ea       	ldi	r30, 0xA9	; 169
    420e:	e1 0f       	add	r30, r17
    4210:	8e 2f       	mov	r24, r30
    4212:	90 e0       	ldi	r25, 0x00	; 0
    4214:	8e 15       	cp	r24, r14
    4216:	9f 05       	cpc	r25, r15
    4218:	f4 f4       	brge	.+60     	; 0x4256 <strtol+0x190>
    421a:	67 fd       	sbrc	r22, 7
    421c:	18 c0       	rjmp	.+48     	; 0x424e <strtol+0x188>
    421e:	82 16       	cp	r8, r18
    4220:	93 06       	cpc	r9, r19
    4222:	a4 06       	cpc	r10, r20
    4224:	b5 06       	cpc	r11, r21
    4226:	90 f0       	brcs	.+36     	; 0x424c <strtol+0x186>
    4228:	c3 01       	movw	r24, r6
    422a:	b2 01       	movw	r22, r4
    422c:	0e 94 7e 19 	call	0x32fc	; 0x32fc <__mulsi3>
    4230:	9b 01       	movw	r18, r22
    4232:	ac 01       	movw	r20, r24
    4234:	2e 0f       	add	r18, r30
    4236:	31 1d       	adc	r19, r1
    4238:	41 1d       	adc	r20, r1
    423a:	51 1d       	adc	r21, r1
    423c:	21 30       	cpi	r18, 0x01	; 1
    423e:	31 05       	cpc	r19, r1
    4240:	41 05       	cpc	r20, r1
    4242:	f0 e8       	ldi	r31, 0x80	; 128
    4244:	5f 07       	cpc	r21, r31
    4246:	10 f4       	brcc	.+4      	; 0x424c <strtol+0x186>
    4248:	61 e0       	ldi	r22, 0x01	; 1
    424a:	01 c0       	rjmp	.+2      	; 0x424e <strtol+0x188>
    424c:	6f ef       	ldi	r22, 0xFF	; 255
    424e:	21 96       	adiw	r28, 0x01	; 1
    4250:	f1 01       	movw	r30, r2
    4252:	10 81       	ld	r17, Z
    4254:	cc cf       	rjmp	.-104    	; 0x41ee <strtol+0x128>
    4256:	80 2f       	mov	r24, r16
    4258:	81 70       	andi	r24, 0x01	; 1
    425a:	c1 14       	cp	r12, r1
    425c:	d1 04       	cpc	r13, r1
    425e:	71 f0       	breq	.+28     	; 0x427c <strtol+0x1b6>
    4260:	66 23       	and	r22, r22
    4262:	29 f0       	breq	.+10     	; 0x426e <strtol+0x1a8>
    4264:	21 97       	sbiw	r28, 0x01	; 1
    4266:	f6 01       	movw	r30, r12
    4268:	d1 83       	std	Z+1, r29	; 0x01
    426a:	c0 83       	st	Z, r28
    426c:	07 c0       	rjmp	.+14     	; 0x427c <strtol+0x1b6>
    426e:	01 ff       	sbrs	r16, 1
    4270:	19 c0       	rjmp	.+50     	; 0x42a4 <strtol+0x1de>
    4272:	22 97       	sbiw	r28, 0x02	; 2
    4274:	f6 01       	movw	r30, r12
    4276:	d1 83       	std	Z+1, r29	; 0x01
    4278:	c0 83       	st	Z, r28
    427a:	14 c0       	rjmp	.+40     	; 0x42a4 <strtol+0x1de>
    427c:	67 ff       	sbrs	r22, 7
    427e:	12 c0       	rjmp	.+36     	; 0x42a4 <strtol+0x1de>
    4280:	81 11       	cpse	r24, r1
    4282:	05 c0       	rjmp	.+10     	; 0x428e <strtol+0x1c8>
    4284:	2f ef       	ldi	r18, 0xFF	; 255
    4286:	3f ef       	ldi	r19, 0xFF	; 255
    4288:	4f ef       	ldi	r20, 0xFF	; 255
    428a:	5f e7       	ldi	r21, 0x7F	; 127
    428c:	04 c0       	rjmp	.+8      	; 0x4296 <strtol+0x1d0>
    428e:	20 e0       	ldi	r18, 0x00	; 0
    4290:	30 e0       	ldi	r19, 0x00	; 0
    4292:	40 e0       	ldi	r20, 0x00	; 0
    4294:	50 e8       	ldi	r21, 0x80	; 128
    4296:	82 e2       	ldi	r24, 0x22	; 34
    4298:	90 e0       	ldi	r25, 0x00	; 0
    429a:	90 93 43 05 	sts	0x0543, r25
    429e:	80 93 42 05 	sts	0x0542, r24
    42a2:	16 c0       	rjmp	.+44     	; 0x42d0 <strtol+0x20a>
    42a4:	88 23       	and	r24, r24
    42a6:	41 f0       	breq	.+16     	; 0x42b8 <strtol+0x1f2>
    42a8:	50 95       	com	r21
    42aa:	40 95       	com	r20
    42ac:	30 95       	com	r19
    42ae:	21 95       	neg	r18
    42b0:	3f 4f       	sbci	r19, 0xFF	; 255
    42b2:	4f 4f       	sbci	r20, 0xFF	; 255
    42b4:	5f 4f       	sbci	r21, 0xFF	; 255
    42b6:	0c c0       	rjmp	.+24     	; 0x42d0 <strtol+0x20a>
    42b8:	57 ff       	sbrs	r21, 7
    42ba:	0a c0       	rjmp	.+20     	; 0x42d0 <strtol+0x20a>
    42bc:	82 e2       	ldi	r24, 0x22	; 34
    42be:	90 e0       	ldi	r25, 0x00	; 0
    42c0:	90 93 43 05 	sts	0x0543, r25
    42c4:	80 93 42 05 	sts	0x0542, r24
    42c8:	2f ef       	ldi	r18, 0xFF	; 255
    42ca:	3f ef       	ldi	r19, 0xFF	; 255
    42cc:	4f ef       	ldi	r20, 0xFF	; 255
    42ce:	5f e7       	ldi	r21, 0x7F	; 127
    42d0:	b9 01       	movw	r22, r18
    42d2:	ca 01       	movw	r24, r20
    42d4:	04 c0       	rjmp	.+8      	; 0x42de <strtol+0x218>
    42d6:	60 e0       	ldi	r22, 0x00	; 0
    42d8:	70 e0       	ldi	r23, 0x00	; 0
    42da:	80 e0       	ldi	r24, 0x00	; 0
    42dc:	90 e0       	ldi	r25, 0x00	; 0
    42de:	cd b7       	in	r28, 0x3d	; 61
    42e0:	de b7       	in	r29, 0x3e	; 62
    42e2:	e2 e1       	ldi	r30, 0x12	; 18
    42e4:	0c 94 de 25 	jmp	0x4bbc	; 0x4bbc <__epilogue_restores__>

000042e8 <atof>:
    42e8:	66 27       	eor	r22, r22
    42ea:	77 27       	eor	r23, r23
    42ec:	0c 94 6a 23 	jmp	0x46d4	; 0x46d4 <strtod>

000042f0 <isspace>:
    42f0:	91 11       	cpse	r25, r1
    42f2:	0c 94 9f 25 	jmp	0x4b3e	; 0x4b3e <__ctype_isfalse>
    42f6:	80 32       	cpi	r24, 0x20	; 32
    42f8:	19 f0       	breq	.+6      	; 0x4300 <isspace+0x10>
    42fa:	89 50       	subi	r24, 0x09	; 9
    42fc:	85 50       	subi	r24, 0x05	; 5
    42fe:	c8 f7       	brcc	.-14     	; 0x42f2 <isspace+0x2>
    4300:	08 95       	ret

00004302 <strtok>:
    4302:	4c e1       	ldi	r20, 0x1C	; 28
    4304:	52 e0       	ldi	r21, 0x02	; 2
    4306:	0e 94 b5 21 	call	0x436a	; 0x436a <strtok_r>
    430a:	08 95       	ret

0000430c <memcmp>:
    430c:	fb 01       	movw	r30, r22
    430e:	dc 01       	movw	r26, r24
    4310:	04 c0       	rjmp	.+8      	; 0x431a <memcmp+0xe>
    4312:	8d 91       	ld	r24, X+
    4314:	01 90       	ld	r0, Z+
    4316:	80 19       	sub	r24, r0
    4318:	21 f4       	brne	.+8      	; 0x4322 <memcmp+0x16>
    431a:	41 50       	subi	r20, 0x01	; 1
    431c:	50 40       	sbci	r21, 0x00	; 0
    431e:	c8 f7       	brcc	.-14     	; 0x4312 <memcmp+0x6>
    4320:	88 1b       	sub	r24, r24
    4322:	99 0b       	sbc	r25, r25
    4324:	08 95       	ret

00004326 <memcpy>:
    4326:	fb 01       	movw	r30, r22
    4328:	dc 01       	movw	r26, r24
    432a:	02 c0       	rjmp	.+4      	; 0x4330 <memcpy+0xa>
    432c:	01 90       	ld	r0, Z+
    432e:	0d 92       	st	X+, r0
    4330:	41 50       	subi	r20, 0x01	; 1
    4332:	50 40       	sbci	r21, 0x00	; 0
    4334:	d8 f7       	brcc	.-10     	; 0x432c <memcpy+0x6>
    4336:	08 95       	ret

00004338 <memset>:
    4338:	dc 01       	movw	r26, r24
    433a:	01 c0       	rjmp	.+2      	; 0x433e <memset+0x6>
    433c:	6d 93       	st	X+, r22
    433e:	41 50       	subi	r20, 0x01	; 1
    4340:	50 40       	sbci	r21, 0x00	; 0
    4342:	e0 f7       	brcc	.-8      	; 0x433c <memset+0x4>
    4344:	08 95       	ret

00004346 <strcat>:
    4346:	fb 01       	movw	r30, r22
    4348:	dc 01       	movw	r26, r24
    434a:	0d 90       	ld	r0, X+
    434c:	00 20       	and	r0, r0
    434e:	e9 f7       	brne	.-6      	; 0x434a <strcat+0x4>
    4350:	11 97       	sbiw	r26, 0x01	; 1
    4352:	01 90       	ld	r0, Z+
    4354:	0d 92       	st	X+, r0
    4356:	00 20       	and	r0, r0
    4358:	e1 f7       	brne	.-8      	; 0x4352 <strcat+0xc>
    435a:	08 95       	ret

0000435c <strcpy>:
    435c:	fb 01       	movw	r30, r22
    435e:	dc 01       	movw	r26, r24
    4360:	01 90       	ld	r0, Z+
    4362:	0d 92       	st	X+, r0
    4364:	00 20       	and	r0, r0
    4366:	e1 f7       	brne	.-8      	; 0x4360 <strcpy+0x4>
    4368:	08 95       	ret

0000436a <strtok_r>:
    436a:	fa 01       	movw	r30, r20
    436c:	a1 91       	ld	r26, Z+
    436e:	b0 81       	ld	r27, Z
    4370:	00 97       	sbiw	r24, 0x00	; 0
    4372:	19 f4       	brne	.+6      	; 0x437a <strtok_r+0x10>
    4374:	10 97       	sbiw	r26, 0x00	; 0
    4376:	e1 f0       	breq	.+56     	; 0x43b0 <strtok_r+0x46>
    4378:	cd 01       	movw	r24, r26
    437a:	dc 01       	movw	r26, r24
    437c:	cd 01       	movw	r24, r26
    437e:	0d 90       	ld	r0, X+
    4380:	00 20       	and	r0, r0
    4382:	11 f4       	brne	.+4      	; 0x4388 <strtok_r+0x1e>
    4384:	c0 01       	movw	r24, r0
    4386:	13 c0       	rjmp	.+38     	; 0x43ae <strtok_r+0x44>
    4388:	fb 01       	movw	r30, r22
    438a:	21 91       	ld	r18, Z+
    438c:	22 23       	and	r18, r18
    438e:	19 f0       	breq	.+6      	; 0x4396 <strtok_r+0x2c>
    4390:	20 15       	cp	r18, r0
    4392:	d9 f7       	brne	.-10     	; 0x438a <strtok_r+0x20>
    4394:	f3 cf       	rjmp	.-26     	; 0x437c <strtok_r+0x12>
    4396:	fb 01       	movw	r30, r22
    4398:	21 91       	ld	r18, Z+
    439a:	20 15       	cp	r18, r0
    439c:	19 f4       	brne	.+6      	; 0x43a4 <strtok_r+0x3a>
    439e:	1e 92       	st	-X, r1
    43a0:	11 96       	adiw	r26, 0x01	; 1
    43a2:	06 c0       	rjmp	.+12     	; 0x43b0 <strtok_r+0x46>
    43a4:	22 23       	and	r18, r18
    43a6:	c1 f7       	brne	.-16     	; 0x4398 <strtok_r+0x2e>
    43a8:	0d 90       	ld	r0, X+
    43aa:	00 20       	and	r0, r0
    43ac:	a1 f7       	brne	.-24     	; 0x4396 <strtok_r+0x2c>
    43ae:	d0 01       	movw	r26, r0
    43b0:	fa 01       	movw	r30, r20
    43b2:	a1 93       	st	Z+, r26
    43b4:	b0 83       	st	Z, r27
    43b6:	08 95       	ret

000043b8 <dtoa_prf>:
    43b8:	4f 92       	push	r4
    43ba:	5f 92       	push	r5
    43bc:	6f 92       	push	r6
    43be:	7f 92       	push	r7
    43c0:	9f 92       	push	r9
    43c2:	af 92       	push	r10
    43c4:	bf 92       	push	r11
    43c6:	cf 92       	push	r12
    43c8:	df 92       	push	r13
    43ca:	ef 92       	push	r14
    43cc:	ff 92       	push	r15
    43ce:	0f 93       	push	r16
    43d0:	1f 93       	push	r17
    43d2:	cf 93       	push	r28
    43d4:	df 93       	push	r29
    43d6:	cd b7       	in	r28, 0x3d	; 61
    43d8:	de b7       	in	r29, 0x3e	; 62
    43da:	29 97       	sbiw	r28, 0x09	; 9
    43dc:	0f b6       	in	r0, 0x3f	; 63
    43de:	f8 94       	cli
    43e0:	de bf       	out	0x3e, r29	; 62
    43e2:	0f be       	out	0x3f, r0	; 63
    43e4:	cd bf       	out	0x3d, r28	; 61
    43e6:	6a 01       	movw	r12, r20
    43e8:	12 2f       	mov	r17, r18
    43ea:	b0 2e       	mov	r11, r16
    43ec:	2b e3       	ldi	r18, 0x3B	; 59
    43ee:	20 17       	cp	r18, r16
    43f0:	20 f0       	brcs	.+8      	; 0x43fa <dtoa_prf+0x42>
    43f2:	ff 24       	eor	r15, r15
    43f4:	f3 94       	inc	r15
    43f6:	f0 0e       	add	r15, r16
    43f8:	02 c0       	rjmp	.+4      	; 0x43fe <dtoa_prf+0x46>
    43fa:	bc e3       	ldi	r27, 0x3C	; 60
    43fc:	fb 2e       	mov	r15, r27
    43fe:	0f 2d       	mov	r16, r15
    4400:	27 e0       	ldi	r18, 0x07	; 7
    4402:	ae 01       	movw	r20, r28
    4404:	4f 5f       	subi	r20, 0xFF	; 255
    4406:	5f 4f       	sbci	r21, 0xFF	; 255
    4408:	0e 94 c7 24 	call	0x498e	; 0x498e <__ftoa_engine>
    440c:	ac 01       	movw	r20, r24
    440e:	89 81       	ldd	r24, Y+1	; 0x01
    4410:	98 2f       	mov	r25, r24
    4412:	99 70       	andi	r25, 0x09	; 9
    4414:	91 30       	cpi	r25, 0x01	; 1
    4416:	31 f0       	breq	.+12     	; 0x4424 <dtoa_prf+0x6c>
    4418:	e1 fc       	sbrc	r14, 1
    441a:	06 c0       	rjmp	.+12     	; 0x4428 <dtoa_prf+0x70>
    441c:	e0 fe       	sbrs	r14, 0
    441e:	06 c0       	rjmp	.+12     	; 0x442c <dtoa_prf+0x74>
    4420:	90 e2       	ldi	r25, 0x20	; 32
    4422:	05 c0       	rjmp	.+10     	; 0x442e <dtoa_prf+0x76>
    4424:	9d e2       	ldi	r25, 0x2D	; 45
    4426:	03 c0       	rjmp	.+6      	; 0x442e <dtoa_prf+0x76>
    4428:	9b e2       	ldi	r25, 0x2B	; 43
    442a:	01 c0       	rjmp	.+2      	; 0x442e <dtoa_prf+0x76>
    442c:	90 e0       	ldi	r25, 0x00	; 0
    442e:	ee 2d       	mov	r30, r14
    4430:	e0 71       	andi	r30, 0x10	; 16
    4432:	83 ff       	sbrs	r24, 3
    4434:	3c c0       	rjmp	.+120    	; 0x44ae <dtoa_prf+0xf6>
    4436:	91 11       	cpse	r25, r1
    4438:	02 c0       	rjmp	.+4      	; 0x443e <dtoa_prf+0x86>
    443a:	83 e0       	ldi	r24, 0x03	; 3
    443c:	01 c0       	rjmp	.+2      	; 0x4440 <dtoa_prf+0x88>
    443e:	84 e0       	ldi	r24, 0x04	; 4
    4440:	81 17       	cp	r24, r17
    4442:	18 f4       	brcc	.+6      	; 0x444a <dtoa_prf+0x92>
    4444:	21 2f       	mov	r18, r17
    4446:	28 1b       	sub	r18, r24
    4448:	01 c0       	rjmp	.+2      	; 0x444c <dtoa_prf+0x94>
    444a:	20 e0       	ldi	r18, 0x00	; 0
    444c:	e1 11       	cpse	r30, r1
    444e:	0b c0       	rjmp	.+22     	; 0x4466 <dtoa_prf+0xae>
    4450:	f6 01       	movw	r30, r12
    4452:	82 2f       	mov	r24, r18
    4454:	30 e2       	ldi	r19, 0x20	; 32
    4456:	88 23       	and	r24, r24
    4458:	19 f0       	breq	.+6      	; 0x4460 <dtoa_prf+0xa8>
    445a:	31 93       	st	Z+, r19
    445c:	81 50       	subi	r24, 0x01	; 1
    445e:	fb cf       	rjmp	.-10     	; 0x4456 <dtoa_prf+0x9e>
    4460:	c2 0e       	add	r12, r18
    4462:	d1 1c       	adc	r13, r1
    4464:	20 e0       	ldi	r18, 0x00	; 0
    4466:	99 23       	and	r25, r25
    4468:	29 f0       	breq	.+10     	; 0x4474 <dtoa_prf+0xbc>
    446a:	d6 01       	movw	r26, r12
    446c:	9c 93       	st	X, r25
    446e:	f6 01       	movw	r30, r12
    4470:	31 96       	adiw	r30, 0x01	; 1
    4472:	6f 01       	movw	r12, r30
    4474:	c6 01       	movw	r24, r12
    4476:	03 96       	adiw	r24, 0x03	; 3
    4478:	e2 fe       	sbrs	r14, 2
    447a:	0a c0       	rjmp	.+20     	; 0x4490 <dtoa_prf+0xd8>
    447c:	3e e4       	ldi	r19, 0x4E	; 78
    447e:	d6 01       	movw	r26, r12
    4480:	3c 93       	st	X, r19
    4482:	41 e4       	ldi	r20, 0x41	; 65
    4484:	11 96       	adiw	r26, 0x01	; 1
    4486:	4c 93       	st	X, r20
    4488:	11 97       	sbiw	r26, 0x01	; 1
    448a:	12 96       	adiw	r26, 0x02	; 2
    448c:	3c 93       	st	X, r19
    448e:	06 c0       	rjmp	.+12     	; 0x449c <dtoa_prf+0xe4>
    4490:	3e e6       	ldi	r19, 0x6E	; 110
    4492:	f6 01       	movw	r30, r12
    4494:	30 83       	st	Z, r19
    4496:	41 e6       	ldi	r20, 0x61	; 97
    4498:	41 83       	std	Z+1, r20	; 0x01
    449a:	32 83       	std	Z+2, r19	; 0x02
    449c:	fc 01       	movw	r30, r24
    449e:	32 2f       	mov	r19, r18
    44a0:	40 e2       	ldi	r20, 0x20	; 32
    44a2:	33 23       	and	r19, r19
    44a4:	09 f4       	brne	.+2      	; 0x44a8 <dtoa_prf+0xf0>
    44a6:	42 c0       	rjmp	.+132    	; 0x452c <dtoa_prf+0x174>
    44a8:	41 93       	st	Z+, r20
    44aa:	31 50       	subi	r19, 0x01	; 1
    44ac:	fa cf       	rjmp	.-12     	; 0x44a2 <dtoa_prf+0xea>
    44ae:	82 ff       	sbrs	r24, 2
    44b0:	44 c0       	rjmp	.+136    	; 0x453a <dtoa_prf+0x182>
    44b2:	91 11       	cpse	r25, r1
    44b4:	02 c0       	rjmp	.+4      	; 0x44ba <dtoa_prf+0x102>
    44b6:	83 e0       	ldi	r24, 0x03	; 3
    44b8:	01 c0       	rjmp	.+2      	; 0x44bc <dtoa_prf+0x104>
    44ba:	84 e0       	ldi	r24, 0x04	; 4
    44bc:	81 17       	cp	r24, r17
    44be:	18 f4       	brcc	.+6      	; 0x44c6 <dtoa_prf+0x10e>
    44c0:	21 2f       	mov	r18, r17
    44c2:	28 1b       	sub	r18, r24
    44c4:	01 c0       	rjmp	.+2      	; 0x44c8 <dtoa_prf+0x110>
    44c6:	20 e0       	ldi	r18, 0x00	; 0
    44c8:	e1 11       	cpse	r30, r1
    44ca:	0b c0       	rjmp	.+22     	; 0x44e2 <dtoa_prf+0x12a>
    44cc:	f6 01       	movw	r30, r12
    44ce:	82 2f       	mov	r24, r18
    44d0:	30 e2       	ldi	r19, 0x20	; 32
    44d2:	88 23       	and	r24, r24
    44d4:	19 f0       	breq	.+6      	; 0x44dc <dtoa_prf+0x124>
    44d6:	31 93       	st	Z+, r19
    44d8:	81 50       	subi	r24, 0x01	; 1
    44da:	fb cf       	rjmp	.-10     	; 0x44d2 <dtoa_prf+0x11a>
    44dc:	c2 0e       	add	r12, r18
    44de:	d1 1c       	adc	r13, r1
    44e0:	20 e0       	ldi	r18, 0x00	; 0
    44e2:	99 23       	and	r25, r25
    44e4:	29 f0       	breq	.+10     	; 0x44f0 <dtoa_prf+0x138>
    44e6:	d6 01       	movw	r26, r12
    44e8:	9c 93       	st	X, r25
    44ea:	f6 01       	movw	r30, r12
    44ec:	31 96       	adiw	r30, 0x01	; 1
    44ee:	6f 01       	movw	r12, r30
    44f0:	c6 01       	movw	r24, r12
    44f2:	03 96       	adiw	r24, 0x03	; 3
    44f4:	e2 fe       	sbrs	r14, 2
    44f6:	0b c0       	rjmp	.+22     	; 0x450e <dtoa_prf+0x156>
    44f8:	39 e4       	ldi	r19, 0x49	; 73
    44fa:	d6 01       	movw	r26, r12
    44fc:	3c 93       	st	X, r19
    44fe:	3e e4       	ldi	r19, 0x4E	; 78
    4500:	11 96       	adiw	r26, 0x01	; 1
    4502:	3c 93       	st	X, r19
    4504:	11 97       	sbiw	r26, 0x01	; 1
    4506:	36 e4       	ldi	r19, 0x46	; 70
    4508:	12 96       	adiw	r26, 0x02	; 2
    450a:	3c 93       	st	X, r19
    450c:	07 c0       	rjmp	.+14     	; 0x451c <dtoa_prf+0x164>
    450e:	39 e6       	ldi	r19, 0x69	; 105
    4510:	f6 01       	movw	r30, r12
    4512:	30 83       	st	Z, r19
    4514:	3e e6       	ldi	r19, 0x6E	; 110
    4516:	31 83       	std	Z+1, r19	; 0x01
    4518:	36 e6       	ldi	r19, 0x66	; 102
    451a:	32 83       	std	Z+2, r19	; 0x02
    451c:	fc 01       	movw	r30, r24
    451e:	32 2f       	mov	r19, r18
    4520:	40 e2       	ldi	r20, 0x20	; 32
    4522:	33 23       	and	r19, r19
    4524:	19 f0       	breq	.+6      	; 0x452c <dtoa_prf+0x174>
    4526:	41 93       	st	Z+, r20
    4528:	31 50       	subi	r19, 0x01	; 1
    452a:	fb cf       	rjmp	.-10     	; 0x4522 <dtoa_prf+0x16a>
    452c:	fc 01       	movw	r30, r24
    452e:	e2 0f       	add	r30, r18
    4530:	f1 1d       	adc	r31, r1
    4532:	10 82       	st	Z, r1
    4534:	8e ef       	ldi	r24, 0xFE	; 254
    4536:	9f ef       	ldi	r25, 0xFF	; 255
    4538:	b7 c0       	rjmp	.+366    	; 0x46a8 <dtoa_prf+0x2f0>
    453a:	f1 e0       	ldi	r31, 0x01	; 1
    453c:	91 11       	cpse	r25, r1
    453e:	01 c0       	rjmp	.+2      	; 0x4542 <dtoa_prf+0x18a>
    4540:	f0 e0       	ldi	r31, 0x00	; 0
    4542:	6f 2f       	mov	r22, r31
    4544:	70 e0       	ldi	r23, 0x00	; 0
    4546:	14 16       	cp	r1, r20
    4548:	15 06       	cpc	r1, r21
    454a:	24 f4       	brge	.+8      	; 0x4554 <dtoa_prf+0x19c>
    454c:	9a 01       	movw	r18, r20
    454e:	2f 5f       	subi	r18, 0xFF	; 255
    4550:	3f 4f       	sbci	r19, 0xFF	; 255
    4552:	02 c0       	rjmp	.+4      	; 0x4558 <dtoa_prf+0x1a0>
    4554:	21 e0       	ldi	r18, 0x01	; 1
    4556:	30 e0       	ldi	r19, 0x00	; 0
    4558:	26 0f       	add	r18, r22
    455a:	37 1f       	adc	r19, r23
    455c:	bb 20       	and	r11, r11
    455e:	29 f0       	breq	.+10     	; 0x456a <dtoa_prf+0x1b2>
    4560:	6b 2d       	mov	r22, r11
    4562:	70 e0       	ldi	r23, 0x00	; 0
    4564:	6f 5f       	subi	r22, 0xFF	; 255
    4566:	7f 4f       	sbci	r23, 0xFF	; 255
    4568:	02 c0       	rjmp	.+4      	; 0x456e <dtoa_prf+0x1b6>
    456a:	60 e0       	ldi	r22, 0x00	; 0
    456c:	70 e0       	ldi	r23, 0x00	; 0
    456e:	26 0f       	add	r18, r22
    4570:	37 1f       	adc	r19, r23
    4572:	61 2f       	mov	r22, r17
    4574:	70 e0       	ldi	r23, 0x00	; 0
    4576:	26 17       	cp	r18, r22
    4578:	37 07       	cpc	r19, r23
    457a:	1c f4       	brge	.+6      	; 0x4582 <dtoa_prf+0x1ca>
    457c:	12 1b       	sub	r17, r18
    457e:	21 2f       	mov	r18, r17
    4580:	01 c0       	rjmp	.+2      	; 0x4584 <dtoa_prf+0x1cc>
    4582:	20 e0       	ldi	r18, 0x00	; 0
    4584:	3e 2d       	mov	r19, r14
    4586:	38 71       	andi	r19, 0x18	; 24
    4588:	59 f4       	brne	.+22     	; 0x45a0 <dtoa_prf+0x1e8>
    458a:	d6 01       	movw	r26, r12
    458c:	32 2f       	mov	r19, r18
    458e:	60 e2       	ldi	r22, 0x20	; 32
    4590:	33 23       	and	r19, r19
    4592:	19 f0       	breq	.+6      	; 0x459a <dtoa_prf+0x1e2>
    4594:	6d 93       	st	X+, r22
    4596:	31 50       	subi	r19, 0x01	; 1
    4598:	fb cf       	rjmp	.-10     	; 0x4590 <dtoa_prf+0x1d8>
    459a:	c2 0e       	add	r12, r18
    459c:	d1 1c       	adc	r13, r1
    459e:	20 e0       	ldi	r18, 0x00	; 0
    45a0:	ff 23       	and	r31, r31
    45a2:	31 f0       	breq	.+12     	; 0x45b0 <dtoa_prf+0x1f8>
    45a4:	d6 01       	movw	r26, r12
    45a6:	9c 93       	st	X, r25
    45a8:	b6 01       	movw	r22, r12
    45aa:	6f 5f       	subi	r22, 0xFF	; 255
    45ac:	7f 4f       	sbci	r23, 0xFF	; 255
    45ae:	6b 01       	movw	r12, r22
    45b0:	e1 11       	cpse	r30, r1
    45b2:	0b c0       	rjmp	.+22     	; 0x45ca <dtoa_prf+0x212>
    45b4:	f6 01       	movw	r30, r12
    45b6:	92 2f       	mov	r25, r18
    45b8:	30 e3       	ldi	r19, 0x30	; 48
    45ba:	99 23       	and	r25, r25
    45bc:	19 f0       	breq	.+6      	; 0x45c4 <dtoa_prf+0x20c>
    45be:	31 93       	st	Z+, r19
    45c0:	91 50       	subi	r25, 0x01	; 1
    45c2:	fb cf       	rjmp	.-10     	; 0x45ba <dtoa_prf+0x202>
    45c4:	c2 0e       	add	r12, r18
    45c6:	d1 1c       	adc	r13, r1
    45c8:	20 e0       	ldi	r18, 0x00	; 0
    45ca:	9f 2d       	mov	r25, r15
    45cc:	94 0f       	add	r25, r20
    45ce:	3a 81       	ldd	r19, Y+2	; 0x02
    45d0:	78 2f       	mov	r23, r24
    45d2:	70 71       	andi	r23, 0x10	; 16
    45d4:	a7 2e       	mov	r10, r23
    45d6:	84 ff       	sbrs	r24, 4
    45d8:	03 c0       	rjmp	.+6      	; 0x45e0 <dtoa_prf+0x228>
    45da:	31 33       	cpi	r19, 0x31	; 49
    45dc:	09 f4       	brne	.+2      	; 0x45e0 <dtoa_prf+0x228>
    45de:	91 50       	subi	r25, 0x01	; 1
    45e0:	19 16       	cp	r1, r25
    45e2:	24 f4       	brge	.+8      	; 0x45ec <dtoa_prf+0x234>
    45e4:	99 30       	cpi	r25, 0x09	; 9
    45e6:	18 f0       	brcs	.+6      	; 0x45ee <dtoa_prf+0x236>
    45e8:	98 e0       	ldi	r25, 0x08	; 8
    45ea:	01 c0       	rjmp	.+2      	; 0x45ee <dtoa_prf+0x236>
    45ec:	91 e0       	ldi	r25, 0x01	; 1
    45ee:	e4 2f       	mov	r30, r20
    45f0:	85 2f       	mov	r24, r21
    45f2:	57 ff       	sbrs	r21, 7
    45f4:	02 c0       	rjmp	.+4      	; 0x45fa <dtoa_prf+0x242>
    45f6:	e0 e0       	ldi	r30, 0x00	; 0
    45f8:	80 e0       	ldi	r24, 0x00	; 0
    45fa:	6e 2f       	mov	r22, r30
    45fc:	78 2f       	mov	r23, r24
    45fe:	e0 e0       	ldi	r30, 0x00	; 0
    4600:	f0 e0       	ldi	r31, 0x00	; 0
    4602:	ae e2       	ldi	r26, 0x2E	; 46
    4604:	9a 2e       	mov	r9, r26
    4606:	3a 01       	movw	r6, r20
    4608:	69 1a       	sub	r6, r25
    460a:	71 08       	sbc	r7, r1
    460c:	2a 01       	movw	r4, r20
    460e:	46 1a       	sub	r4, r22
    4610:	57 0a       	sbc	r5, r23
    4612:	0b 2d       	mov	r16, r11
    4614:	10 e0       	ldi	r17, 0x00	; 0
    4616:	11 95       	neg	r17
    4618:	01 95       	neg	r16
    461a:	11 09       	sbc	r17, r1
    461c:	6f 3f       	cpi	r22, 0xFF	; 255
    461e:	8f ef       	ldi	r24, 0xFF	; 255
    4620:	78 07       	cpc	r23, r24
    4622:	29 f4       	brne	.+10     	; 0x462e <dtoa_prf+0x276>
    4624:	d6 01       	movw	r26, r12
    4626:	9c 92       	st	X, r9
    4628:	c6 01       	movw	r24, r12
    462a:	01 96       	adiw	r24, 0x01	; 1
    462c:	6c 01       	movw	r12, r24
    462e:	46 17       	cp	r20, r22
    4630:	57 07       	cpc	r21, r23
    4632:	84 f0       	brlt	.+32     	; 0x4654 <dtoa_prf+0x29c>
    4634:	66 16       	cp	r6, r22
    4636:	77 06       	cpc	r7, r23
    4638:	6c f4       	brge	.+26     	; 0x4654 <dtoa_prf+0x29c>
    463a:	7f 01       	movw	r14, r30
    463c:	e4 0c       	add	r14, r4
    463e:	f5 1c       	adc	r15, r5
    4640:	a1 e0       	ldi	r26, 0x01	; 1
    4642:	b0 e0       	ldi	r27, 0x00	; 0
    4644:	ac 0f       	add	r26, r28
    4646:	bd 1f       	adc	r27, r29
    4648:	ea 0e       	add	r14, r26
    464a:	fb 1e       	adc	r15, r27
    464c:	d7 01       	movw	r26, r14
    464e:	11 96       	adiw	r26, 0x01	; 1
    4650:	bc 90       	ld	r11, X
    4652:	02 c0       	rjmp	.+4      	; 0x4658 <dtoa_prf+0x2a0>
    4654:	90 e3       	ldi	r25, 0x30	; 48
    4656:	b9 2e       	mov	r11, r25
    4658:	61 50       	subi	r22, 0x01	; 1
    465a:	71 09       	sbc	r23, r1
    465c:	31 96       	adiw	r30, 0x01	; 1
    465e:	c6 01       	movw	r24, r12
    4660:	01 96       	adiw	r24, 0x01	; 1
    4662:	7c 01       	movw	r14, r24
    4664:	60 17       	cp	r22, r16
    4666:	71 07       	cpc	r23, r17
    4668:	24 f0       	brlt	.+8      	; 0x4672 <dtoa_prf+0x2ba>
    466a:	d6 01       	movw	r26, r12
    466c:	bc 92       	st	X, r11
    466e:	6c 01       	movw	r12, r24
    4670:	d5 cf       	rjmp	.-86     	; 0x461c <dtoa_prf+0x264>
    4672:	64 17       	cp	r22, r20
    4674:	75 07       	cpc	r23, r21
    4676:	41 f4       	brne	.+16     	; 0x4688 <dtoa_prf+0x2d0>
    4678:	36 33       	cpi	r19, 0x36	; 54
    467a:	20 f4       	brcc	.+8      	; 0x4684 <dtoa_prf+0x2cc>
    467c:	35 33       	cpi	r19, 0x35	; 53
    467e:	21 f4       	brne	.+8      	; 0x4688 <dtoa_prf+0x2d0>
    4680:	a1 10       	cpse	r10, r1
    4682:	02 c0       	rjmp	.+4      	; 0x4688 <dtoa_prf+0x2d0>
    4684:	81 e3       	ldi	r24, 0x31	; 49
    4686:	b8 2e       	mov	r11, r24
    4688:	f6 01       	movw	r30, r12
    468a:	b0 82       	st	Z, r11
    468c:	f7 01       	movw	r30, r14
    468e:	82 2f       	mov	r24, r18
    4690:	90 e2       	ldi	r25, 0x20	; 32
    4692:	88 23       	and	r24, r24
    4694:	19 f0       	breq	.+6      	; 0x469c <dtoa_prf+0x2e4>
    4696:	91 93       	st	Z+, r25
    4698:	81 50       	subi	r24, 0x01	; 1
    469a:	fb cf       	rjmp	.-10     	; 0x4692 <dtoa_prf+0x2da>
    469c:	f7 01       	movw	r30, r14
    469e:	e2 0f       	add	r30, r18
    46a0:	f1 1d       	adc	r31, r1
    46a2:	10 82       	st	Z, r1
    46a4:	80 e0       	ldi	r24, 0x00	; 0
    46a6:	90 e0       	ldi	r25, 0x00	; 0
    46a8:	29 96       	adiw	r28, 0x09	; 9
    46aa:	0f b6       	in	r0, 0x3f	; 63
    46ac:	f8 94       	cli
    46ae:	de bf       	out	0x3e, r29	; 62
    46b0:	0f be       	out	0x3f, r0	; 63
    46b2:	cd bf       	out	0x3d, r28	; 61
    46b4:	df 91       	pop	r29
    46b6:	cf 91       	pop	r28
    46b8:	1f 91       	pop	r17
    46ba:	0f 91       	pop	r16
    46bc:	ff 90       	pop	r15
    46be:	ef 90       	pop	r14
    46c0:	df 90       	pop	r13
    46c2:	cf 90       	pop	r12
    46c4:	bf 90       	pop	r11
    46c6:	af 90       	pop	r10
    46c8:	9f 90       	pop	r9
    46ca:	7f 90       	pop	r7
    46cc:	6f 90       	pop	r6
    46ce:	5f 90       	pop	r5
    46d0:	4f 90       	pop	r4
    46d2:	08 95       	ret

000046d4 <strtod>:
    46d4:	a0 e0       	ldi	r26, 0x00	; 0
    46d6:	b0 e0       	ldi	r27, 0x00	; 0
    46d8:	e0 e7       	ldi	r30, 0x70	; 112
    46da:	f3 e2       	ldi	r31, 0x23	; 35
    46dc:	0c 94 c6 25 	jmp	0x4b8c	; 0x4b8c <__prologue_saves__+0x8>
    46e0:	ec 01       	movw	r28, r24
    46e2:	7b 01       	movw	r14, r22
    46e4:	61 15       	cp	r22, r1
    46e6:	71 05       	cpc	r23, r1
    46e8:	19 f0       	breq	.+6      	; 0x46f0 <strtod+0x1c>
    46ea:	db 01       	movw	r26, r22
    46ec:	8d 93       	st	X+, r24
    46ee:	9c 93       	st	X, r25
    46f0:	8e 01       	movw	r16, r28
    46f2:	0f 5f       	subi	r16, 0xFF	; 255
    46f4:	1f 4f       	sbci	r17, 0xFF	; 255
    46f6:	78 80       	ld	r7, Y
    46f8:	87 2d       	mov	r24, r7
    46fa:	90 e0       	ldi	r25, 0x00	; 0
    46fc:	0e 94 78 21 	call	0x42f0	; 0x42f0 <isspace>
    4700:	89 2b       	or	r24, r25
    4702:	11 f0       	breq	.+4      	; 0x4708 <strtod+0x34>
    4704:	e8 01       	movw	r28, r16
    4706:	f4 cf       	rjmp	.-24     	; 0x46f0 <strtod+0x1c>
    4708:	bd e2       	ldi	r27, 0x2D	; 45
    470a:	7b 12       	cpse	r7, r27
    470c:	05 c0       	rjmp	.+10     	; 0x4718 <strtod+0x44>
    470e:	0f 5f       	subi	r16, 0xFF	; 255
    4710:	1f 4f       	sbci	r17, 0xFF	; 255
    4712:	79 80       	ldd	r7, Y+1	; 0x01
    4714:	c1 e0       	ldi	r28, 0x01	; 1
    4716:	08 c0       	rjmp	.+16     	; 0x4728 <strtod+0x54>
    4718:	eb e2       	ldi	r30, 0x2B	; 43
    471a:	7e 12       	cpse	r7, r30
    471c:	04 c0       	rjmp	.+8      	; 0x4726 <strtod+0x52>
    471e:	8e 01       	movw	r16, r28
    4720:	0e 5f       	subi	r16, 0xFE	; 254
    4722:	1f 4f       	sbci	r17, 0xFF	; 255
    4724:	79 80       	ldd	r7, Y+1	; 0x01
    4726:	c0 e0       	ldi	r28, 0x00	; 0
    4728:	68 01       	movw	r12, r16
    472a:	f1 e0       	ldi	r31, 0x01	; 1
    472c:	cf 1a       	sub	r12, r31
    472e:	d1 08       	sbc	r13, r1
    4730:	43 e0       	ldi	r20, 0x03	; 3
    4732:	50 e0       	ldi	r21, 0x00	; 0
    4734:	62 e5       	ldi	r22, 0x52	; 82
    4736:	71 e0       	ldi	r23, 0x01	; 1
    4738:	c6 01       	movw	r24, r12
    473a:	0e 94 a2 25 	call	0x4b44	; 0x4b44 <strncasecmp_P>
    473e:	89 2b       	or	r24, r25
    4740:	f1 f4       	brne	.+60     	; 0x477e <strtod+0xaa>
    4742:	68 01       	movw	r12, r16
    4744:	22 e0       	ldi	r18, 0x02	; 2
    4746:	c2 0e       	add	r12, r18
    4748:	d1 1c       	adc	r13, r1
    474a:	45 e0       	ldi	r20, 0x05	; 5
    474c:	50 e0       	ldi	r21, 0x00	; 0
    474e:	6d e4       	ldi	r22, 0x4D	; 77
    4750:	71 e0       	ldi	r23, 0x01	; 1
    4752:	c6 01       	movw	r24, r12
    4754:	0e 94 a2 25 	call	0x4b44	; 0x4b44 <strncasecmp_P>
    4758:	89 2b       	or	r24, r25
    475a:	21 f4       	brne	.+8      	; 0x4764 <strtod+0x90>
    475c:	68 01       	movw	r12, r16
    475e:	87 e0       	ldi	r24, 0x07	; 7
    4760:	c8 0e       	add	r12, r24
    4762:	d1 1c       	adc	r13, r1
    4764:	e1 14       	cp	r14, r1
    4766:	f1 04       	cpc	r15, r1
    4768:	19 f0       	breq	.+6      	; 0x4770 <strtod+0x9c>
    476a:	d7 01       	movw	r26, r14
    476c:	cd 92       	st	X+, r12
    476e:	dc 92       	st	X, r13
    4770:	c1 11       	cpse	r28, r1
    4772:	ff c0       	rjmp	.+510    	; 0x4972 <strtod+0x29e>
    4774:	60 e0       	ldi	r22, 0x00	; 0
    4776:	70 e0       	ldi	r23, 0x00	; 0
    4778:	80 e8       	ldi	r24, 0x80	; 128
    477a:	9f e7       	ldi	r25, 0x7F	; 127
    477c:	03 c1       	rjmp	.+518    	; 0x4984 <strtod+0x2b0>
    477e:	43 e0       	ldi	r20, 0x03	; 3
    4780:	50 e0       	ldi	r21, 0x00	; 0
    4782:	6a e4       	ldi	r22, 0x4A	; 74
    4784:	71 e0       	ldi	r23, 0x01	; 1
    4786:	c6 01       	movw	r24, r12
    4788:	0e 94 a2 25 	call	0x4b44	; 0x4b44 <strncasecmp_P>
    478c:	89 2b       	or	r24, r25
    478e:	51 f4       	brne	.+20     	; 0x47a4 <strtod+0xd0>
    4790:	e1 14       	cp	r14, r1
    4792:	f1 04       	cpc	r15, r1
    4794:	09 f4       	brne	.+2      	; 0x4798 <strtod+0xc4>
    4796:	f2 c0       	rjmp	.+484    	; 0x497c <strtod+0x2a8>
    4798:	0e 5f       	subi	r16, 0xFE	; 254
    479a:	1f 4f       	sbci	r17, 0xFF	; 255
    479c:	f7 01       	movw	r30, r14
    479e:	11 83       	std	Z+1, r17	; 0x01
    47a0:	00 83       	st	Z, r16
    47a2:	ec c0       	rjmp	.+472    	; 0x497c <strtod+0x2a8>
    47a4:	68 01       	movw	r12, r16
    47a6:	60 e0       	ldi	r22, 0x00	; 0
    47a8:	70 e0       	ldi	r23, 0x00	; 0
    47aa:	cb 01       	movw	r24, r22
    47ac:	00 e0       	ldi	r16, 0x00	; 0
    47ae:	10 e0       	ldi	r17, 0x00	; 0
    47b0:	f6 01       	movw	r30, r12
    47b2:	d0 ed       	ldi	r29, 0xD0	; 208
    47b4:	d7 0d       	add	r29, r7
    47b6:	da 30       	cpi	r29, 0x0A	; 10
    47b8:	58 f5       	brcc	.+86     	; 0x4810 <strtod+0x13c>
    47ba:	2c 2f       	mov	r18, r28
    47bc:	22 60       	ori	r18, 0x02	; 2
    47be:	62 2e       	mov	r6, r18
    47c0:	2c 2f       	mov	r18, r28
    47c2:	28 70       	andi	r18, 0x08	; 8
    47c4:	c2 ff       	sbrs	r28, 2
    47c6:	05 c0       	rjmp	.+10     	; 0x47d2 <strtod+0xfe>
    47c8:	21 11       	cpse	r18, r1
    47ca:	28 c0       	rjmp	.+80     	; 0x481c <strtod+0x148>
    47cc:	0f 5f       	subi	r16, 0xFF	; 255
    47ce:	1f 4f       	sbci	r17, 0xFF	; 255
    47d0:	25 c0       	rjmp	.+74     	; 0x481c <strtod+0x148>
    47d2:	22 23       	and	r18, r18
    47d4:	11 f0       	breq	.+4      	; 0x47da <strtod+0x106>
    47d6:	01 50       	subi	r16, 0x01	; 1
    47d8:	11 09       	sbc	r17, r1
    47da:	a5 e0       	ldi	r26, 0x05	; 5
    47dc:	b0 e0       	ldi	r27, 0x00	; 0
    47de:	9b 01       	movw	r18, r22
    47e0:	ac 01       	movw	r20, r24
    47e2:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__muluhisi3>
    47e6:	4b 01       	movw	r8, r22
    47e8:	5c 01       	movw	r10, r24
    47ea:	88 0c       	add	r8, r8
    47ec:	99 1c       	adc	r9, r9
    47ee:	aa 1c       	adc	r10, r10
    47f0:	bb 1c       	adc	r11, r11
    47f2:	c5 01       	movw	r24, r10
    47f4:	b4 01       	movw	r22, r8
    47f6:	6d 0f       	add	r22, r29
    47f8:	71 1d       	adc	r23, r1
    47fa:	81 1d       	adc	r24, r1
    47fc:	91 1d       	adc	r25, r1
    47fe:	68 39       	cpi	r22, 0x98	; 152
    4800:	a9 e9       	ldi	r26, 0x99	; 153
    4802:	7a 07       	cpc	r23, r26
    4804:	8a 07       	cpc	r24, r26
    4806:	a9 e1       	ldi	r26, 0x19	; 25
    4808:	9a 07       	cpc	r25, r26
    480a:	40 f0       	brcs	.+16     	; 0x481c <strtod+0x148>
    480c:	c6 60       	ori	r28, 0x06	; 6
    480e:	05 c0       	rjmp	.+10     	; 0x481a <strtod+0x146>
    4810:	de 3f       	cpi	r29, 0xFE	; 254
    4812:	51 f4       	brne	.+20     	; 0x4828 <strtod+0x154>
    4814:	c3 fd       	sbrc	r28, 3
    4816:	44 c0       	rjmp	.+136    	; 0x48a0 <strtod+0x1cc>
    4818:	c8 60       	ori	r28, 0x08	; 8
    481a:	6c 2e       	mov	r6, r28
    481c:	bf ef       	ldi	r27, 0xFF	; 255
    481e:	cb 1a       	sub	r12, r27
    4820:	db 0a       	sbc	r13, r27
    4822:	70 80       	ld	r7, Z
    4824:	c6 2d       	mov	r28, r6
    4826:	c4 cf       	rjmp	.-120    	; 0x47b0 <strtod+0xdc>
    4828:	2d 2f       	mov	r18, r29
    482a:	2f 7d       	andi	r18, 0xDF	; 223
    482c:	25 31       	cpi	r18, 0x15	; 21
    482e:	c1 f5       	brne	.+112    	; 0x48a0 <strtod+0x1cc>
    4830:	40 81       	ld	r20, Z
    4832:	4d 32       	cpi	r20, 0x2D	; 45
    4834:	11 f4       	brne	.+4      	; 0x483a <strtod+0x166>
    4836:	c0 61       	ori	r28, 0x10	; 16
    4838:	06 c0       	rjmp	.+12     	; 0x4846 <strtod+0x172>
    483a:	4b 32       	cpi	r20, 0x2B	; 43
    483c:	21 f0       	breq	.+8      	; 0x4846 <strtod+0x172>
    483e:	31 96       	adiw	r30, 0x01	; 1
    4840:	21 e0       	ldi	r18, 0x01	; 1
    4842:	30 e0       	ldi	r19, 0x00	; 0
    4844:	06 c0       	rjmp	.+12     	; 0x4852 <strtod+0x17e>
    4846:	32 96       	adiw	r30, 0x02	; 2
    4848:	d6 01       	movw	r26, r12
    484a:	11 96       	adiw	r26, 0x01	; 1
    484c:	4c 91       	ld	r20, X
    484e:	22 e0       	ldi	r18, 0x02	; 2
    4850:	30 e0       	ldi	r19, 0x00	; 0
    4852:	a0 ed       	ldi	r26, 0xD0	; 208
    4854:	a4 0f       	add	r26, r20
    4856:	aa 30       	cpi	r26, 0x0A	; 10
    4858:	18 f0       	brcs	.+6      	; 0x4860 <strtod+0x18c>
    485a:	e2 1b       	sub	r30, r18
    485c:	f3 0b       	sbc	r31, r19
    485e:	20 c0       	rjmp	.+64     	; 0x48a0 <strtod+0x1cc>
    4860:	40 e0       	ldi	r20, 0x00	; 0
    4862:	50 e0       	ldi	r21, 0x00	; 0
    4864:	40 38       	cpi	r20, 0x80	; 128
    4866:	bc e0       	ldi	r27, 0x0C	; 12
    4868:	5b 07       	cpc	r21, r27
    486a:	5c f4       	brge	.+22     	; 0x4882 <strtod+0x1ae>
    486c:	9a 01       	movw	r18, r20
    486e:	22 0f       	add	r18, r18
    4870:	33 1f       	adc	r19, r19
    4872:	22 0f       	add	r18, r18
    4874:	33 1f       	adc	r19, r19
    4876:	42 0f       	add	r20, r18
    4878:	53 1f       	adc	r21, r19
    487a:	44 0f       	add	r20, r20
    487c:	55 1f       	adc	r21, r21
    487e:	4a 0f       	add	r20, r26
    4880:	51 1d       	adc	r21, r1
    4882:	31 96       	adiw	r30, 0x01	; 1
    4884:	df 01       	movw	r26, r30
    4886:	11 97       	sbiw	r26, 0x01	; 1
    4888:	2c 91       	ld	r18, X
    488a:	a0 ed       	ldi	r26, 0xD0	; 208
    488c:	a2 0f       	add	r26, r18
    488e:	aa 30       	cpi	r26, 0x0A	; 10
    4890:	48 f3       	brcs	.-46     	; 0x4864 <strtod+0x190>
    4892:	c4 ff       	sbrs	r28, 4
    4894:	03 c0       	rjmp	.+6      	; 0x489c <strtod+0x1c8>
    4896:	51 95       	neg	r21
    4898:	41 95       	neg	r20
    489a:	51 09       	sbc	r21, r1
    489c:	04 0f       	add	r16, r20
    489e:	15 1f       	adc	r17, r21
    48a0:	c1 ff       	sbrs	r28, 1
    48a2:	07 c0       	rjmp	.+14     	; 0x48b2 <strtod+0x1de>
    48a4:	e1 14       	cp	r14, r1
    48a6:	f1 04       	cpc	r15, r1
    48a8:	21 f0       	breq	.+8      	; 0x48b2 <strtod+0x1de>
    48aa:	31 97       	sbiw	r30, 0x01	; 1
    48ac:	d7 01       	movw	r26, r14
    48ae:	ed 93       	st	X+, r30
    48b0:	fc 93       	st	X, r31
    48b2:	0e 94 c3 1b 	call	0x3786	; 0x3786 <__floatunsisf>
    48b6:	c3 70       	andi	r28, 0x03	; 3
    48b8:	c3 30       	cpi	r28, 0x03	; 3
    48ba:	19 f0       	breq	.+6      	; 0x48c2 <strtod+0x1ee>
    48bc:	6b 01       	movw	r12, r22
    48be:	7c 01       	movw	r14, r24
    48c0:	06 c0       	rjmp	.+12     	; 0x48ce <strtod+0x1fa>
    48c2:	6b 01       	movw	r12, r22
    48c4:	7c 01       	movw	r14, r24
    48c6:	f7 fa       	bst	r15, 7
    48c8:	f0 94       	com	r15
    48ca:	f7 f8       	bld	r15, 7
    48cc:	f0 94       	com	r15
    48ce:	20 e0       	ldi	r18, 0x00	; 0
    48d0:	30 e0       	ldi	r19, 0x00	; 0
    48d2:	a9 01       	movw	r20, r18
    48d4:	c7 01       	movw	r24, r14
    48d6:	b6 01       	movw	r22, r12
    48d8:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
    48dc:	88 23       	and	r24, r24
    48de:	09 f4       	brne	.+2      	; 0x48e2 <strtod+0x20e>
    48e0:	45 c0       	rjmp	.+138    	; 0x496c <strtod+0x298>
    48e2:	17 ff       	sbrs	r17, 7
    48e4:	06 c0       	rjmp	.+12     	; 0x48f2 <strtod+0x21e>
    48e6:	11 95       	neg	r17
    48e8:	01 95       	neg	r16
    48ea:	11 09       	sbc	r17, r1
    48ec:	c9 e6       	ldi	r28, 0x69	; 105
    48ee:	d1 e0       	ldi	r29, 0x01	; 1
    48f0:	02 c0       	rjmp	.+4      	; 0x48f6 <strtod+0x222>
    48f2:	c1 e8       	ldi	r28, 0x81	; 129
    48f4:	d1 e0       	ldi	r29, 0x01	; 1
    48f6:	5e 01       	movw	r10, r28
    48f8:	b8 e1       	ldi	r27, 0x18	; 24
    48fa:	ab 1a       	sub	r10, r27
    48fc:	b1 08       	sbc	r11, r1
    48fe:	46 01       	movw	r8, r12
    4900:	be 2d       	mov	r27, r14
    4902:	af 2d       	mov	r26, r15
    4904:	90 e2       	ldi	r25, 0x20	; 32
    4906:	e9 2e       	mov	r14, r25
    4908:	f1 2c       	mov	r15, r1
    490a:	0e 15       	cp	r16, r14
    490c:	1f 05       	cpc	r17, r15
    490e:	84 f0       	brlt	.+32     	; 0x4930 <strtod+0x25c>
    4910:	fe 01       	movw	r30, r28
    4912:	25 91       	lpm	r18, Z+
    4914:	35 91       	lpm	r19, Z+
    4916:	45 91       	lpm	r20, Z+
    4918:	54 91       	lpm	r21, Z
    491a:	b4 01       	movw	r22, r8
    491c:	8b 2f       	mov	r24, r27
    491e:	9a 2f       	mov	r25, r26
    4920:	0e 94 2a 1d 	call	0x3a54	; 0x3a54 <__mulsf3>
    4924:	4b 01       	movw	r8, r22
    4926:	b8 2f       	mov	r27, r24
    4928:	a9 2f       	mov	r26, r25
    492a:	0e 19       	sub	r16, r14
    492c:	1f 09       	sbc	r17, r15
    492e:	ed cf       	rjmp	.-38     	; 0x490a <strtod+0x236>
    4930:	24 97       	sbiw	r28, 0x04	; 4
    4932:	f5 94       	asr	r15
    4934:	e7 94       	ror	r14
    4936:	ca 15       	cp	r28, r10
    4938:	db 05       	cpc	r29, r11
    493a:	39 f7       	brne	.-50     	; 0x490a <strtod+0x236>
    493c:	64 01       	movw	r12, r8
    493e:	eb 2e       	mov	r14, r27
    4940:	fa 2e       	mov	r15, r26
    4942:	8e 2d       	mov	r24, r14
    4944:	88 0f       	add	r24, r24
    4946:	8f 2d       	mov	r24, r15
    4948:	88 1f       	adc	r24, r24
    494a:	8f 3f       	cpi	r24, 0xFF	; 255
    494c:	49 f0       	breq	.+18     	; 0x4960 <strtod+0x28c>
    494e:	20 e0       	ldi	r18, 0x00	; 0
    4950:	30 e0       	ldi	r19, 0x00	; 0
    4952:	a9 01       	movw	r20, r18
    4954:	c7 01       	movw	r24, r14
    4956:	b6 01       	movw	r22, r12
    4958:	0e 94 11 1b 	call	0x3622	; 0x3622 <__cmpsf2>
    495c:	81 11       	cpse	r24, r1
    495e:	06 c0       	rjmp	.+12     	; 0x496c <strtod+0x298>
    4960:	82 e2       	ldi	r24, 0x22	; 34
    4962:	90 e0       	ldi	r25, 0x00	; 0
    4964:	90 93 43 05 	sts	0x0543, r25
    4968:	80 93 42 05 	sts	0x0542, r24
    496c:	c7 01       	movw	r24, r14
    496e:	b6 01       	movw	r22, r12
    4970:	09 c0       	rjmp	.+18     	; 0x4984 <strtod+0x2b0>
    4972:	60 e0       	ldi	r22, 0x00	; 0
    4974:	70 e0       	ldi	r23, 0x00	; 0
    4976:	80 e8       	ldi	r24, 0x80	; 128
    4978:	9f ef       	ldi	r25, 0xFF	; 255
    497a:	04 c0       	rjmp	.+8      	; 0x4984 <strtod+0x2b0>
    497c:	60 e0       	ldi	r22, 0x00	; 0
    497e:	70 e0       	ldi	r23, 0x00	; 0
    4980:	80 ec       	ldi	r24, 0xC0	; 192
    4982:	9f e7       	ldi	r25, 0x7F	; 127
    4984:	cd b7       	in	r28, 0x3d	; 61
    4986:	de b7       	in	r29, 0x3e	; 62
    4988:	ee e0       	ldi	r30, 0x0E	; 14
    498a:	0c 94 e2 25 	jmp	0x4bc4	; 0x4bc4 <__epilogue_restores__+0x8>

0000498e <__ftoa_engine>:
    498e:	28 30       	cpi	r18, 0x08	; 8
    4990:	08 f0       	brcs	.+2      	; 0x4994 <__ftoa_engine+0x6>
    4992:	27 e0       	ldi	r18, 0x07	; 7
    4994:	33 27       	eor	r19, r19
    4996:	da 01       	movw	r26, r20
    4998:	99 0f       	add	r25, r25
    499a:	31 1d       	adc	r19, r1
    499c:	87 fd       	sbrc	r24, 7
    499e:	91 60       	ori	r25, 0x01	; 1
    49a0:	00 96       	adiw	r24, 0x00	; 0
    49a2:	61 05       	cpc	r22, r1
    49a4:	71 05       	cpc	r23, r1
    49a6:	39 f4       	brne	.+14     	; 0x49b6 <__ftoa_engine+0x28>
    49a8:	32 60       	ori	r19, 0x02	; 2
    49aa:	2e 5f       	subi	r18, 0xFE	; 254
    49ac:	3d 93       	st	X+, r19
    49ae:	30 e3       	ldi	r19, 0x30	; 48
    49b0:	2a 95       	dec	r18
    49b2:	e1 f7       	brne	.-8      	; 0x49ac <__ftoa_engine+0x1e>
    49b4:	08 95       	ret
    49b6:	9f 3f       	cpi	r25, 0xFF	; 255
    49b8:	30 f0       	brcs	.+12     	; 0x49c6 <__ftoa_engine+0x38>
    49ba:	80 38       	cpi	r24, 0x80	; 128
    49bc:	71 05       	cpc	r23, r1
    49be:	61 05       	cpc	r22, r1
    49c0:	09 f0       	breq	.+2      	; 0x49c4 <__ftoa_engine+0x36>
    49c2:	3c 5f       	subi	r19, 0xFC	; 252
    49c4:	3c 5f       	subi	r19, 0xFC	; 252
    49c6:	3d 93       	st	X+, r19
    49c8:	91 30       	cpi	r25, 0x01	; 1
    49ca:	08 f0       	brcs	.+2      	; 0x49ce <__ftoa_engine+0x40>
    49cc:	80 68       	ori	r24, 0x80	; 128
    49ce:	91 1d       	adc	r25, r1
    49d0:	df 93       	push	r29
    49d2:	cf 93       	push	r28
    49d4:	1f 93       	push	r17
    49d6:	0f 93       	push	r16
    49d8:	ff 92       	push	r15
    49da:	ef 92       	push	r14
    49dc:	19 2f       	mov	r17, r25
    49de:	98 7f       	andi	r25, 0xF8	; 248
    49e0:	96 95       	lsr	r25
    49e2:	e9 2f       	mov	r30, r25
    49e4:	96 95       	lsr	r25
    49e6:	96 95       	lsr	r25
    49e8:	e9 0f       	add	r30, r25
    49ea:	ff 27       	eor	r31, r31
    49ec:	e1 52       	subi	r30, 0x21	; 33
    49ee:	fe 4f       	sbci	r31, 0xFE	; 254
    49f0:	99 27       	eor	r25, r25
    49f2:	33 27       	eor	r19, r19
    49f4:	ee 24       	eor	r14, r14
    49f6:	ff 24       	eor	r15, r15
    49f8:	a7 01       	movw	r20, r14
    49fa:	e7 01       	movw	r28, r14
    49fc:	05 90       	lpm	r0, Z+
    49fe:	08 94       	sec
    4a00:	07 94       	ror	r0
    4a02:	28 f4       	brcc	.+10     	; 0x4a0e <__ftoa_engine+0x80>
    4a04:	36 0f       	add	r19, r22
    4a06:	e7 1e       	adc	r14, r23
    4a08:	f8 1e       	adc	r15, r24
    4a0a:	49 1f       	adc	r20, r25
    4a0c:	51 1d       	adc	r21, r1
    4a0e:	66 0f       	add	r22, r22
    4a10:	77 1f       	adc	r23, r23
    4a12:	88 1f       	adc	r24, r24
    4a14:	99 1f       	adc	r25, r25
    4a16:	06 94       	lsr	r0
    4a18:	a1 f7       	brne	.-24     	; 0x4a02 <__ftoa_engine+0x74>
    4a1a:	05 90       	lpm	r0, Z+
    4a1c:	07 94       	ror	r0
    4a1e:	28 f4       	brcc	.+10     	; 0x4a2a <__ftoa_engine+0x9c>
    4a20:	e7 0e       	add	r14, r23
    4a22:	f8 1e       	adc	r15, r24
    4a24:	49 1f       	adc	r20, r25
    4a26:	56 1f       	adc	r21, r22
    4a28:	c1 1d       	adc	r28, r1
    4a2a:	77 0f       	add	r23, r23
    4a2c:	88 1f       	adc	r24, r24
    4a2e:	99 1f       	adc	r25, r25
    4a30:	66 1f       	adc	r22, r22
    4a32:	06 94       	lsr	r0
    4a34:	a1 f7       	brne	.-24     	; 0x4a1e <__ftoa_engine+0x90>
    4a36:	05 90       	lpm	r0, Z+
    4a38:	07 94       	ror	r0
    4a3a:	28 f4       	brcc	.+10     	; 0x4a46 <__ftoa_engine+0xb8>
    4a3c:	f8 0e       	add	r15, r24
    4a3e:	49 1f       	adc	r20, r25
    4a40:	56 1f       	adc	r21, r22
    4a42:	c7 1f       	adc	r28, r23
    4a44:	d1 1d       	adc	r29, r1
    4a46:	88 0f       	add	r24, r24
    4a48:	99 1f       	adc	r25, r25
    4a4a:	66 1f       	adc	r22, r22
    4a4c:	77 1f       	adc	r23, r23
    4a4e:	06 94       	lsr	r0
    4a50:	a1 f7       	brne	.-24     	; 0x4a3a <__ftoa_engine+0xac>
    4a52:	05 90       	lpm	r0, Z+
    4a54:	07 94       	ror	r0
    4a56:	20 f4       	brcc	.+8      	; 0x4a60 <__ftoa_engine+0xd2>
    4a58:	49 0f       	add	r20, r25
    4a5a:	56 1f       	adc	r21, r22
    4a5c:	c7 1f       	adc	r28, r23
    4a5e:	d8 1f       	adc	r29, r24
    4a60:	99 0f       	add	r25, r25
    4a62:	66 1f       	adc	r22, r22
    4a64:	77 1f       	adc	r23, r23
    4a66:	88 1f       	adc	r24, r24
    4a68:	06 94       	lsr	r0
    4a6a:	a9 f7       	brne	.-22     	; 0x4a56 <__ftoa_engine+0xc8>
    4a6c:	84 91       	lpm	r24, Z
    4a6e:	10 95       	com	r17
    4a70:	17 70       	andi	r17, 0x07	; 7
    4a72:	41 f0       	breq	.+16     	; 0x4a84 <__ftoa_engine+0xf6>
    4a74:	d6 95       	lsr	r29
    4a76:	c7 95       	ror	r28
    4a78:	57 95       	ror	r21
    4a7a:	47 95       	ror	r20
    4a7c:	f7 94       	ror	r15
    4a7e:	e7 94       	ror	r14
    4a80:	1a 95       	dec	r17
    4a82:	c1 f7       	brne	.-16     	; 0x4a74 <__ftoa_engine+0xe6>
    4a84:	e5 e8       	ldi	r30, 0x85	; 133
    4a86:	f1 e0       	ldi	r31, 0x01	; 1
    4a88:	68 94       	set
    4a8a:	15 90       	lpm	r1, Z+
    4a8c:	15 91       	lpm	r17, Z+
    4a8e:	35 91       	lpm	r19, Z+
    4a90:	65 91       	lpm	r22, Z+
    4a92:	95 91       	lpm	r25, Z+
    4a94:	05 90       	lpm	r0, Z+
    4a96:	7f e2       	ldi	r23, 0x2F	; 47
    4a98:	73 95       	inc	r23
    4a9a:	e1 18       	sub	r14, r1
    4a9c:	f1 0a       	sbc	r15, r17
    4a9e:	43 0b       	sbc	r20, r19
    4aa0:	56 0b       	sbc	r21, r22
    4aa2:	c9 0b       	sbc	r28, r25
    4aa4:	d0 09       	sbc	r29, r0
    4aa6:	c0 f7       	brcc	.-16     	; 0x4a98 <__ftoa_engine+0x10a>
    4aa8:	e1 0c       	add	r14, r1
    4aaa:	f1 1e       	adc	r15, r17
    4aac:	43 1f       	adc	r20, r19
    4aae:	56 1f       	adc	r21, r22
    4ab0:	c9 1f       	adc	r28, r25
    4ab2:	d0 1d       	adc	r29, r0
    4ab4:	7e f4       	brtc	.+30     	; 0x4ad4 <__ftoa_engine+0x146>
    4ab6:	70 33       	cpi	r23, 0x30	; 48
    4ab8:	11 f4       	brne	.+4      	; 0x4abe <__ftoa_engine+0x130>
    4aba:	8a 95       	dec	r24
    4abc:	e6 cf       	rjmp	.-52     	; 0x4a8a <__ftoa_engine+0xfc>
    4abe:	e8 94       	clt
    4ac0:	01 50       	subi	r16, 0x01	; 1
    4ac2:	30 f0       	brcs	.+12     	; 0x4ad0 <__ftoa_engine+0x142>
    4ac4:	08 0f       	add	r16, r24
    4ac6:	0a f4       	brpl	.+2      	; 0x4aca <__ftoa_engine+0x13c>
    4ac8:	00 27       	eor	r16, r16
    4aca:	02 17       	cp	r16, r18
    4acc:	08 f4       	brcc	.+2      	; 0x4ad0 <__ftoa_engine+0x142>
    4ace:	20 2f       	mov	r18, r16
    4ad0:	23 95       	inc	r18
    4ad2:	02 2f       	mov	r16, r18
    4ad4:	7a 33       	cpi	r23, 0x3A	; 58
    4ad6:	28 f0       	brcs	.+10     	; 0x4ae2 <__ftoa_engine+0x154>
    4ad8:	79 e3       	ldi	r23, 0x39	; 57
    4ada:	7d 93       	st	X+, r23
    4adc:	2a 95       	dec	r18
    4ade:	e9 f7       	brne	.-6      	; 0x4ada <__ftoa_engine+0x14c>
    4ae0:	10 c0       	rjmp	.+32     	; 0x4b02 <__ftoa_engine+0x174>
    4ae2:	7d 93       	st	X+, r23
    4ae4:	2a 95       	dec	r18
    4ae6:	89 f6       	brne	.-94     	; 0x4a8a <__ftoa_engine+0xfc>
    4ae8:	06 94       	lsr	r0
    4aea:	97 95       	ror	r25
    4aec:	67 95       	ror	r22
    4aee:	37 95       	ror	r19
    4af0:	17 95       	ror	r17
    4af2:	17 94       	ror	r1
    4af4:	e1 18       	sub	r14, r1
    4af6:	f1 0a       	sbc	r15, r17
    4af8:	43 0b       	sbc	r20, r19
    4afa:	56 0b       	sbc	r21, r22
    4afc:	c9 0b       	sbc	r28, r25
    4afe:	d0 09       	sbc	r29, r0
    4b00:	98 f0       	brcs	.+38     	; 0x4b28 <__ftoa_engine+0x19a>
    4b02:	23 95       	inc	r18
    4b04:	7e 91       	ld	r23, -X
    4b06:	73 95       	inc	r23
    4b08:	7a 33       	cpi	r23, 0x3A	; 58
    4b0a:	08 f0       	brcs	.+2      	; 0x4b0e <__ftoa_engine+0x180>
    4b0c:	70 e3       	ldi	r23, 0x30	; 48
    4b0e:	7c 93       	st	X, r23
    4b10:	20 13       	cpse	r18, r16
    4b12:	b8 f7       	brcc	.-18     	; 0x4b02 <__ftoa_engine+0x174>
    4b14:	7e 91       	ld	r23, -X
    4b16:	70 61       	ori	r23, 0x10	; 16
    4b18:	7d 93       	st	X+, r23
    4b1a:	30 f0       	brcs	.+12     	; 0x4b28 <__ftoa_engine+0x19a>
    4b1c:	83 95       	inc	r24
    4b1e:	71 e3       	ldi	r23, 0x31	; 49
    4b20:	7d 93       	st	X+, r23
    4b22:	70 e3       	ldi	r23, 0x30	; 48
    4b24:	2a 95       	dec	r18
    4b26:	e1 f7       	brne	.-8      	; 0x4b20 <__ftoa_engine+0x192>
    4b28:	11 24       	eor	r1, r1
    4b2a:	ef 90       	pop	r14
    4b2c:	ff 90       	pop	r15
    4b2e:	0f 91       	pop	r16
    4b30:	1f 91       	pop	r17
    4b32:	cf 91       	pop	r28
    4b34:	df 91       	pop	r29
    4b36:	99 27       	eor	r25, r25
    4b38:	87 fd       	sbrc	r24, 7
    4b3a:	90 95       	com	r25
    4b3c:	08 95       	ret

00004b3e <__ctype_isfalse>:
    4b3e:	99 27       	eor	r25, r25
    4b40:	88 27       	eor	r24, r24

00004b42 <__ctype_istrue>:
    4b42:	08 95       	ret

00004b44 <strncasecmp_P>:
    4b44:	fb 01       	movw	r30, r22
    4b46:	dc 01       	movw	r26, r24
    4b48:	41 50       	subi	r20, 0x01	; 1
    4b4a:	50 40       	sbci	r21, 0x00	; 0
    4b4c:	88 f0       	brcs	.+34     	; 0x4b70 <strncasecmp_P+0x2c>
    4b4e:	8d 91       	ld	r24, X+
    4b50:	81 34       	cpi	r24, 0x41	; 65
    4b52:	1c f0       	brlt	.+6      	; 0x4b5a <strncasecmp_P+0x16>
    4b54:	8b 35       	cpi	r24, 0x5B	; 91
    4b56:	0c f4       	brge	.+2      	; 0x4b5a <strncasecmp_P+0x16>
    4b58:	80 5e       	subi	r24, 0xE0	; 224
    4b5a:	65 91       	lpm	r22, Z+
    4b5c:	61 34       	cpi	r22, 0x41	; 65
    4b5e:	1c f0       	brlt	.+6      	; 0x4b66 <strncasecmp_P+0x22>
    4b60:	6b 35       	cpi	r22, 0x5B	; 91
    4b62:	0c f4       	brge	.+2      	; 0x4b66 <strncasecmp_P+0x22>
    4b64:	60 5e       	subi	r22, 0xE0	; 224
    4b66:	86 1b       	sub	r24, r22
    4b68:	61 11       	cpse	r22, r1
    4b6a:	71 f3       	breq	.-36     	; 0x4b48 <strncasecmp_P+0x4>
    4b6c:	99 0b       	sbc	r25, r25
    4b6e:	08 95       	ret
    4b70:	88 1b       	sub	r24, r24
    4b72:	fc cf       	rjmp	.-8      	; 0x4b6c <strncasecmp_P+0x28>

00004b74 <__mulshisi3>:
    4b74:	b7 ff       	sbrs	r27, 7
    4b76:	0c 94 f7 19 	jmp	0x33ee	; 0x33ee <__muluhisi3>

00004b7a <__mulohisi3>:
    4b7a:	0e 94 f7 19 	call	0x33ee	; 0x33ee <__muluhisi3>
    4b7e:	82 1b       	sub	r24, r18
    4b80:	93 0b       	sbc	r25, r19
    4b82:	08 95       	ret

00004b84 <__prologue_saves__>:
    4b84:	2f 92       	push	r2
    4b86:	3f 92       	push	r3
    4b88:	4f 92       	push	r4
    4b8a:	5f 92       	push	r5
    4b8c:	6f 92       	push	r6
    4b8e:	7f 92       	push	r7
    4b90:	8f 92       	push	r8
    4b92:	9f 92       	push	r9
    4b94:	af 92       	push	r10
    4b96:	bf 92       	push	r11
    4b98:	cf 92       	push	r12
    4b9a:	df 92       	push	r13
    4b9c:	ef 92       	push	r14
    4b9e:	ff 92       	push	r15
    4ba0:	0f 93       	push	r16
    4ba2:	1f 93       	push	r17
    4ba4:	cf 93       	push	r28
    4ba6:	df 93       	push	r29
    4ba8:	cd b7       	in	r28, 0x3d	; 61
    4baa:	de b7       	in	r29, 0x3e	; 62
    4bac:	ca 1b       	sub	r28, r26
    4bae:	db 0b       	sbc	r29, r27
    4bb0:	0f b6       	in	r0, 0x3f	; 63
    4bb2:	f8 94       	cli
    4bb4:	de bf       	out	0x3e, r29	; 62
    4bb6:	0f be       	out	0x3f, r0	; 63
    4bb8:	cd bf       	out	0x3d, r28	; 61
    4bba:	09 94       	ijmp

00004bbc <__epilogue_restores__>:
    4bbc:	2a 88       	ldd	r2, Y+18	; 0x12
    4bbe:	39 88       	ldd	r3, Y+17	; 0x11
    4bc0:	48 88       	ldd	r4, Y+16	; 0x10
    4bc2:	5f 84       	ldd	r5, Y+15	; 0x0f
    4bc4:	6e 84       	ldd	r6, Y+14	; 0x0e
    4bc6:	7d 84       	ldd	r7, Y+13	; 0x0d
    4bc8:	8c 84       	ldd	r8, Y+12	; 0x0c
    4bca:	9b 84       	ldd	r9, Y+11	; 0x0b
    4bcc:	aa 84       	ldd	r10, Y+10	; 0x0a
    4bce:	b9 84       	ldd	r11, Y+9	; 0x09
    4bd0:	c8 84       	ldd	r12, Y+8	; 0x08
    4bd2:	df 80       	ldd	r13, Y+7	; 0x07
    4bd4:	ee 80       	ldd	r14, Y+6	; 0x06
    4bd6:	fd 80       	ldd	r15, Y+5	; 0x05
    4bd8:	0c 81       	ldd	r16, Y+4	; 0x04
    4bda:	1b 81       	ldd	r17, Y+3	; 0x03
    4bdc:	aa 81       	ldd	r26, Y+2	; 0x02
    4bde:	b9 81       	ldd	r27, Y+1	; 0x01
    4be0:	ce 0f       	add	r28, r30
    4be2:	d1 1d       	adc	r29, r1
    4be4:	0f b6       	in	r0, 0x3f	; 63
    4be6:	f8 94       	cli
    4be8:	de bf       	out	0x3e, r29	; 62
    4bea:	0f be       	out	0x3f, r0	; 63
    4bec:	cd bf       	out	0x3d, r28	; 61
    4bee:	ed 01       	movw	r28, r26
    4bf0:	08 95       	ret

00004bf2 <__do_global_dtors>:
    4bf2:	11 e0       	ldi	r17, 0x01	; 1
    4bf4:	c3 e4       	ldi	r28, 0x43	; 67
    4bf6:	d1 e0       	ldi	r29, 0x01	; 1
    4bf8:	04 c0       	rjmp	.+8      	; 0x4c02 <__do_global_dtors+0x10>
    4bfa:	fe 01       	movw	r30, r28
    4bfc:	0e 94 02 1a 	call	0x3404	; 0x3404 <__tablejump2__>
    4c00:	21 96       	adiw	r28, 0x01	; 1
    4c02:	c4 34       	cpi	r28, 0x44	; 68
    4c04:	d1 07       	cpc	r29, r17
    4c06:	c9 f7       	brne	.-14     	; 0x4bfa <__do_global_dtors+0x8>
    4c08:	f8 94       	cli

00004c0a <__stop_program>:
    4c0a:	ff cf       	rjmp	.-2      	; 0x4c0a <__stop_program>
